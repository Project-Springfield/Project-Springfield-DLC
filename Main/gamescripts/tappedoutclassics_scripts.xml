<ScriptPackage>
	<DeepSpaceHomer_Start>
		<Action type="reparseBuildMenu" />
		<Action type="actionSequence" script="TappedOutClassics_Scripts:DeepSpaceHomer_ReRunStarted" />
	</DeepSpaceHomer_Start>
	<DeepSpaceHomer_End>
		<Action type="setVariable" intVariable="DEEP_SPACE_HOMER_ENABLED" intValue="0" />
		<Action type="setVariable" intVariable="DSH_Complete" intValue="1" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    // Create timer for the store, after the event ends
                    var currentTime = serverTime(0);
                    var endTime = currentTime + fromDays(8);

                    // Round up to the next day at 8am GMT
                    endTime = endTime - mod(endTime,fromDays(1)) + fromDays(1) + fromHours(8);

                    // After-event store timer
                    var timerArray = Array::create('name'=>'DSH_Store_Timer','start'=>currentTime,'end'=>endTime);
                    Timer::add(timerArray);
                ]]></Program>
		</Action>
		<Action type="reparseBuildMenu" />
		<Action type="focusOnMenuItem" menuCategory="DSHCategory_PostEvent" />
	</DeepSpaceHomer_End>
	<DeepSpaceHomer_ReRunStarted>
		<Action type="checkRequirements">
			<Requirement type="quest started" quest="CheapSpaceHomer_1" />
			<True>
				<Action type="runScript" package="DSH_Scripts" script="ShowMiniEventPanel" />
				<Action type="runScript" package="TappedOutClassics_Scripts" script="DeepSpaceHomer_Active" />
			</True>
		</Action>
	</DeepSpaceHomer_ReRunStarted>
	<DeepSpaceHomer_Active>
		<Action type="setVariable" intVariable="DEEP_SPACE_HOMER_ENABLED" intValue="1" />
		<Action type="setVariable" boolVariable="MarsWon_Complete" boolValue="true" />
	</DeepSpaceHomer_Active>
	<HomersChiliad_Start>
		<Action type="reparseBuildMenu" />
		<Action type="actionSequence" script="TappedOutClassics_Scripts:HomersChiliad_ReRunStarted" />
	</HomersChiliad_Start>
	<HomersChiliad_End>
		<Action type="setVariable" intVariable="HOMERSCHILIAD_ENABLED" intValue="0" />
		<Action type="setVariable" intVariable="HomersChiliad_Complete" intValue="1" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    // Create timer for the store, after the event ends
                    var currentTime = serverTime(0);
                    var endTime = currentTime + fromDays(8);

                    // Round up to the next day at 8am GMT
                    endTime = endTime - mod(endTime,fromDays(1)) + fromDays(1) + fromHours(8);

                    // After-event store timer
                    var timerArray = Array::create('name'=>'HomersChiliad_Store_Timer','start'=>currentTime,'end'=>endTime);
                    Timer::add(timerArray);
                ]]></Program>
		</Action>
		<Action type="reparseBuildMenu" />
		<Action type="focusOnMenuItem" menuCategory="HomersChiliadCategory_PostEvent" />
	</HomersChiliad_End>
	<HomersChiliad_ReRunStarted>
		<Action type="checkRequirements">
			<Requirement type="quest started" quest="ItsNotTheHeatItsTheHumidity_1" />
			<True>
				<Action type="runScript" package="HomersChiliad_Scripts" script="ShowMiniEventIntro" />
				<Action type="runScript" package="TappedOutClassics_Scripts" script="HomersChiliad_CheckActive" />
			</True>
		</Action>
	</HomersChiliad_ReRunStarted>
	<HomersChiliad_CheckActive>
		<Action type="setVariable" intVariable="HOMERSCHILIAD_ENABLED" intValue="1" />
		<Action type="setVariable" boolVariable="HomersChiliad_IntroSeen" boolValue="true" />
	</HomersChiliad_CheckActive>
	<HomerTheHeretic_Start>
		<Action type="reparseBuildMenu" />
		<Action type="actionSequence" script="TappedOutClassics_Scripts:HomerTheHeretic_ReRunStarted" />
	</HomerTheHeretic_Start>
	<HomerTheHeretic_End>
		<Action type="setVariable" intVariable="HOMERTHEHERETIC_ENABLED" intValue="0" />
		<Action type="setVariable" intVariable="HomerTheHeretic_Complete" intValue="1" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    // Create timer for the store, after the event ends
                    var currentTime = serverTime(0);
                    var endTime = currentTime + fromDays(8);

                    // Round up to the next day at 8am GMT
                    endTime = endTime - mod(endTime,fromDays(1)) + fromDays(1) + fromHours(8);

                    // After-event store timer
                    var timerArray = Array::create('name'=>'HomerTheHeretic_Store_Timer','start'=>currentTime,'end'=>endTime);
                    Timer::add(timerArray);
                ]]></Program>
		</Action>
		<Action type="reparseBuildMenu" />
	</HomerTheHeretic_End>
	<HomerTheHeretic_ReRunStarted>
		<Action type="checkRequirements">
			<Requirement type="quest started" quest="HomerTheHeretic_1" />
			<True>
				<Action type="runScript" package="HomerTheHeretic_Scripts" script="ShowMiniEventPanel" />
				<Action type="runScript" package="TappedOutClassics_Scripts" script="HomerTheHeretic_Active" />
			</True>
		</Action>
	</HomerTheHeretic_ReRunStarted>
	<HomerTheHeretic_Active>
		<Action type="setVariable" intVariable="HOMERTHEHERETIC_ENABLED" intValue="1" />
		<Action type="setVariable" boolVariable="HomerTheHeretic_IntroComplete" boolValue="true" />
		<Action type="setVariable" boolVariable="HomerTheHeretic_PanelSeen" boolValue="true" />
	</HomerTheHeretic_Active>
	<Rommelwood_Start>
		<Action type="reparseBuildMenu" />
		<Action type="actionSequence" script="TappedOutClassics_Scripts:Rommelwood_ReRunStarted" />
	</Rommelwood_Start>
	<Rommelwood_End>
		<Action type="setVariable" intVariable="ROMMELWOOD_ENABLED" intValue="0" />
		<Action type="setVariable" intVariable="Rommelwood_Complete" intValue="1" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    // Create timer for the store, after the event ends
                    var currentTime = serverTime(0);
                    var endTime = currentTime + fromDays(8);

                    // Round up to the next day at 8am GMT
                    endTime = endTime - mod(endTime,fromDays(1)) + fromDays(1) + fromHours(8);

                    // After-event store timer
                    var timerArray = Array::create('name'=>'Rommelwood_Store_Timer','start'=>currentTime,'end'=>endTime);
                    Timer::add(timerArray);
                ]]></Program>
		</Action>
		<Action type="reparseBuildMenu" />
		<Action type="focusOnMenuItem" menuCategory="RommelwoodAcademy_PostEvent" />
	</Rommelwood_End>
	<Rommelwood_ReRunStarted>
		<Action type="checkRequirements">
			<Requirement type="quest started" quest="LeftRightLeft_1" />
			<True>
				<Action type="runScript" package="Rommelwood_Scripts" script="ShowMiniEventIntro" />
				<Action type="runScript" package="TappedOutClassics_Scripts" script="Rommelwood_Active" />
			</True>
		</Action>
	</Rommelwood_ReRunStarted>
	<Rommelwood_Active>
		<Action type="setVariable" intVariable="ROMMELWOOD_ENABLED" intValue="1" />
		<Action type="setVariable" boolVariable="Rommelwood_IntroSeen" boolValue="true" />
	</Rommelwood_Active>
</ScriptPackage>