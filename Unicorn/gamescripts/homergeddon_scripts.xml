<ScriptPackage>
	<PrizeListButtonPressed runQueueState="RunInAnyState">
		<Action type="checkExpression" expression="Homergeddon_EventHubTabValue">
			<ExpressionCase value="0">
				<Action type="runScript" script="Homergeddon_Scripts:Tab_PrizeTrack" />
			</ExpressionCase>
			<ExpressionCase value="1">
				<Action type="runScript" script="Homergeddon_Scripts:Tab_Forts" />
			</ExpressionCase>
			<ExpressionCase value="2">
				<Action type="runScript" script="Homergeddon_Scripts:Tab_Crafting" />
			</ExpressionCase>
		</Action>
	</PrizeListButtonPressed>
	<EnableFortifyAssaultJobs>
		<Action type="setVariable" boolVariable="FortifyAndAssaultEnabled" boolValue="true" />
	</EnableFortifyAssaultJobs>
	<DisableFortifyAssaultJobs>
		<Action type="setVariable" boolVariable="FortifyAndAssaultEnabled" boolValue="false" />
	</DisableFortifyAssaultJobs>
	<GuidePanel_Event>
		<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="0" />
		<Action type="updateVariable" variable="Homergeddon_EventGuideSeen" value="1" />
		<Action type="gotoState" state="State_HubGuidePanel" extras="Homergeddon_GuidePanelsConfig:PrizeTrackGuide_Config" />
	</GuidePanel_Event>
	<Tab_PrizeTrack>
		<Action type="if">
			<If expression="Homergeddon_EventGuideSeen">
				<Then>
					<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="0" />
					<Action type="gotoState" state="GameState_HubPrizeTrack" forceState="true">
						<Extras>
							<Attribute name="helpButtonScript" value="Homergeddon_Scripts:GuidePanel_Event" />
							<Attribute name="specialEvent" value="Homergeddon_Event" />
							<Attribute name="exitButtonScript" value="MiscScripts:GoToInGame" />
						</Extras>
					</Action>
					<Action type="markBadgeViewed" badgeName="Homergeddon_PrizeTrackBadge" />
				</Then>
			</If>
			<Else>
				<Then>
					<Action type="actionSequence" script="Homergeddon_Scripts:GuidePanel_Event" />
				</Then>
			</Else>
		</Action>
	</Tab_PrizeTrack>
	<ActOnePrizeTrackTab ignoreHUD="true">
		<Action type="notification" title="UI_Homergeddon_Title" button="UI_OK" text="UI_Superheroes2_PrizeTrack_Future_text" tooltip="UI_Superheroes2_PrizeTrack_Future_toolTip" icon="ICO_PRIZ_Homergeddon_Act2PopUp_LG" darken="true" />
	</ActOnePrizeTrackTab>
	<ActTwoPrizeTrackTab ignoreHUD="true">
		<Action type="notification" title="UI_Homergeddon_Title" button="UI_OK" text="UI_Superheroes2_PrizeTrack_Future_text" tooltip="UI_Superheroes2_PrizeTrack_Future_toolTip" icon="ICO_PRIZ_Homergeddon_Act3PopUp_LG" darken="true" />
	</ActTwoPrizeTrackTab>
	<GuidePanel_Forts ignoreHUD="true">
		<Action type="sound" sound="UIButton" />
		<Action type="runScript" script="Homergeddon_Scripts:GuidePanel_Forts_NoSound" />
	</GuidePanel_Forts>
	<GuidePanel_Forts_NoSound ignoreHUD="true">
		<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="1" />
		<Action type="updateVariable" variable="Homergeddon_FortsGuideSeen" value="1" />
		<Action type="gotoState" state="State_HubGuidePanel" extras="Homergeddon_GuidePanelsConfig:FortsGuide_Config" />
	</GuidePanel_Forts_NoSound>
	<GuidePanel_Forts_Center>
		<Action type="updateVariable" variable="Homergeddon_FortsGuideSeen" value="1" />
		<Action type="gotoState" state="State_HubGuidePanel" extras="Homergeddon_GuidePanelsConfig:FortsGuide_Config">
			<Extras>
				<Attribute name="ExitButtonScript" value="MiscScripts:ReturnToGameState" />
				<Attribute name="Center" value="true" />
			</Extras>
		</Action>
	</GuidePanel_Forts_Center>
	<OpenMenu_Forts>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="1" />
				<Action type="markBadgeViewed" badgeName="Homergeddon_FortsBadge" />
				<Action type="gotoState" state="GameState_BuildingFinder">
					<Extras>
						<Attribute name="menuConfig" value="Homergeddon_MenuConfig:Homergeddon_BuildingFinder" />
						<Attribute name="exitButtonScript" value="MiscScripts:GoToInGame" />
						<Attribute name="specialEvent" value="Homergeddon_Event" />
					</Extras>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</OpenMenu_Forts>
	<Tab_Forts>
		<Action type="if">
			<If>
				<Requirement type="reqList" location="Homergeddon_Requirements:Forts_Unlocked" />
				<Then>
					<Action type="if">
						<If>
							<Requirement type="conditional" logic="OR">
								<Requirement type="reqList" location="Homergeddon_Requirements:ArrangementBonus_Unlocked" not="true" />
								<Requirement type="variable" variable="Homergeddon_FortsGuideSeen" />
							</Requirement>
							<Then>
								<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="1" />
								<Action type="actionSequence" script="Homergeddon_Scripts:OpenMenu_Forts" />
							</Then>
						</If>
						<Else>
							<Then>
								<Action type="actionSequence" script="Homergeddon_Scripts:GuidePanel_Forts" />
								<Action type="updateVariable" variable="Homergeddon_FortsGuideSeen" value="1" />
							</Then>
						</Else>
					</Action>
				</Then>
			</If>
		</Action>
	</Tab_Forts>
	<GuidePanel_Crafting>
		<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="2" />
		<Action type="updateVariable" variable="Homergeddon_CraftingGuideSeen" value="1" />
		<Action type="gotoState" state="State_HubGuidePanel" extras="Homergeddon_GuidePanelsConfig:CraftingGuide_Config" />
	</GuidePanel_Crafting>
	<GuidePanel_Crafting_Center>
		<Action type="updateVariable" variable="Homergeddon_CraftingGuideSeen" value="1" />
		<Action type="gotoState" state="State_HubGuidePanel" extras="Homergeddon_GuidePanelsConfig:CraftingGuide_Config">
			<Extras>
				<Attribute name="ExitButtonScript" value="MiscScripts:ReturnToGameState" />
				<Attribute name="Center" value="true" />
			</Extras>
		</Action>
	</GuidePanel_Crafting_Center>
	<Tab_Crafting>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="if">
					<If expression="Homergeddon_CraftingGuideSeen">
						<Then>
							<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="2" />
							<Action type="gotoState" state="GameState_HubCraftingMenu" forceState="false">
								<Extras>
									<Attribute name="MenuConfig" value="Homergeddon_CraftingConfig:CraftingMenu" />
									<Attribute name="ExitButtonScript" value="MiscScripts:GoToInGame" />
									<Attribute name="onLoadScript" value="Homergeddon_Scripts_Crafting:UpdateCrafting" />
									<Attribute name="specialEvent" value="Homergeddon_Event" />
								</Extras>
							</Action>
							<Action type="markBadgeViewed" badgeName="Homergeddon_CraftingBadge" />
						</Then>
					</If>
					<Else>
						<Then>
							<Action type="actionSequence" script="Homergeddon_Scripts:GuidePanel_Crafting" />
						</Then>
					</Else>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</Tab_Crafting>
	<Tab_Crafting_ScrollTo_TrenchStraight>
		<Action type="actionSequence" script="Homergeddon_Scripts:Tab_Crafting_ScrollTo">
			<FormatToken key="ItemToScrollTo" value="BLD_StraightTrench_name" />
		</Action>
	</Tab_Crafting_ScrollTo_TrenchStraight>
	<RecommendStoreCategory ignoreHUD="true">
		<Action type="clearRecommendations" category="Event" name="Homergeddon_ThreePanel" />
		<Action type="recommendation" recType="Event" name="Homergeddon_ThreePanel" eventName="UI_Homergeddon_Title" />
	</RecommendStoreCategory>
	<RecommendStoreOnePanel ignoreHUD="true">
		<Action type="clearRecommendations" category="Event" name="Homergeddon_ThreePanel" />
		<Action type="clearRecommendations" category="Event" name="Homergeddon_OnePanel" />
		<Action type="recommendation" recType="Event" name="Homergeddon_OnePanel" eventName="UI_Homergeddon_Title" limitedTime="true" limitedTimeEndDate="Homergeddon_EndDate" />
	</RecommendStoreOnePanel>
	<EnterStoreCategory ignoreHUD="true">
		<Action type="focusOnMenuItem" menuCategory="Homergeddon_Category" />
	</EnterStoreCategory>
	<Tab_Crafting_ScrollTo>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="2" />
				<Action type="gotoState" state="GameState_HubCraftingMenu" forceState="false" formatMe="deep">
					<Extras>
						<Attribute name="MenuConfig" value="Homergeddon_CraftingConfig:CraftingMenu" />
						<Attribute name="ExitButtonScript" value="MiscScripts:GoToInGame" />
						<Attribute name="onLoadScript" value="Homergeddon_Scripts_Crafting:UpdateCrafting" />
						<Attribute name="specialEvent" value="Homergeddon" />
						<Attribute name="ItemToScrollTo" value="{ItemToScrollTo}" />
					</Extras>
				</Action>
				<Action type="markBadgeViewed" badgeName="Homergeddon_CraftingBadge" />
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</Tab_Crafting_ScrollTo>
	<GetMoreCraftingCurrency>
		<Action type="if">
			<If>
				<Requirement type="conditional" logic="OR">
					<Requirement type="JobState" job="KidsAssaultMegaPlayscape" state="WaitingOnAwards" />
					<Requirement type="JobState" job="KidsAssaultMegaPlayscapeSansLocators" state="WaitingOnAwards" />
					<Requirement type="JobState" job="AdultsAssaultMegaPlayscape" state="WaitingOnAwards" />
					<Requirement type="JobState" job="AdultsAssaultMegaPlayscapeSansLocators" state="WaitingOnAwards" />
					<Requirement type="JobState" job="KidsFortifyMegaPlayscape" state="WaitingOnAwards" />
					<Requirement type="JobState" job="AdultsFortifyMegaPlayscape" state="WaitingOnAwards" />
				</Requirement>
				<Then>
					<Action type="pantoobject" building="MegaPlayscape" />
				</Then>
			</If>
			<ElseIf>
				<Requirement type="conditional" logic="OR">
					<Requirement type="JobState" job="KidsAssaultJunkBase" state="WaitingOnAwards" />
					<Requirement type="JobState" job="KidsAssaultJunkBaseSansLocators" state="WaitingOnAwards" />
					<Requirement type="JobState" job="AdultsFortifyJunkBase" state="WaitingOnAwards" />
				</Requirement>
				<Then>
					<Action type="pantoobject" building="JunkBase" />
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirement type="conditional" logic="OR">
					<Requirement type="JobState" job="AssaultRuffianFort" state="WaitingOnAwards" />
					<Requirement type="JobState" job="AssaultRuffianFortSansLocators" state="WaitingOnAwards" />
				</Requirement>
				<Then>
					<Action type="pantoobject" building="RuffianFort" />
				</Then>
			</ElseIf>
			<ElseIf expression="#program;                 if(User::getVariable('BankedRuffians') &gt; 0)                 {                     return true;                 }                 else                 {                     var character = Character::find('Ruffian');                     var characterInstanceList = Land::getAllInstancesOfObject(character);                     foreach(characterInstanceList as instance)                     {                         if(!Object::getDelete(instance))                         {                             return true;                         }                     }                 }                 return false;">
				<Then>
					<Action type="pantoobject" time="0" character="Ruffian" flagsToAvoid="delete" />
				</Then>
			</ElseIf>
			<Else>
				<Then>
					<Action type="actionSequence" script="DailyTasks_HelperScripts:OpenDailyChallengeSystemUI" />
				</Then>
			</Else>
		</Action>
	</GetMoreCraftingCurrency>
	<StoreNotification_DateNightMysteryBox>
		<Action type="checkRequirements">
			<Requirement type="reqList" location="Homergeddon_Requirements:DateNightMysteryBox_Available" />
			<True>
				<Action type="notificationLarge" title="CON_DateNightMysteryBox_name" text="BLD_DateNightMysteryBox_upsell_desc" icon="ICO_STOR_Single_Homergeddon_MysteryBoxValentines" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="Homergeddon_DateNight_MysteryBox" menuCategory="Homergeddon_Category" />
			</True>
		</Action>
	</StoreNotification_DateNightMysteryBox>
	<StoreNotification_ZipZapAndZa>
		<Action type="checkRequirements">
			<Requirement type="building" building="ZipZapAndZa" />
			<False>
				<Action type="notificationLarge" title="BLD_ZipZapAndZa_name" text="BLD_ZipZapAndZa_upsell_desc" icon="ICO_PRIZ_Homergeddon_ZipZapAndZa_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="ZipZapAndZa" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_ZipZapAndZa>
	<StoreNotification_PitaAndPeta>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="characterunlocked" name="Pita" />
				<Requirement type="characterunlocked" name="Peta" />
			</Requirements>
			<False>
				<Action type="notificationLarge" title="CON_PitaAndPeta_name" text="BLD_PitaAndPeta_upsell_desc" icon="ICO_PRIZ_Homergeddon_PitaAndPeta_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="PitaAndPeta" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_PitaAndPeta>
	<StoreNotification_Refrigeratorium>
		<Action type="checkRequirements">
			<Requirement type="building" building="Refrigeratorium" />
			<False>
				<Action type="notificationLarge" title="BLD_Refrigeratorium_name" text="BLD_Refrigeratorium_upsell_desc" icon="ICO_PRIZ_Homergeddon_Refrigeratorium_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="Refrigeratorium" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_Refrigeratorium>
	<StoreNotification_JuvenileCorrectionFacility>
		<Action type="checkRequirements">
			<Requirement type="building" building="JuvenileCorrectionFacility" />
			<False>
				<Action type="notificationLarge" title="BLD_JuvenileCorrectionFacility_name" text="BLD_JuvenileCorrectionFacility_upsell_desc" icon="ICO_PRIZ_Homergeddon_JuvenileFacility_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="JuvenileCorrectionFacility" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_JuvenileCorrectionFacility>
	<StoreNotification_OutlandSign>
		<Action type="checkRequirements">
			<Requirement type="building" building="OutlandSign" />
			<False>
				<Action type="notificationLarge" title="BLD_OutlandSign_name" text="BLD_OutlandSign_upsell_desc" icon="ICO_PRIZ_Homergeddon_OutlandsSign_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="OutlandSign" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_OutlandSign>
	<StoreNotification_SnugglersCove>
		<Action type="checkRequirements">
			<Requirement type="building" building="SnugglersCove" />
			<False>
				<Action type="notificationLarge" title="BLD_SnugglersCove_name" text="BLD_SnugglersCove_upsell_desc" icon="ICO_PRIZ_Homergeddon_SnugglersCove_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="SnugglersCove" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_SnugglersCove>
	<StoreNotification_OutlandsFactory>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="building" building="OutlandsFactory" />
			</Requirements>
			<False>
				<Action type="notificationLarge" title="BLD_OutlandsFactory_name" text="BLD_OutlandsFactory_upsell_desc" icon="ICO_PRIZ_Homergeddon_OutlandsFactory_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="OutlandsFactory" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_OutlandsFactory>
	<StoreNotification_GrubShack>
		<Action type="checkRequirements">
			<Requirement type="building" building="GrubShack" />
			<False>
				<Action type="notificationLarge" title="BLD_GrubShack_name" text="BLD_GrubShack_upsell_desc" icon="ICO_PRIZ_Homergeddon_GrubShack_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="GrubShack" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_GrubShack>
	<StoreNotification_BagpipeBus>
		<Action type="checkRequirements">
			<Requirement type="building" building="BagpipeBus" />
			<False>
				<Action type="notificationLarge" title="BLD_BagpipeBus_name" text="BLD_BagpipeBus_upsell_desc" icon="ICO_PRIZ_Homergeddon_BagpipeBus_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="BagpipeBus" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_BagpipeBus>
	<StoreNotification_DamagedPowerPlantBundle>
		<Action type="checkRequirements">
			<Requirement type="reqList" location="Homergeddon_Requirements:DamagedPowerPlantBundle_Available" />
			<True>
				<Action type="notificationLarge" title="CON_DamagedPowerPlantBundle_name" text="BLD_DamagedPowerPlantBundle_upsell_desc" icon="ICO_PRIZ_Homergeddon_DamagedPowerPlant_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="DamagedPowerPlantBundle" menuCategory="Homergeddon_Category" />
			</True>
		</Action>
	</StoreNotification_DamagedPowerPlantBundle>
	<StoreNotification_Luftwaffles>
		<Action type="checkRequirements">
			<Requirement type="building" building="Luftwaffles" />
			<False>
				<Action type="notificationLarge" title="BLD_Luftwaffles_name" text="BLD_Luftwaffles_upsell_desc" icon="ICO_PRIZ_Homergeddon_Luftwaffles_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="Luftwaffles" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_Luftwaffles>
	<StoreNotification_ChopperRide>
		<Action type="checkRequirements">
			<Requirement type="building" building="ChopperRide" />
			<False>
				<Action type="notificationLarge" title="BLD_ChopperRide_name" text="BLD_ChopperRide_upsell_desc" icon="ICO_PRIZ_Homergeddon_ChopperRide_LG" button="UI_OK" />
				<Action type="focusOnMenuItem" itemName="ChopperRide" menuCategory="Homergeddon_Category" />
			</False>
		</Action>
	</StoreNotification_ChopperRide>
	<StoreNotification_LastChance>
		<Action type="notificationLarge" title="UI_Homergeddon_LastChance_Notification_Title" text="UI_Homergeddon_LastChance_Notification_Desc" icon="ICO_STOR_Single_Homergeddon_Event" button="UI_OK" />
		<Action type="focusOnMenuItem" menuCategory="Homergeddon_Category" />
	</StoreNotification_LastChance>
	<ShowMiniEventIntro></ShowMiniEventIntro>
	<ShowMiniEventOutro></ShowMiniEventOutro>
	<MoesExpress_Tapped>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="players land" />
			</Requirements>
			<True>
				<Action type="if">
					<If>
						<Requirement type="active quest" quest="TheCustomerIsAlwaysTrite_1" />
						<Then>
							<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:MoesExpress_JobList_Pt1" />
						</Then>
					</If>
					<ElseIf>
						<Requirement type="active quest" quest="TheCustomerIsAlwaysTrite_2" />
						<Then>
							<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:MoesExpress_JobList_Pt2" />
						</Then>
					</ElseIf>
					<ElseIf>
						<Requirements>
							<Requirement type="active quest" quest="TheCustomerIsAlwaysTrite_6" />
							<Requirement type="active job" job="ServeDrinksAtMoesExpress" not="true" />
						</Requirements>
						<Then>
							<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:MoesExpress_JobList_Pt6" />
						</Then>
					</ElseIf>
					<ElseIf>
						<Requirement type="conditional" logic="OR">
							<Requirement type="quest started" quest="TheCustomerIsAlwaysTrite_5" />
							<Requirement type="active job" job="ServeDrinksAtMoesExpress" />
						</Requirement>
						<Then>
							<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:MoesExpress_JobList" />
						</Then>
					</ElseIf>
				</Action>
			</True>
		</Action>
	</MoesExpress_Tapped>
	<Homergeddon_Prestige_Act1>
		<Action type="reward">
			<Item type="consumable" name="Homergeddon_Prestige_Act1" useImmediately="true" />
		</Action>
	</Homergeddon_Prestige_Act1>
	<Homergeddon_Prestige_Act2>
		<Action type="reward">
			<Item type="consumable" name="Homergeddon_Prestige_Act2" useImmediately="true" />
		</Action>
	</Homergeddon_Prestige_Act2>
	<Homergeddon_Prestige_Act3>
		<Action type="reward">
			<Item type="consumable" name="Homergeddon_Prestige_Act3" useImmediately="true" />
		</Action>
	</Homergeddon_Prestige_Act3>
	<GoToGeneralBart_PT>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="GeneralBart" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="GeneralBart" inventory="true" />
					</True>
					<False>
						<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="0" />
						<Action type="gotoState" state="GameState_HubPrizeTrack" forceState="true">
							<Extras>
								<Attribute name="helpButtonScript" value="Homergeddon_Scripts:GuidePanel_Event" />
								<Attribute name="specialEvent" value="Homergeddon_Event" />
								<Attribute name="prizeListIndex" value="0" />
								<Attribute name="selectPrize" value="3" />
								<Attribute name="exitButtonScript" value="MiscScripts:GoToInGame" />
							</Extras>
						</Action>
						<Action type="markBadgeViewed" badgeName="Homergeddon_PrizeTrackBadge" />
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToGeneralBart_PT>
	<GoToPrepperNaegle_PT>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="PrepperLindseyNaegle" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="PrepperLindseyNaegle" inventory="true" />
					</True>
					<False>
						<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="0" />
						<Action type="gotoState" state="GameState_HubPrizeTrack" forceState="true">
							<Extras>
								<Attribute name="helpButtonScript" value="Homergeddon_Scripts:GuidePanel_Event" />
								<Attribute name="specialEvent" value="Homergeddon_Event" />
								<Attribute name="prizeListIndex" value="1" />
								<Attribute name="selectPrize" value="3" />
								<Attribute name="exitButtonScript" value="MiscScripts:GoToInGame" />
							</Extras>
						</Action>
						<Action type="markBadgeViewed" badgeName="Homergeddon_PrizeTrackBadge" />
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToPrepperNaegle_PT>
	<GoToEmerporMoe_PT>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="EmperorMoe" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="EmperorMoe" inventory="true" />
					</True>
					<False>
						<Action type="if">
							<If expression="Homergeddon_EventGuideSeen">
								<Then>
									<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="0" />
									<Action type="gotoState" state="GameState_HubPrizeTrack" forceState="true">
										<Extras>
											<Attribute name="helpButtonScript" value="Homergeddon_Scripts:GuidePanel_Event" />
											<Attribute name="specialEvent" value="Homergeddon_Event" />
											<Attribute name="exitButtonScript" value="MiscScripts:GoToInGame" />
											<Attribute name="prizeListIndex" value="2" />
											<Attribute name="selectPrize" value="3" />
										</Extras>
									</Action>
									<Action type="markBadgeViewed" badgeName="Homergeddon_PrizeTrackBadge" />
								</Then>
							</If>
							<Else>
								<Then>
									<Action type="actionSequence" script="Homergeddon_Scripts:GuidePanel_Event" />
								</Then>
							</Else>
						</Action>
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToEmerporMoe_PT>
	<GoToPlayscapeBarrier_Quest>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="pantoobject" building="MegaPlayscape" time="0" />
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="PlayscapeBarrier" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="PlayscapeBarrier" inventory="true" />
					</True>
					<False>
						<Action type="checkRequirements">
							<Requirements>
								<Requirement type="building" building="PlayscapeBarrier" />
							</Requirements>
							<True>
								<Action type="gotoState" state="GameState_Rearrange">
									<Extras>
										<Attribute name="building" value="PlayscapeBarrier" />
										<Attribute name="skipInitialCameraPan" value="true" />
									</Extras>
								</Action>
							</True>
							<False>
								<Action type="actionSequence" script="Homergeddon_Scripts:Tab_Crafting_ScrollTo">
									<FormatToken key="ItemToScrollTo" value="BLD_PlayscapeBarrier_name" />
								</Action>
							</False>
						</Action>
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToPlayscapeBarrier_Quest>
	<GoToPlayscapeLookout_Quest>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="pantoobject" building="MegaPlayscape" time="0" />
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="PlayscapeLookout" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="PlayscapeLookout" inventory="true" />
					</True>
					<False>
						<Action type="checkRequirements">
							<Requirements>
								<Requirement type="building" building="PlayscapeLookout" />
							</Requirements>
							<True>
								<Action type="gotoState" state="GameState_Rearrange">
									<Extras>
										<Attribute name="building" value="PlayscapeLookout" />
										<Attribute name="skipInitialCameraPan" value="true" />
									</Extras>
								</Action>
							</True>
							<False>
								<Action type="actionSequence" script="Homergeddon_Scripts:Tab_Crafting_ScrollTo">
									<FormatToken key="ItemToScrollTo" value="BLD_PlayscapeLookout_name" />
								</Action>
							</False>
						</Action>
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToPlayscapeLookout_Quest>
	<GoToJunkBarrier_Quest>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="pantoobject" building="JunkBase" time="0" />
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="JunkBarrier" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="JunkBarrier" inventory="true" />
					</True>
					<False>
						<Action type="checkRequirements">
							<Requirements>
								<Requirement type="building" building="JunkBarrier" />
							</Requirements>
							<True>
								<Action type="gotoState" state="GameState_Rearrange">
									<Extras>
										<Attribute name="building" value="JunkBarrier" />
										<Attribute name="skipInitialCameraPan" value="true" />
									</Extras>
								</Action>
							</True>
							<False>
								<Action type="actionSequence" script="Homergeddon_Scripts:Tab_Crafting_ScrollTo">
									<FormatToken key="ItemToScrollTo" value="BLD_JunkBarrier_name" />
								</Action>
							</False>
						</Action>
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToJunkBarrier_Quest>
	<GoToJunkLookout_Quest>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="pantoobject" building="JunkBase" time="0" />
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="JunkLookout" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="focusOnMenuItem" itemName="JunkLookout" inventory="true" />
					</True>
					<False>
						<Action type="checkRequirements">
							<Requirements>
								<Requirement type="building" building="JunkLookout" />
							</Requirements>
							<True>
								<Action type="gotoState" state="GameState_Rearrange">
									<Extras>
										<Attribute name="building" value="JunkLookout" />
										<Attribute name="skipInitialCameraPan" value="true" />
									</Extras>
								</Action>
							</True>
							<False>
								<Action type="actionSequence" script="Homergeddon_Scripts:Tab_Crafting_ScrollTo">
									<FormatToken key="ItemToScrollTo" value="BLD_JunkLookout_name" />
								</Action>
							</False>
						</Action>
					</False>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoToJunkLookout_Quest>
	<GoToJunkBaseRearrange>
		<Action type="pantoobject" building="JunkBase" fakeTouch="false" time="0" />
		<Action type="gotoState" state="GameState_Rearrange" />
	</GoToJunkBaseRearrange>
	<GoToMegaPlayscapeRearrange>
		<Action type="pantoobject" building="MegaPlayscape" fakeTouch="false" time="0" />
		<Action type="gotoState" state="GameState_Rearrange" />
	</GoToMegaPlayscapeRearrange>
	<NotImplemented>
		<Action type="message" text="**Not implemented yet**" />
		<Action type="setVariable" intVariable="Ruffians_Tapped" intValue="Ruffians_Tapped+100" />
		<Action type="setVariable" intVariable="Ruffians_Tapped_Friend" intValue="Ruffians_Tapped_Friend+3" />
	</NotImplemented>
	<FreeLandToken_ConvertConsumableToSpendable parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var consumables = Inventory::getConsumablesAsArray('FreeLandBlock');
                    if (Array::size(consumables) > 0)
                    {
                        var data = Array::popFront(consumables);
                        var count = Array::getValueForKey(data,'count');
                        
                        User::addCurrencyAmount('FreeLandTokenCurrency',count);
                        
                        Inventory::delete('FreeLandBlock');
                    }
                ]]></Program>
		</Action>
	</FreeLandToken_ConvertConsumableToSpendable>
	<MegaPlayscapeFortifyJobDone ignoreHUD="true">
		<Action type="actionSequence" script="Homergeddon_Scripts:MegaPlayscapeJob_Out" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var pointsVarName = 'MegaPlayscape_Fortify_Points';
                    var fortifyScriptName = 'TurnOnRandomMegaPlayscapePiece';
                    
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':FortifyFort'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</MegaPlayscapeFortifyJobDone>
	<MegaPlayscapeFortifyJobDone_Act2 ignoreHUD="true">
		<Action type="actionSequence" script="Homergeddon_Scripts:MegaPlayscapeJob_Out_Act2" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var pointsVarName = 'MegaPlayscape_Fortify_Points';
                    var fortifyScriptName = 'TurnOnRandomMegaPlayscapePiece';
                    
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':FortifyFort'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</MegaPlayscapeFortifyJobDone_Act2>
	<TurnOnRandomMegaPlayscapePiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    var vfxScriptName = 'PlayPieceVFX';
                    var adHocObjectName = 'Obj_MegaPlayscape';
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomFortPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomMegaPlayscapePiece>
	<TurnOnRandomDamageMegaPlayscapePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomDamagePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomDamageMegaPlayscapePiece>
	<TurnOnRandomRubbleMegaPlayscapePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomRubbleMegaPlayscapePiece>
	<TurnOnAllRubbleMegaPlayscapePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnAllRubblePieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnAllRubbleMegaPlayscapePiece>
	<TurnOnAllDamageMegaPlayscapePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnAllDamagePieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnAllDamageMegaPlayscapePiece>
	<TurnOnAllMegaPlayscapePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnAllPieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnAllMegaPlayscapePiece>
	<TurnOffAllMegaPlayscapePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffAllPieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOffAllMegaPlayscapePiece>
	<ShowAdultFortifyJobList ignoreHUD="true">
		<Action type="sound" sound="AdultsFortify" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AdultMegaPlayscape_JobList" />
	</ShowAdultFortifyJobList>
	<ShowKidsFortifyJobList ignoreHUD="true">
		<Action type="sound" sound="KidsFortify" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:KidsFortifyMegaPlayscape_JobList" />
	</ShowKidsFortifyJobList>
	<MegaPlayscapeAssaultJobDone ignoreHUD="true">
		<Action type="actionSequence" script="Homergeddon_Scripts:MegaPlayscapeJob_Out" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var characterInstance = Script::getObjectInstance();
                    var numPieces = 15;
                    var pieceNumber = Object::getVariableAsNumber(characterInstance, 'PieceNumber');
                    var destroyScriptPrefix = 'DestroyMegaPlayscapePieceNumber';
                    var adHocObjectName = 'Obj_MegaPlayscape';
                    var maxDamage = toDouble(System::getConfigValue('__Homergeddon_Spreadsheet_Config:Forts:MegaPlayscape_DefenseHealth__'));
                    var runDestroyImmediately = false;
                    var destroyFromUnderCharacter = false;
                    var damageToApply = toDouble(System::getConfigValue('__Homergeddon_GameConfig:Forts:NonRuffianDamage__'));
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':IncrementDamageOnPieceFromLocator'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                    
                    Object::deleteVariable(characterInstance, 'PieceNumber');
                    Object::deleteVariable(characterInstance, 'BuildingFortName');
                ]]></Program>
		</Action>
	</MegaPlayscapeAssaultJobDone>
	<MegaPlayscapeAssaultJobDone_Act2 ignoreHUD="true">
		<Action type="actionSequence" script="Homergeddon_Scripts:MegaPlayscapeJob_Out_Act2" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var characterInstance = Script::getObjectInstance();
                    var numPieces = 15;
                    var pieceNumber = Object::getVariableAsNumber(characterInstance, 'PieceNumber');
                    var destroyScriptPrefix = 'DestroyMegaPlayscapePieceNumber';
                    var adHocObjectName = 'Obj_MegaPlayscape';
                    var maxDamage = toDouble(System::getConfigValue('__Homergeddon_Spreadsheet_Config:Forts:MegaPlayscape_DefenseHealth__'));
                    var runDestroyImmediately = false;
                    var destroyFromUnderCharacter = false;
                    var damageToApply = toDouble(System::getConfigValue('__Homergeddon_GameConfig:Forts:NonRuffianDamage__'));
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':IncrementDamageOnPieceFromLocator'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                    
                    Object::deleteVariable(characterInstance, 'PieceNumber');
                    Object::deleteVariable(characterInstance, 'BuildingFortName');
                ]]></Program>
		</Action>
	</MegaPlayscapeAssaultJobDone_Act2>
	<MegaPlayscapeAssaultJobStart ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var characterInstance = Script::getObjectInstance();
                    var jobInstance = Character::getCurrentJobInstance(characterInstance);
                    var locatorName = JobInstance::getLocator(jobInstance);
                    var locatorNumber = replace('Pos', '', locatorName);
                    var pieceNumber = toDouble(locatorNumber)-1;
                    
                    Object::setVariable(characterInstance, 'PieceNumber', toString(pieceNumber), 0, true);
					Object::setVariable(characterInstance, 'BuildingFortName', 'MegaPlayscape', 0, true);
                ]]></Program>
		</Action>
	</MegaPlayscapeAssaultJobStart>
	<MegaPlayscapeAssaultSansLocatorsJobStart ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var characterInstance = Script::getObjectInstance();
                    var pieceNumber = 100;
                    
                    Object::setVariable(characterInstance, 'PieceNumber', toString(pieceNumber), 0, true);
					Object::setVariable(characterInstance, 'BuildingFortName', 'MegaPlayscape', 0, true);
                ]]></Program>
		</Action>
	</MegaPlayscapeAssaultSansLocatorsJobStart>
	<DestroyMegaPlayscapePieceNumber0 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 0;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 0;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber0>
	<DestroyMegaPlayscapePieceNumber1 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 1;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 1;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber1>
	<DestroyMegaPlayscapePieceNumber2 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 2;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 2;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber2>
	<DestroyMegaPlayscapePieceNumber3 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 3;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 3;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber3>
	<DestroyMegaPlayscapePieceNumber4 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 4;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 4;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber4>
	<DestroyMegaPlayscapePieceNumber5 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 5;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 5;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber5>
	<DestroyMegaPlayscapePieceNumber6 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 6;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 6;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber6>
	<DestroyMegaPlayscapePieceNumber7 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 7;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 7;
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber7>
	<DestroyMegaPlayscapePieceNumber8 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 8;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 8;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber8>
	<DestroyMegaPlayscapePieceNumber9 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 9;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 9;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber9>
	<DestroyMegaPlayscapePieceNumber10 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 10;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 10;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber10>
	<DestroyMegaPlayscapePieceNumber11 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 11;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 11;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber11>
	<DestroyMegaPlayscapePieceNumber12 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 12;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 12;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber12>
	<DestroyMegaPlayscapePieceNumber13 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 13;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 13;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber13>
	<DestroyMegaPlayscapePieceNumber14 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 14;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 14;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumber14>
	<DestroyMegaPlayscapePieceNumberInstantly0 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 0;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 0;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly0>
	<DestroyMegaPlayscapePieceNumberInstantly1 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 1;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 1;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly1>
	<DestroyMegaPlayscapePieceNumberInstantly2 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 2;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 2;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly2>
	<DestroyMegaPlayscapePieceNumberInstantly3 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 3;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 3;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly3>
	<DestroyMegaPlayscapePieceNumberInstantly4 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 4;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 4;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly4>
	<DestroyMegaPlayscapePieceNumberInstantly5 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 5;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 5;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly5>
	<DestroyMegaPlayscapePieceNumberInstantly6 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 6;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 6;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly6>
	<DestroyMegaPlayscapePieceNumberInstantly7 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 7;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 7;
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly7>
	<DestroyMegaPlayscapePieceNumberInstantly8 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 8;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 8;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly8>
	<DestroyMegaPlayscapePieceNumberInstantly9 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 9;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 9;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly9>
	<DestroyMegaPlayscapePieceNumberInstantly10 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 10;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 10;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly10>
	<DestroyMegaPlayscapePieceNumberInstantly11 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 11;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 11;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly11>
	<DestroyMegaPlayscapePieceNumberInstantly12 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 12;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 12;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly12>
	<DestroyMegaPlayscapePieceNumberInstantly13 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 13;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 13;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly13>
	<DestroyMegaPlayscapePieceNumberInstantly14 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 14;
                    var vfxScriptName = 'PlayPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var pieceNumber = 14;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyMegaPlayscapePieceNumberInstantly14>
	<MegaPlayscapeJob_In_Act2 ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var job1 = System::evaluate('Job::KidsFortifyMegaPlayscape::Active');
                    var jobA=  System::evaluate('Job::AdultsAssaultMegaPlayscape::Active');
                    var jobB=  System::evaluate('Job::AdultsAssaultMegaPlayscapeSansLocators::Active');
                    var job2=  ((jobA >= 1) || (jobB >= 1));
                    
                    var building = Land::getFirstInstanceOfObject(Building::find('MegaPlayscape'));
                    
                    if((job1 >= 1) && (job2 >= 1))
                    {
                        Object::setVariable(building, 'FortifyAssaultAct2', '1', 0, true);
                       Object::setVariable(building, 'Active_Out', '1', 0, true);
                    }
                ]]></Program>
		</Action>
	</MegaPlayscapeJob_In_Act2>
	<MegaPlayscapeJob_Out_Act2 ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var job1 = System::evaluate('Job::KidsFortifyMegaPlayscape::Active');
                    var jobA=  System::evaluate('Job::AdultsAssaultMegaPlayscape::Active');
                    var jobB=  System::evaluate('Job::AdultsAssaultMegaPlayscapeSansLocators::Active');
                    var job2=  ((jobA >= 1) || (jobB >= 1));
                    
                    var building = Land::getFirstInstanceOfObject(Building::find('MegaPlayscape'));
                    
                    if((job1==0)  || (job2==0))
                    {
                        Object::setVariable(building, 'FortifyAssaultAct2', '0', 0, true);
                    }
                    
                ]]></Program>
		</Action>
	</MegaPlayscapeJob_Out_Act2>
	<MegaPlayscapeJob_In ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var job1 = 0;
                    var jobA=  System::evaluate('Job::KidsAssaultMegaPlayscape::Active');
                    var jobB=  System::evaluate('Job::KidsAssaultMegaPlayscapeSansLocators::Active');
                    var jobC=  System::evaluate('Job::AdultsAssaultMegaPlayscape::Active');
                    var jobD=  System::evaluate('Job::AdultsAssaultMegaPlayscapeSansLocators::Active');
                    var job2=  ((jobA >= 1) || (jobB >= 1) || (jobC >= 1) || (jobD >= 1));

                    var building = Land::getFirstInstanceOfObject(Building::find('MegaPlayscape'));
                    
                    if((job1 >= 1) && (job2 >= 1))
                    {
                        Object::setVariable(building, 'FortifyAssault', '1', 0, true);
                        Object::setVariable(building, 'Active_Out_01', '1', 0, true);
                    }
                ]]></Program>
		</Action>
	</MegaPlayscapeJob_In>
	<MegaPlayscapeJob_Out ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var job1 = 0;
                    var jobA=  System::evaluate('Job::KidsAssaultMegaPlayscape::Active');
                    var jobB=  System::evaluate('Job::KidsAssaultMegaPlayscapeSansLocators::Active');
                    var jobC=  System::evaluate('Job::AdultsAssaultMegaPlayscape::Active');
                    var jobD=  System::evaluate('Job::AdultsAssaultMegaPlayscapeSansLocators::Active');
                    var job2=  ((jobA >= 1) || (jobB >= 1) || (jobC >= 1) || (jobD >= 1));

                    var building = Land::getFirstInstanceOfObject(Building::find('MegaPlayscape'));

                    if((job1==0)  || (job2==0))
                    {
                        Object::setVariable(building, 'FortifyAssault', '0', 0, true); 
                    }

                ]]></Program>
		</Action>
	</MegaPlayscapeJob_Out>
	<MegaPlayscape_ActiveOut parallel="true">
		<Action type="setObjectVariable" variable="Active_Out" value="0">
			<Objects>
				<ObjectByName name="MegaPlayscape" />
			</Objects>
		</Action>
	</MegaPlayscape_ActiveOut>
	<MegaPlayscape_ActiveOut_01 parallel="true">
		<Action type="setObjectVariable" variable="Active_Out_01" value="0">
			<Objects>
				<ObjectByName name="MegaPlayscape" />
			</Objects>
		</Action>
	</MegaPlayscape_ActiveOut_01>
	<ShowKidsAssaultJobList ignoreHUD="true">
		<Action type="sound" sound="KidsAssault" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:KidsMegaPlayscape_JobList" />
	</ShowKidsAssaultJobList>
	<JunkBaseFortifyJobDone ignoreHUD="true">
		<Action type="actionSequence" script="Homergeddon_Scripts:JunkBaseJob_Out" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var pointsVarName = 'JunkBase_Fortify_Points';
                    var fortifyScriptName = 'TurnOnRandomJunkBasePiece';
                    
                    var buildingName = 'JunkBase';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':FortifyFort'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</JunkBaseFortifyJobDone>
	<JunkBaseJob_In ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var job1 = 0;
                    var jobA=  System::evaluate('Job::KidsAssaultJunkBase::Active');
                    var jobB=  System::evaluate('Job::KidsAssaultJunkBaseSansLocators::Active');
                    var jobC=  System::evaluate('Job::AdultsAssaultJunkBase::Active');
                    var jobD=  System::evaluate('Job::AdultsAssaultJunkBaseSansLocators::Active');
                    var job2=  ((jobA >= 1) || (jobB >= 1) || (jobC >= 1) || (jobD >= 1));
                    
                    var building = Land::getFirstInstanceOfObject(Building::find('JunkBase'));
                    
                    if((job1 >= 1) && (job2 >= 1))
                    {
                    Object::setVariable(building, 'FortifyAssault', '1', 0, true);
                    Object::setVariable(building, 'Active_Out', '1', 0, true);
                    }
                ]]></Program>
		</Action>
	</JunkBaseJob_In>
	<JunkBaseJob_Out ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var job1 = 0;
                    var jobA=  System::evaluate('Job::KidsAssaultJunkBase::Active');
                    var jobB=  System::evaluate('Job::KidsAssaultJunkBaseSansLocators::Active');
                    var jobC=  System::evaluate('Job::AdultsAssaultJunkBase::Active');
                    var jobD=  System::evaluate('Job::AdultsAssaultJunkBaseSansLocators::Active');
                    var job2=  ((jobA >= 1) || (jobB >= 1) || (jobC >= 1) || (jobD >= 1));
                    
                    var building = Land::getFirstInstanceOfObject(Building::find('JunkBase'));
                    
                    if((job1==0)  || (job2==0))
                    {
                    Object::setVariable(building, 'FortifyAssault', '0', 0, true);
                    }

                ]]></Program>
		</Action>
	</JunkBaseJob_Out>
	<JunkBase_ActiveOut parallel="true">
		<Action type="setObjectVariable" variable="Active_Out" value="0">
			<Objects>
				<ObjectByName name="JunkBase" />
			</Objects>
		</Action>
	</JunkBase_ActiveOut>
	<TurnOnRandomJunkBasePiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var numPieces = 15;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var adHocObjectName = 'Obj_JunkBase';
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomFortPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomJunkBasePiece>
	<TurnOnRandomDamageJunkBasePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomDamagePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomDamageJunkBasePiece>
	<TurnOnRandomRubbleJunkBasePiece>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var numPieces = 15;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomRubbleJunkBasePiece>
	<ShowAdultFortifyJunkBaseJobList ignoreHUD="true">
		<Action type="sound" sound="AdultsFortify" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AdultFortifyJunkBase_JobList" />
	</ShowAdultFortifyJunkBaseJobList>
	<GoToAdultsFortifyJunkBase ignoreHUD="true">
		<Action type="pantoobject" building="JunkBase" />
		<Action type="actionSequence" script="Homergeddon_Scripts:ShowAdultFortifyJunkBaseJobList" />
	</GoToAdultsFortifyJunkBase>
	<GoToKidsAssaultJunkBase>
		<Action type="pantoobject" building="JunkBase" />
		<Action type="actionSequence" script="Homergeddon_Scripts:ShowKidsAssaultJunkBaseJobList" />
	</GoToKidsAssaultJunkBase>
	<ShowKidsAssaultJunkBaseJobList ignoreHUD="true">
		<Action type="sound" sound="KidsAssault" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:KidsAssaultJunkBase_JobList" />
	</ShowKidsAssaultJunkBaseJobList>
	<GoToAssaultRuffianBaseJobList ignoreHUD="true">
		<Action type="pantoobject" building="RuffianFort" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AssaultRuffianBase_JobList" />
	</GoToAssaultRuffianBaseJobList>
	<ShowAssaultRuffianBaseJobList ignoreHUD="true">
		<Action type="sound" sound="RuffianAssault" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AssaultRuffianBase_JobList" />
	</ShowAssaultRuffianBaseJobList>
	<ShowAssaultMegaPlayscapeJobList ignoreHUD="true">
		<Action type="sound" sound="AdultsAssault" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AssaultMegaPlayscape_JobList" />
	</ShowAssaultMegaPlayscapeJobList>
	<ShowAssaultJunkBaseJobList ignoreHUD="true">
		<Action type="sound" sound="KidsAssault" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AssaultJunkBase_JobList" />
	</ShowAssaultJunkBaseJobList>
	<JunkBaseAssaultJobStart ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var characterInstance = Script::getObjectInstance();
                    var jobInstance = Character::getCurrentJobInstance(characterInstance);
                    var locatorName = JobInstance::getLocator(jobInstance);
                    var locatorNumber = replace('Pos', '', locatorName);
                    var pieceNumber = toDouble(locatorNumber)-1;
                    
                    Object::setVariable(characterInstance, 'PieceNumber', toString(pieceNumber), 0, true);
					Object::setVariable(characterInstance, 'BuildingFortName', 'JunkBase', 0, true);
                ]]></Program>
		</Action>
	</JunkBaseAssaultJobStart>
	<JunkBaseAssaultSansLocatorsJobStart ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var characterInstance = Script::getObjectInstance();
                    var pieceNumber = 100;
                    
                    Object::setVariable(characterInstance, 'PieceNumber', toString(pieceNumber), 0, true);
					Object::setVariable(characterInstance, 'BuildingFortName', 'JunkBase', 0, true);
                ]]></Program>
		</Action>
	</JunkBaseAssaultSansLocatorsJobStart>
	<JunkBaseAssaultJobDone>
		<Action type="actionSequence" script="Homergeddon_Scripts:JunkBaseJob_Out" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var characterInstance = Script::getObjectInstance();
                    var numPieces = 15;
                    var pieceNumber = Object::getVariableAsNumber(characterInstance, 'PieceNumber');
                    var destroyScriptPrefix = 'DestroyJunkBasePieceNumber';
                    var adHocObjectName = 'Obj_JunkBase';
                    var maxDamage = toDouble(System::getConfigValue('__Homergeddon_Spreadsheet_Config:Forts:JunkBase_DefenseHealth__'));
                    var runDestroyImmediately = false;
                    var destroyFromUnderCharacter = false;
                    var damageToApply = toDouble(System::getConfigValue('__Homergeddon_GameConfig:Forts:NonRuffianDamage__'));
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':IncrementDamageOnPieceFromLocator'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                    
                    Object::deleteVariable(characterInstance, 'PieceNumber');
                    Object::deleteVariable(characterInstance, 'BuildingFortName');
                ]]></Program>
		</Action>
	</JunkBaseAssaultJobDone>
	<DestroyJunkBasePieceNumber0 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 0;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 0;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber0>
	<DestroyJunkBasePieceNumber1 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 1;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 1;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber1>
	<DestroyJunkBasePieceNumber2 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 2;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 2;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber2>
	<DestroyJunkBasePieceNumber3 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 3;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 3;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber3>
	<DestroyJunkBasePieceNumber4 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 4;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 4;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber4>
	<DestroyJunkBasePieceNumber5 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 5;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 5;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber5>
	<DestroyJunkBasePieceNumber6 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 6;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 6;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber6>
	<DestroyJunkBasePieceNumber7 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 7;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 7;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber7>
	<DestroyJunkBasePieceNumber8 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 8;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 8;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber8>
	<DestroyJunkBasePieceNumber9 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 9;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 9;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber9>
	<DestroyJunkBasePieceNumber10 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 10;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 10;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber10>
	<DestroyJunkBasePieceNumber11 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 11;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 11;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber11>
	<DestroyJunkBasePieceNumber12 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 12;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 12;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber12>
	<DestroyJunkBasePieceNumber13 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 13;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 13;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber13>
	<DestroyJunkBasePieceNumber14 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 14;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 14;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumber14>
	<DestroyJunkBasePieceNumberInstantly0 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 0;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 0;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly0>
	<DestroyJunkBasePieceNumberInstantly1 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 1;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 1;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly1>
	<DestroyJunkBasePieceNumberInstantly2 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 2;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 2;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly2>
	<DestroyJunkBasePieceNumberInstantly3 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 3;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 3;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly3>
	<DestroyJunkBasePieceNumberInstantly4 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 4;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 4;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly4>
	<DestroyJunkBasePieceNumberInstantly5 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 5;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 5;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly5>
	<DestroyJunkBasePieceNumberInstantly6 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 6;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 6;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly6>
	<DestroyJunkBasePieceNumberInstantly7 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 7;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 7;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly7>
	<DestroyJunkBasePieceNumberInstantly8 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 8;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 8;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly8>
	<DestroyJunkBasePieceNumberInstantly9 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 9;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 9;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly9>
	<DestroyJunkBasePieceNumberInstantly10 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 10;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 10;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly10>
	<DestroyJunkBasePieceNumberInstantly11 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 11;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 11;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly11>
	<DestroyJunkBasePieceNumberInstantly12 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 12;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 12;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly12>
	<DestroyJunkBasePieceNumberInstantly13 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 13;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 13;
                    
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly13>
	<DestroyJunkBasePieceNumberInstantly14 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 14;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var pieceNumber = 14;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyJunkBasePieceNumberInstantly14>
	<AutoApply_GeneralBartSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_GeneralBartSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_GeneralBartSkin_End>
	<AutoApply_GeneralBartSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="GeneralBart" fromInventory="true" />
	</AutoApply_GeneralBartSkin_Delayed>
	<AutoApply_PrepperLindseyNaegleSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_PrepperLindseyNaegleSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_PrepperLindseyNaegleSkin_End>
	<AutoApply_PrepperLindseyNaegleSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="PrepperLindseyNaegle" fromInventory="true" />
	</AutoApply_PrepperLindseyNaegleSkin_Delayed>
	<AutoApply_EmperorMoeSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_EmperorMoeSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_EmperorMoeSkin_End>
	<AutoApply_EmperorMoeSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="EmperorMoe" fromInventory="true" />
	</AutoApply_EmperorMoeSkin_Delayed>
	<AutoApply_WaterBaronBurnsSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_WaterBaronBurnsSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_WaterBaronBurnsSkin_End>
	<AutoApply_WaterBaronBurnsSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="WaterBaronBurns" fromInventory="true" />
	</AutoApply_WaterBaronBurnsSkin_Delayed>
	<Notify_WaterBaronBurnsSkin_End ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="characterunlocked" name="Burns" not="true" />
			<True>
				<Action type="hudTip" parseOnDemand="true">
					<Attribute name="config">
						<AttributeSet name="text">
							<Attribute name="time" value="3s" />
							<Attribute name="text" value="UI_Added_To_Inventory" parameters="textParams" localise="true">
								<AttributeSet name="textParams">
									<Attribute name="0" value="CON_WaterBaronBurns_name" localise="true" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</Notify_WaterBaronBurnsSkin_End>
	<AutoApply_OutlandsMaggieSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_OutlandsMaggieSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_OutlandsMaggieSkin_End>
	<AutoApply_OutlandsMaggieSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="OutlandsMaggie" fromInventory="true" />
	</AutoApply_OutlandsMaggieSkin_Delayed>
	<Notify_OutlandsMaggieSkin_End ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="characterunlocked" name="Maggie" not="true" />
			<True>
				<Action type="hudTip" parseOnDemand="true">
					<Attribute name="config">
						<AttributeSet name="text">
							<Attribute name="time" value="3s" />
							<Attribute name="text" value="UI_Added_To_Inventory" parameters="textParams" localise="true">
								<AttributeSet name="textParams">
									<Attribute name="0" value="CON_OutlandsMaggie_name" localise="true" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</Notify_OutlandsMaggieSkin_End>
	<AutoApply_HellfishAbeSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_HellfishAbeSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_HellfishAbeSkin_End>
	<AutoApply_HellfishAbeSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="HellfishAbe" fromInventory="true" />
	</AutoApply_HellfishAbeSkin_Delayed>
	<Notify_HellfishAbeSkin_End ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="characterunlocked" name="Grampa" not="true" />
			<True>
				<Action type="genericMessage">
					<Attribute name="config">
						<AttributeSet name="message">
							<Attribute name="text" value="UI_Added_To_Inventory" parameters="textParams" localise="true">
								<AttributeSet name="textParams">
									<Attribute name="0" value="CON_HellfishAbe_name" localise="true" />
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_Normal" />
							<Attribute name="color" value="FFFFFFFF" />
						</AttributeSet>
						<AttributeSet name="left">
							<Attribute name="image" value="abe_hellfish_menu" />
						</AttributeSet>
						<AttributeSet name="button_OK">
							<Attribute name="button_text">
								<AttributeSet name="text">
									<Attribute name="text" value="UI_OK" localise="true" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
						<AttributeSet name="gradient">
							<Attribute name="active" value="false" />
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</Notify_HellfishAbeSkin_End>
	<AutoApply_HellfishBurnsSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_HellfishBurnsSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_HellfishBurnsSkin_End>
	<AutoApply_HellfishBurnsSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="HellfishBurns" fromInventory="true" />
	</AutoApply_HellfishBurnsSkin_Delayed>
	<Notify_HellfishBurnsSkin_End ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="characterunlocked" name="Burns" not="true" />
			<True>
				<Action type="genericMessage">
					<Attribute name="config">
						<AttributeSet name="message">
							<Attribute name="text" value="UI_Added_To_Inventory" parameters="textParams" localise="true">
								<AttributeSet name="textParams">
									<Attribute name="0" value="CON_HellfishBurns_name" localise="true" />
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_Normal" />
							<Attribute name="color" value="FFFFFFFF" />
						</AttributeSet>
						<AttributeSet name="left">
							<Attribute name="image" value="mrburns_hellfish_menu" />
						</AttributeSet>
						<AttributeSet name="button_OK">
							<Attribute name="button_text">
								<AttributeSet name="text">
									<Attribute name="text" value="UI_OK" localise="true" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
						<AttributeSet name="gradient">
							<Attribute name="active" value="false" />
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</Notify_HellfishBurnsSkin_End>
	<AutoApply_MayanHomerSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_MayanHomerSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_MayanHomerSkin_End>
	<AutoApply_MayanHomerSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="MayanHomer" fromInventory="true" />
	</AutoApply_MayanHomerSkin_Delayed>
	<AutoApply_MayanMargeSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_MayanMargeSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_MayanMargeSkin_End>
	<AutoApply_MayanMargeSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="MayanMarge_CON" fromInventory="true" />
	</AutoApply_MayanMargeSkin_Delayed>
	<Notify_MayanMargeSkin_End ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="characterunlocked" name="Marge" not="true" />
			<True>
				<Action type="genericMessage">
					<Attribute name="config">
						<AttributeSet name="message">
							<Attribute name="text" value="UI_Added_To_Inventory" parameters="textParams" localise="true">
								<AttributeSet name="textParams">
									<Attribute name="0" value="CON_MayanMarge_CON_name" localise="true" />
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_Normal" />
							<Attribute name="color" value="FFFFFFFF" />
						</AttributeSet>
						<AttributeSet name="left">
							<Attribute name="image" value="marge_mayan_menu" />
						</AttributeSet>
						<AttributeSet name="button_OK">
							<Attribute name="button_text">
								<AttributeSet name="text">
									<Attribute name="text" value="UI_OK" localise="true" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
						<AttributeSet name="gradient">
							<Attribute name="active" value="false" />
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</Notify_MayanMargeSkin_End>
	<Notify_CrazyIguanaLadySkin_End ignoreHUD="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:Notify_CrazyIguanaLadySkin_End_Delayed" relativeTime="1s" localLandOnly="true" shouldSave="true" />
	</Notify_CrazyIguanaLadySkin_End>
	<Notify_CrazyIguanaLadySkin_End_Delayed ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="item" item="CrazyCatHouse" checkInventoryOnly="true" />
			<True>
				<Action type="genericMessage">
					<Attribute name="config">
						<AttributeSet name="message">
							<Attribute name="text" value="UI_Added_To_Inventory" parameters="textParams" localise="true">
								<AttributeSet name="textParams">
									<Attribute name="0" value="CHA_CrazyIguanaLady_name" localise="true" />
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_Normal" />
							<Attribute name="color" value="FFFFFFFF" />
						</AttributeSet>
						<AttributeSet name="left">
							<Attribute name="image" value="CrazyCatLady_IguanaLady_menu" />
						</AttributeSet>
						<AttributeSet name="button_OK">
							<Attribute name="button_text">
								<AttributeSet name="text">
									<Attribute name="text" value="UI_OK" localise="true" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
						<AttributeSet name="gradient">
							<Attribute name="active" value="false" />
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</Notify_CrazyIguanaLadySkin_End_Delayed>
	<Fix_ExtraZombies_End ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    Inventory::remove(Character::find('ClawingZombie'));
                    Inventory::remove(Character::find('SnarlingZombie'));
                ]]></Program>
		</Action>
	</Fix_ExtraZombies_End>
	<Return_Missing_Zombies_End>
		<Action type="reward">
			<Item type="character" name="ClawingZombie" useImmediately="true" />
			<Item type="character" name="SnarlingZombie" useImmediately="true" />
		</Action>
	</Return_Missing_Zombies_End>
	<AutoApply_CrazyIguanaLadySkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_CrazyIguanaLadySkin_Delayed" relativeTime="3s" localLandOnly="true" shouldSave="true" />
	</AutoApply_CrazyIguanaLadySkin_End>
	<AutoApply_CrazyIguanaLadySkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="CrazyIguanaLady" fromInventory="true" />
	</AutoApply_CrazyIguanaLadySkin_Delayed>
	<AutoApply_RuinedLardLadSkin_End parallel="true">
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:AutoApply_RuinedLardLadSkin_Delayed" relativeTime="2s" localLandOnly="true" shouldSave="true" />
	</AutoApply_RuinedLardLadSkin_End>
	<AutoApply_RuinedLardLadSkin_Delayed ignoreHUD="true">
		<Action type="consumable" consumable="RuinedLardLad" fromInventory="true" />
	</AutoApply_RuinedLardLadSkin_Delayed>
	<RewardDamagedJebediahStatue>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="building" building="JebediahStatue" not="true" />
			</Requirements>
			<True>
				<Action type="reward">
					<Item type="consumable" name="DamagedJebediahStatue" useImmediately="false" />
				</Action>
				<Action type="notification" title="CON_DamagedJebediahStatue_name" button="UI_OK" text="UI_StoredInInventory_generic" icon="JebediahStatue_Damaged_Menu" />
			</True>
			<False>
				<Action type="reward">
					<Item type="consumable" name="DamagedJebediahStatue" useImmediately="true" />
				</Action>
				<Action type="pantoobject" building="JebediahStatue" fakeTouch="false" time="0" />
			</False>
		</Action>
	</RewardDamagedJebediahStatue>
	<RewardDamagedCourtHouse>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="building" building="SpringfieldCountyCourtHouse" not="true" />
			</Requirements>
			<True>
				<Action type="reward">
					<Item type="consumable" name="DamagedCourtHouse" useImmediately="false" />
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="reward">
					<Item type="consumable" name="DamagedCourtHouse" useImmediately="true" />
				</Action>
				<Action type="pantoobject" building="SpringfieldCountyCourtHouse" fakeTouch="false" time="0" />
			</False>
		</Action>
	</RewardDamagedCourtHouse>
	<RewardRuinedLardLad>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="building" building="LardLadsDonuts" not="true" />
			</Requirements>
			<True>
				<Action type="reward">
					<Item type="consumable" name="RuinedLardLad" useImmediately="false" />
					<Item type="building" name="LardLadsDonuts" useImmediately="false" />
				</Action>
				<Action type="notification" title="BLD_LardLadsDonuts_name" button="UI_OK" text="UI_StoredInInventory_generic" icon="ICO_PRIZ_Homergeddon_LardLads_LG" />
				<Action type="notification" title="CON_RuinedLardLad_name" button="UI_OK" text="UI_StoredInInventory_generic" icon="ICO_PRIZ_Homergeddon_RuinedLardLads_LG" />
			</True>
			<False>
				<Action type="reward">
					<Item type="consumable" name="RuinedLardLad" useImmediately="true" />
					<Item type="building" name="LardLadsDonuts" useImmediately="false" />
				</Action>
				<Action type="notification" title="BLD_LardLadsDonuts_name" button="UI_OK" text="UI_StoredInInventory_generic" icon="ICO_PRIZ_Homergeddon_LardLads_LG" />
				<Action type="pantoobject" building="LardLadsDonuts" fakeTouch="false" time="0" />
			</False>
		</Action>
	</RewardRuinedLardLad>
	<ShowAdultAssaultJobList ignoreHUD="true">
		<Action type="sound" sound="AdultsAssault" />
		<Action type="gotoState" state="GameState_JobList" extras="Homergeddon_MenuConfig:AdultsAssaultMegaPlayscape_JobList" />
	</ShowAdultAssaultJobList>
	<GoTo_ScrapYard>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="checkRequirements">
					<Requirement type="item" item="ScrapYard" checkInventoryOnly="true" />
					<True>
						<Action type="focusOnMenuItem" menuCategory="Buildings" itemName="ScrapYard" inventory="true" />
					</True>
					<False>
						<Action type="focusOnMenuItem" menuCategory="Homergeddon_Category" itemName="ScrapYard" />
					</False>
				</Action>
			</True>
			<False>
				<Action type="returnToInGameState" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</GoTo_ScrapYard>
	<ScrapYard_Tapped>
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<True>
				<Action type="if">
					<If>
						<Requirement type="reqList" location="Homergeddon_Requirements:Crafting_Unlocked" />
						<Then>
							<Action type="runScript" script="Homergeddon_Scripts:Tab_Crafting" />
						</Then>
					</If>
				</Action>
			</True>
			<False>
				<Action type="gotoState" state="GameState_InGame" />
				<Action type="pantoobject" building="KrustylandShuttleToSpringfield" fakeTouch="true" />
			</False>
		</Action>
	</ScrapYard_Tapped>
	<EnterPlacementMode_MegaPlayscape parallel="true" runQueueState="RunInAnyState">
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="reqList" location="Homergeddon_Requirements:ActOne" />
				<Requirement type="reqList" location="Homergeddon_Requirements:ArrangementBonus_Unlocked" />
			</Requirements>
			<True>
				<Action type="hudTip" clear="true" requiresActiveHUD="false" />
				<Action type="hudTip">
					<Attribute name="Objects">
						<AttributeSet name="TipText">
							<Attribute name="time" value="10s" />
							<Attribute name="requiresActiveHUD" value="false" />
							<Attribute name="text" value="UI_HudTip_ArrangementBonus_MegaPlayscape" localise="true" />
							<Attribute name="textReplacements">
								<AttributeSet>
									<Attribute name="index" value="0" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
									<Attribute name="color" value="55DBFDFF" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</EnterPlacementMode_MegaPlayscape>
	<EnterPlacementMode_JunkBase parallel="true" runQueueState="RunInAnyState">
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
				<Requirement type="reqList" location="Homergeddon_Requirements:ArrangementBonus_Unlocked" />
			</Requirements>
			<True>
				<Action type="hudTip" clear="true" requiresActiveHUD="false" />
				<Action type="hudTip">
					<Attribute name="Objects">
						<AttributeSet name="TipText">
							<Attribute name="time" value="10s" />
							<Attribute name="requiresActiveHUD" value="false" />
							<Attribute name="text" value="UI_HudTip_ArrangementBonus_JunkBase" localise="true" />
							<Attribute name="textReplacements">
								<AttributeSet>
									<Attribute name="index" value="0" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
									<Attribute name="color" value="55DBFDFF" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</EnterPlacementMode_JunkBase>
	<EnterPlacementMode_RuffianFort parallel="true" runQueueState="RunInAnyState">
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
				<Requirement type="reqList" location="Homergeddon_Requirements:ArrangementBonus_Unlocked" />
			</Requirements>
			<True>
				<Action type="hudTip" clear="true" requiresActiveHUD="false" />
				<Action type="hudTip">
					<Attribute name="Objects">
						<AttributeSet name="TipText">
							<Attribute name="time" value="10s" />
							<Attribute name="requiresActiveHUD" value="false" />
							<Attribute name="text" value="UI_HudTip_ArrangementBonus_RuffianFort" localise="true" />
							<Attribute name="textReplacements">
								<AttributeSet>
									<Attribute name="index" value="0" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
									<Attribute name="color" value="55DBFDFF" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</EnterPlacementMode_RuffianFort>
	<PlacementConfirm_MegaPlayscape parallel="true" runQueueState="RunInAnyState">
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="formula" formula="MegaPlayscape_ABDelta != 0" />
			</Requirements>
			<True>
				<Action type="scheduleScript" mode="replace" script="Homergeddon_Scripts:ShowDelayedArrangementBonusHudTip" shouldSave="false" relativeTime="2s" />
				<Action type="floatText" building="MegaPlayscape">
					<Attribute name="config">
						<AttributeSet name="text">
							<Attribute name="text" value="{0}% {1}" parameters="textParams">
								<AttributeSet name="textParams">
									<Attribute name="0" formula="MegaPlayscape_ABDelta" />
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_XSBold" />
							<Attribute name="color" value="FFFFFFFF" />
							<Attribute name="name" value="MegaPlayscape_Delta" />
							<Attribute name="duration" value="2s" />
							<Attribute name="speed" value="2" />
							<Attribute name="resetTime" value="true" />
						</AttributeSet>
					</Attribute>
				</Action>
				<Action type="setVariable" intVariable="MegaPlayscape_ABDelta" intValue="0" />
			</True>
		</Action>
	</PlacementConfirm_MegaPlayscape>
	<PlacementConfirm_JunkBase parallel="true" runQueueState="RunInAnyState">
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="formula" formula="JunkBase_ABDelta != 0" />
			</Requirements>
			<True>
				<Action type="scheduleScript" mode="replace" script="Homergeddon_Scripts:ShowDelayedArrangementBonusHudTip" shouldSave="false" relativeTime="2s" />
				<Action type="floatText" building="JunkBase">
					<Attribute name="config">
						<AttributeSet name="text">
							<Attribute name="text" value="{0}% {1}" parameters="textParams">
								<AttributeSet name="textParams">
									<Attribute name="0" formula="JunkBase_ABDelta" />
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_XSBold" />
							<Attribute name="color" value="FFFFFFFF" />
							<Attribute name="name" value="JunkBase_Delta" />
							<Attribute name="duration" value="2s" />
							<Attribute name="speed" value="2" />
							<Attribute name="resetTime" value="true" />
						</AttributeSet>
					</Attribute>
				</Action>
				<Action type="setVariable" intVariable="JunkBase_ABDelta" intValue="0" />
			</True>
		</Action>
	</PlacementConfirm_JunkBase>
	<PlacementConfirm_RuffianFort parallel="true" runQueueState="RunInAnyState">
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="formula" formula="RuffianFort_ABDelta != 0" />
			</Requirements>
			<True>
				<Action type="scheduleScript" mode="replace" script="Homergeddon_Scripts:ShowDelayedArrangementBonusHudTip" shouldSave="false" relativeTime="2s" />
				<Action type="floatText" building="RuffianFort">
					<Attribute name="config">
						<AttributeSet name="text">
							<Attribute name="text" value="{0}% {1}" parameters="textParams">
								<AttributeSet name="textParams">
									<Attribute name="0" formula="RuffianFort_ABDelta" />
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="1" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
								</AttributeSet>
							</Attribute>
							<Attribute name="font" value="eFont_XSBold" />
							<Attribute name="color" value="FFFFFFFF" />
							<Attribute name="name" value="RuffianFort_Delta" />
							<Attribute name="duration" value="2s" />
							<Attribute name="speed" value="2" />
							<Attribute name="resetTime" value="true" />
						</AttributeSet>
					</Attribute>
				</Action>
				<Action type="setVariable" intVariable="RuffianFort_ABDelta" intValue="0" />
			</True>
		</Action>
	</PlacementConfirm_RuffianFort>
	<ShowDelayedArrangementBonusHudTip parallel="true" runQueueState="RunInAnyState">
		<Action type="hudTip" clear="true" requiresActiveHUD="false" />
		<Action type="checkRequirements">
			<Requirement type="building" building="MegaPlayscape" />
			<True>
				<Action type="hudTip">
					<Attribute name="Objects">
						<AttributeSet name="TipText">
							<Attribute name="time" value="3s" />
							<Attribute name="queue" value="true" />
							<Attribute name="requiresActiveHUD" value="false" />
							<Attribute name="text" value="UI_HudTip_ArrangementBonus_Adjust_MegaPlayscape" localise="true" />
							<Attribute name="textReplacements">
								<AttributeSet>
									<Attribute name="index" value="0" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
									<Attribute name="color" value="55DBFDFF" />
								</AttributeSet>
								<AttributeSet>
									<Attribute name="index" value="1" />
									<Attribute name="text" formula="#program;                                     var object = Land::getFirstInstanceOfObject(Building::find('MegaPlayscape'));                                     return Building::getArrangeBonus(object);" />
									<Attribute name="color" value="FFD51AFF" />
								</AttributeSet>
								<AttributeSet>
									<Attribute name="index" value="2" />
									<Attribute name="text" value="%" />
									<Attribute name="color" value="FFD51AFF" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
		<Action type="checkRequirements">
			<Requirement type="building" building="JunkBase" />
			<True>
				<Action type="hudTip">
					<Attribute name="Objects">
						<AttributeSet name="TipText">
							<Attribute name="time" value="3s" />
							<Attribute name="queue" value="true" />
							<Attribute name="requiresActiveHUD" value="false" />
							<Attribute name="text" value="UI_HudTip_ArrangementBonus_Adjust_JunkBase" localise="true" />
							<Attribute name="textReplacements">
								<AttributeSet>
									<Attribute name="index" value="0" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
									<Attribute name="color" value="55DBFDFF" />
								</AttributeSet>
								<AttributeSet>
									<Attribute name="index" value="1" />
									<Attribute name="text" formula="#program;                                     var object = Land::getFirstInstanceOfObject(Building::find('JunkBase'));                                     return Building::getArrangeBonus(object);" />
									<Attribute name="color" value="FFD51AFF" />
								</AttributeSet>
								<AttributeSet>
									<Attribute name="index" value="2" />
									<Attribute name="text" value="%" />
									<Attribute name="color" value="FFD51AFF" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
		<Action type="checkRequirements">
			<Requirement type="building" building="RuffianFort" />
			<True>
				<Action type="hudTip">
					<Attribute name="Objects">
						<AttributeSet name="TipText">
							<Attribute name="time" value="3s" />
							<Attribute name="queue" value="true" />
							<Attribute name="requiresActiveHUD" value="false" />
							<Attribute name="text" value="UI_HudTip_ArrangementBonus_Adjust_RuffianFort" localise="true" />
							<Attribute name="textReplacements">
								<AttributeSet>
									<Attribute name="index" value="0" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act1_Title" localise="true" />
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act2_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
									</Attribute>
									<Attribute name="text" value="UI_ArrangementBonus_ProgressPopup_Act3_Title" localise="true">
										<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
									</Attribute>
									<Attribute name="color" value="55DBFDFF" />
								</AttributeSet>
								<AttributeSet>
									<Attribute name="index" value="1" />
									<Attribute name="text" formula="#program;                                     var object = Land::getFirstInstanceOfObject(Building::find('RuffianFort'));                                     return Building::getArrangeBonus(object);" />
									<Attribute name="color" value="FFD51AFF" />
								</AttributeSet>
								<AttributeSet>
									<Attribute name="index" value="2" />
									<Attribute name="text" value="%" />
									<Attribute name="color" value="FFD51AFF" />
								</AttributeSet>
							</Attribute>
						</AttributeSet>
					</Attribute>
				</Action>
			</True>
		</Action>
	</ShowDelayedArrangementBonusHudTip>
	<MegaPlayscapeWithFreeLandToken>
		<Action type="hudTip" text="UI_HudTip_FreeLandToken" time="10s" requiresActiveHUD="false" />
		<Action type="reward" FreeLandTokenCurrency="1">
			<Item type="building" name="MegaPlayscape" useImmediately="true" />
		</Action>
	</MegaPlayscapeWithFreeLandToken>
	<JunkBaseWithFreeLandToken>
		<Action type="hudTip" text="UI_HudTip_FreeLandToken" time="10s" requiresActiveHUD="false" />
		<Action type="reward" FreeLandTokenCurrency="1">
			<Item type="building" name="JunkBase" useImmediately="true" />
		</Action>
	</JunkBaseWithFreeLandToken>
	<RuffianFortWithFreeLandToken>
		<Action type="hudTip" text="UI_HudTip_FreeLandToken" time="10s" requiresActiveHUD="false" />
		<Action type="reward" FreeLandTokenCurrency="1">
			<Item type="building" name="RuffianFort" useImmediately="true" />
		</Action>
	</RuffianFortWithFreeLandToken>
	<GetPyroNow runQueueState="RunInAnyState">
		<Action type="updateVariable" variable="Homergeddon_EventHubTabValue" value="0" />
		<Action type="gotoState" state="GameState_HubPrizeTrack" forceState="true">
			<Extras>
				<Attribute name="helpButtonScript" value="Homergeddon_Scripts:GuidePanel_Event" />
				<Attribute name="specialEvent" value="Homergeddon_Event" />
				<Attribute name="exitButtonScript" value="MiscScripts:GoToInGame" />
				<Attribute name="prizeListIndex" value="0" />
				<Attribute name="selectPrize" value="5" />
			</Extras>
		</Action>
		<Action type="markBadgeViewed" badgeName="Homergeddon_PrizeTrackBadge" />
	</GetPyroNow>
	<GetHellfishBundleNow>
		<Action type="focusOnMenuItem" menuCategory="Homergeddon_Category" itemName="HellfishBundleGOB" />
	</GetHellfishBundleNow>
	<GetCrazyIguanaLadyNow>
		<Action type="recommendation" recType="Promoted" name="Homergeddon_Doomsday_MysteryBox" />
		<Action type="focusOnMenuItem" itemName="Homergeddon_Doomsday_MysteryBox" menuCategory="Homergeddon_Category" />
	</GetCrazyIguanaLadyNow>
	<GetIceBishopNow>
		<Action type="focusOnMenuItem" itemName="Refrigeratorium" menuCategory="Homergeddon_Category" />
	</GetIceBishopNow>
	<GetMountainManNow>
		<Action type="focusOnMenuItem" itemName="OutlandSign" menuCategory="Homergeddon_Category" />
	</GetMountainManNow>
	<GoToPurchaseMegaPlayscape ignoreHUD="true">
		<Action type="if">
			<If>
				<Requirement type="land" land="Springfield" not="true" />
				<Then>
					<Action type="gotoland" land="Springfield" showPopup="true" />
				</Then>
			</If>
			<ElseIf>
				<Requirement type="place building" building="MegaPlayscape" />
				<Then>
					<Action type="pantoobject" building="MegaPlayscape" />
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirement type="building owned" building="MegaPlayscape" />
				<Then>
					<Action type="focusOnMenuItem" menuCategory="Buildings" itemName="MegaPlayscape" inventory="true" />
				</Then>
			</ElseIf>
			<Else>
				<Then>
					<Action type="focusOnMenuItem" itemName="MegaPlayscapeWithFreeLandToken" />
				</Then>
			</Else>
		</Action>
	</GoToPurchaseMegaPlayscape>
	<GoToPurchaseJunkBase ignoreHUD="true">
		<Action type="if">
			<If>
				<Requirement type="land" land="Springfield" not="true" />
				<Then>
					<Action type="gotoland" land="Springfield" showPopup="true" />
				</Then>
			</If>
			<ElseIf>
				<Requirement type="place building" building="JunkBase" />
				<Then>
					<Action type="pantoobject" building="JunkBase" />
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirement type="building owned" building="JunkBase" />
				<Then>
					<Action type="focusOnMenuItem" menuCategory="Buildings" itemName="JunkBase" inventory="true" />
				</Then>
			</ElseIf>
			<Else>
				<Then>
					<Action type="focusOnMenuItem" itemName="JunkBaseWithFreeLandToken" />
				</Then>
			</Else>
		</Action>
	</GoToPurchaseJunkBase>
	<GoToPurchaseRuffianFort ignoreHUD="true">
		<Action type="if">
			<If>
				<Requirement type="land" land="Springfield" not="true" />
				<Then>
					<Action type="gotoland" land="Springfield" showPopup="true" />
				</Then>
			</If>
			<ElseIf>
				<Requirement type="place building" building="RuffianFort" />
				<Then>
					<Action type="pantoobject" building="RuffianFort" />
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirement type="building owned" building="RuffianFort" />
				<Then>
					<Action type="focusOnMenuItem" menuCategory="Buildings" itemName="RuffianFort" inventory="true" />
				</Then>
			</ElseIf>
			<Else>
				<Then>
					<Action type="focusOnMenuItem" itemName="RuffianFortWithFreeLandToken" />
				</Then>
			</Else>
		</Action>
	</GoToPurchaseRuffianFort>
	<OnDamagedPowerPlantBundlePurchased>
		<Action type="if">
			<If>
				<Requirement type="land" land="Springfield" not="true" />
				<Then>
					<Action type="gotoland" land="Springfield" showPopup="true" />
				</Then>
			</If>
			<ElseIf>
				<Requirement type="place building" building="PowerPlant" />
				<Then>
					<Action type="pantoobject" building="PowerPlant" />
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirement type="building owned" building="PowerPlant" />
				<Then>
					<Action type="focusOnMenuItem" menuCategory="Buildings" itemName="PowerPlant" inventory="true" />
				</Then>
			</ElseIf>
			<Else>
				<Then>
					<Action type="focusOnMenuItem" menuCategory="Buildings" itemName="PowerPlant" />
				</Then>
			</Else>
		</Action>
	</OnDamagedPowerPlantBundlePurchased>
	<GoToAdultsFortifyMegaPlayscape ignoreHUD="true">
		<Action type="pantoobject" building="MegaPlayscape" />
		<Action type="actionSequence" script="Homergeddon_Scripts:ShowAdultFortifyJobList" />
	</GoToAdultsFortifyMegaPlayscape>
	<GoToKidsAssaultMegaPlayscape ignoreHUD="true">
		<Action type="pantoobject" building="MegaPlayscape" />
		<Action type="actionSequence" script="Homergeddon_Scripts:ShowKidsAssaultJobList" />
	</GoToKidsAssaultMegaPlayscape>
	<GoToKidsFortifyMegaPlayscape ignoreHUD="true">
		<Action type="pantoobject" building="MegaPlayscape" />
		<Action type="actionSequence" script="Homergeddon_Scripts:ShowKidsFortifyJobList" />
	</GoToKidsFortifyMegaPlayscape>
	<GoToAdultsAssaultMegaPlayscape ignoreHUD="true">
		<Action type="pantoobject" building="MegaPlayscape" />
		<Action type="actionSequence" script="Homergeddon_Scripts:ShowAdultAssaultJobList" />
	</GoToAdultsAssaultMegaPlayscape>
	<PlayAssaultFortifyJobDoneSound>
		<Action type="sound" sound="sfx_sports_crowd_cheer_01.caf" replayType="onlyIfDone" />
	</PlayAssaultFortifyJobDoneSound>
	<TurnOnRandomRuffianFortPiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var numPieces = 5;
                    var vfxScriptName = 'PlayPieceVFXJunkBase';
                    var adHocObjectName = 'Obj_RuffianFort';

                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRandomFortPiece'));
                    Hook::unload(hook,false);

                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnRandomRuffianFortPiece>
	<TurnOnAllRubbleRuffianFortPiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var numPieces = 5;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnAllRubblePieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnAllRubbleRuffianFortPiece>
	<TurnOnAllDamageRuffianFortPiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var numPieces = 5;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnAllDamagePieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOnAllDamageRuffianFortPiece>
	<TurnOnAllRuffianFortPiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var numPieces = 5;
                    
                    Object::setVariableForAdHoc('Obj_RuffianFort','state', toString(0), 0, true);
                    
                    for(var i = 0; i < numPieces; i++)
                    {
                        var pieceString = 'piece' + toString(i) + 'Damage';
                        Object::setVariableForAdHoc('Obj_RuffianFort', pieceString, toString(0), 0, true);
                    }
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnAllPieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                    
                    Audio::playSingle('RuffianWallBuilt');
                ]]></Program>
		</Action>
	</TurnOnAllRuffianFortPiece>
	<TurnOffAllRuffianFortPiece ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffAllPieces'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</TurnOffAllRuffianFortPiece>
	<RuffianFortAssaultJobDone ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var characterInstance = Script::getObjectInstance();
                    var numPieces = 5;
                    var pieceNumber = Object::getVariableAsNumber(characterInstance, 'PieceNumber');
                    var destroyScriptPrefix = 'DestroyRuffianFortPieceNumber';
                    var adHocObjectName = 'Obj_RuffianFort';
                    var maxDamage = toDouble(System::getConfigValue('__Homergeddon_Spreadsheet_Config:Forts:RuffianFort_DefenseHealth__'));
                    var runDestroyImmediately = false;
                    var destroyFromUnderCharacter = true;
                    var damageToApply = toDouble(System::getConfigValue('__Homergeddon_GameConfig:Forts:NonRuffianDamage__'));
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':IncrementDamageOnPieceFromLocator'));
                    Hook::unload(hook,false);
                    
                    Parser::evaluate(compiledHook);
                    
                    Object::deleteVariable(characterInstance, 'PieceNumber');
                    Object::deleteVariable(characterInstance, 'BuildingFortName');
                ]]></Program>
		</Action>
	</RuffianFortAssaultJobDone>
	<RuffianFortAssaultJobStart ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var characterInstance = Script::getObjectInstance();
                    var jobInstance = Character::getCurrentJobInstance(characterInstance);
                    var locatorName = JobInstance::getLocator(jobInstance);
                    var locatorNumber = replace('Pos', '', locatorName);
                    var pieceNumber = toDouble(locatorNumber)-1;
                    
                    Object::setVariable(characterInstance, 'PieceNumber', toString(pieceNumber), 0, true);
					Object::setVariable(characterInstance, 'BuildingFortName', 'RuffianFort', 0, true);
                ]]></Program>
		</Action>
	</RuffianFortAssaultJobStart>
	<RuffianFortAssaultSansLocatorsJobStart ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var characterInstance = Script::getObjectInstance();
                    var pieceNumber = 100;
                    
                    Object::setVariable(characterInstance, 'PieceNumber', toString(pieceNumber), 0, true);
					Object::setVariable(characterInstance, 'BuildingFortName', 'RuffianFort', 0, true);
                ]]></Program>
		</Action>
	</RuffianFortAssaultSansLocatorsJobStart>
	<DestroyRuffianFortPieceNumber0 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 0;
                    var vfxScriptName = 'PlayRuffianPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 0;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                    var destroyedScript = 'RuffianFortHasBeenDestroyed';
                    var adHocObjectName = 'Obj_RuffianFort';
                    var numPieces = 5;
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':CheckForDestroyed'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyRuffianFortPieceNumber0>
	<DestroyRuffianFortPieceNumber1 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 1;
                    var vfxScriptName = 'PlayRuffianPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 1;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                    var destroyedScript = 'RuffianFortHasBeenDestroyed';
                    var adHocObjectName = 'Obj_RuffianFort';
                    var numPieces = 5;
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':CheckForDestroyed'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyRuffianFortPieceNumber1>
	<DestroyRuffianFortPieceNumber2 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 2;
                    var vfxScriptName = 'PlayRuffianPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 2;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                    var destroyedScript = 'RuffianFortHasBeenDestroyed';
                    var adHocObjectName = 'Obj_RuffianFort';
                    var numPieces = 5;
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':CheckForDestroyed'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyRuffianFortPieceNumber2>
	<DestroyRuffianFortPieceNumber3 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 3;
                    var vfxScriptName = 'PlayRuffianPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 3;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                    var destroyedScript = 'RuffianFortHasBeenDestroyed';
                    var adHocObjectName = 'Obj_RuffianFort';
                    var numPieces = 5;
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':CheckForDestroyed'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyRuffianFortPieceNumber3>
	<DestroyRuffianFortPieceNumber4 parallel="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 4;
                    var vfxScriptName = 'PlayRuffianPieceVFX';
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOnRubblePiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
		<Action type="delay" time="1.5" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var pieceNumber = 4;
                    
                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':TurnOffPiece'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                    
                    var destroyedScript = 'RuffianFortHasBeenDestroyed';
                    var adHocObjectName = 'Obj_RuffianFort';
                    var numPieces = 5;
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':CheckForDestroyed'));
                    Hook::unload(hook,false);
                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</DestroyRuffianFortPieceNumber4>
	<RuffianFortHasBeenDestroyed>
		<Action type="setVariable" boolVariable="RuffianBaseDestroyedTrigger" boolValue="false" />
	</RuffianFortHasBeenDestroyed>
	<RuffianFortDestroyed>
		<Action type="hideIndicators" hide="true" />
		<Action type="hideAllCharacters" exceptCharacters="RuffianAssault|RuffianAssault2|RuffianAssault3" hide="true" />
		<Action type="fadeScreen" colour="Black" direction="out" speed="1.0" />
		<Action type="pantoobject" building="MegaPlayscape" fakeTouch="false" time="0" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingInstance = Land::getFirstInstanceOfObject(Building::find('MegaPlayscape'));
                    var validPositions = Array::create();
                    for(var i = 0; i < 11; i++)
                    {
                        var locatorName = 'Pos' + toString(i+1);
                        var isLocatorValid = Building::isLocatorValid(buildingInstance, locatorName);
                        if(isLocatorValid)
                        {
                            Array::addValueForKey(validPositions, Array::size(validPositions), locatorName);
                        }
                    }
                    
                    var numValidLocators = Array::size(validPositions);
                    if(numValidLocators > 5)
                    {
                        numValidLocators = 5;
                    }
                    
                    for(var i = 0; i < numValidLocators; i++)
                    {
                        var whichRuffian = rand(3);
                        if(whichRuffian == 0)
                        {
                            Character::createInstance('RuffianAssault', false, false);
                        }
                        elseif(whichRuffian == 1)
                        {
                            Character::createInstance('RuffianAssault2', false, false);
                        }
                        else
                        {
                            Character::createInstance('RuffianAssault3', false, false);
                        }
                    }
                    ]]></Program>
		</Action>
		<Action type="runActionSequenceOnAll" character="RuffianAssault" script="Homergeddon_Scripts:StartRuffianAssaultMegaPlayscapeJobs" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault2" script="Homergeddon_Scripts:StartRuffianAssaultMegaPlayscapeJobs" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault3" script="Homergeddon_Scripts:StartRuffianAssaultMegaPlayscapeJobs" />
		<Action type="fadeScreen" colour="Black" direction="in" speed="1.0" />
		<Action type="delay" time="3.0" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var buildingInstance = Land::getFirstInstanceOfObject(Building::find(buildingName));
                    var numPieces = 15;
                    var destroyScriptPrefix = 'DestroyMegaPlayscapePieceNumberInstantly';
                    var adHocObjectName = 'Obj_MegaPlayscape';
                    var maxDamage = toDouble(System::getConfigValue('__Homergeddon_Spreadsheet_Config:Forts:MegaPlayscape_DefenseHealth__'));
                    var hook = 'Homergeddon_Hooks';
                    var runDestroyImmediately = true;
                    var destroyFromUnderCharacter = false;
                    var damageToApply = toDouble(System::getConfigValue('__Homergeddon_GameConfig:Forts:RuffianDamage__'));
                    
                    for(var i = 0; i < 11; i++)
                    {
                        var locatorName = 'Pos' + toString(i+1);
                        var isLocatorFree = Building::isLocatorFree(buildingInstance, locatorName);
                        if(!isLocatorFree)
                        {
                            var pieceNumber = i;
                            
                            Hook::load(hook,false);
                            var compiledHook = Parser::compile(Hook::toString(hook+':IncrementDamageOnPieceFromLocator'));
                            Hook::unload(hook,false);
                            
                            Parser::evaluate(compiledHook);
                        }
                    }
                ]]></Program>
		</Action>
		<Action type="fadeScreen" colour="Black" direction="out" speed="1.0" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault" script="Homergeddon_Scripts:DeleteRuffianAssaultCharacter" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault2" script="Homergeddon_Scripts:DeleteRuffianAssaultCharacter" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault3" script="Homergeddon_Scripts:DeleteRuffianAssaultCharacter" />
		<Action type="pantoobject" building="JunkBase" fakeTouch="false" time="0" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingInstance = Land::getFirstInstanceOfObject(Building::find('JunkBase'));
                    var validPositions = Array::create();
                    for(var i = 0; i < 11; i++)
                    {
                        var locatorName = 'Pos' + toString(i+1);
                        var isLocatorValid = Building::isLocatorValid(buildingInstance, locatorName);
                        if(isLocatorValid)
                        {
                            Array::addValueForKey(validPositions, Array::size(validPositions), locatorName);
                        }
                    }
                    
                    var numValidLocators = Array::size(validPositions);
                    if(numValidLocators > 5)
                    {
                        numValidLocators = 5;
                    }
                    
                    for(var i = 0; i < numValidLocators; i++)
                    {
                        var whichRuffian = rand(3);
                        if(whichRuffian == 0)
                        {
                            Character::createInstance('RuffianAssault', false, false);
                        }
                        elseif(whichRuffian == 1)
                        {
                            Character::createInstance('RuffianAssault2', false, false);
                        }
                        else
                        {
                            Character::createInstance('RuffianAssault3', false, false);
                        }
                    }
                ]]></Program>
		</Action>
		<Action type="runActionSequenceOnAll" character="RuffianAssault" script="Homergeddon_Scripts:StartRuffianAssaultJunkBaseJobs" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault2" script="Homergeddon_Scripts:StartRuffianAssaultJunkBaseJobs" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault3" script="Homergeddon_Scripts:StartRuffianAssaultJunkBaseJobs" />
		<Action type="fadeScreen" colour="Black" direction="in" speed="1.0" />
		<Action type="delay" time="3.0" />
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var buildingInstance = Land::getFirstInstanceOfObject(Building::find('JunkBase'));
                    var numPieces = 15;
                    var destroyScriptPrefix = 'DestroyJunkBasePieceNumberInstantly';
                    var adHocObjectName = 'Obj_JunkBase';
                    var maxDamage = toDouble(System::getConfigValue('__Homergeddon_Spreadsheet_Config:Forts:JunkBase_DefenseHealth__'));
                    var hook = 'Homergeddon_Hooks';
                    var runDestroyImmediately = true;
                    var destroyFromUnderCharacter = false;
                    var damageToApply = toDouble(System::getConfigValue('__Homergeddon_GameConfig:Forts:RuffianDamage__'));
                    
                    for(var i = 0; i < 11; i++)
                    {
                        var locatorName = 'Pos' + toString(i+1);
                        var isLocatorFree = Building::isLocatorFree(buildingInstance, locatorName);
                        if(!isLocatorFree)
                        {
                            var pieceNumber = i;
                            
                            Hook::load(hook,false);
                            var compiledHook = Parser::compile(Hook::toString(hook+':IncrementDamageOnPieceFromLocator'));
                            Hook::unload(hook,false);
                            
                            Parser::evaluate(compiledHook);
                        }
                    }
                ]]></Program>
		</Action>
		<Action type="fadeScreen" colour="Black" direction="out" speed="1.0" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault" script="Homergeddon_Scripts:DeleteRuffianAssaultCharacter" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault2" script="Homergeddon_Scripts:DeleteRuffianAssaultCharacter" />
		<Action type="runActionSequenceOnAll" character="RuffianAssault3" script="Homergeddon_Scripts:DeleteRuffianAssaultCharacter" />
		<Action type="hideAllCharacters" hide="false" />
		<Action type="hideIndicators" hide="false" />
		<Action type="fadeScreen" colour="Black" direction="in" speed="1.0" />
		<Action type="message" text="UI_RuffiansHaveAttacked" revealSpeed="medium" />
		<Action type="setVariable" intVariable="RuffianFortStartTime" intValue="serverTime(0)" asExpression="true" />
		<Action type="setVariable" intVariable="RuffianFortEndTime" intValue="serverTime(0) + 14400" asExpression="true" />
		<Action type="scheduleScript" mode="delete" script="Homergeddon_Scripts:RuffianFortRebuilt" />
		<Action type="scheduleScript" mode="create" script="Homergeddon_Scripts:RuffianFortRebuilt" relativeTime="4h" localLandOnly="true" shouldSave="true" />
		<Action type="setVariable" boolVariable="RuffianBaseDestroyedTrigger" boolValue="false" />
	</RuffianFortDestroyed>
	<StartRuffianAssaultMegaPlayscapeJobs>
		<Action type="startJob" name="RuffiansAssaultMegaPlayscape" ignoreObject="false" startImmediately="true" />
	</StartRuffianAssaultMegaPlayscapeJobs>
	<StartRuffianAssaultJunkBaseJobs>
		<Action type="startJob" name="RuffiansAssaultJunkBase" ignoreObject="false" startImmediately="true" />
	</StartRuffianAssaultJunkBaseJobs>
	<DeleteRuffianAssaultCharacter>
		<Action type="setObjectFlag" flags="delete" />
		<Action type="deletecharacter" />
	</DeleteRuffianAssaultCharacter>
	<RuffianFortRebuilt ignoreHUD="true">
		<Action type="setVariable" boolVariable="RuffianBaseDestroyedTrigger" boolValue="false" />
	</RuffianFortRebuilt>
	<GoTo_Tappables ignoreHUD="true">
		<Action type="checkRequirements">
			<Requirement type="land" land="Springfield" />
			<False>
				<Action type="gotoland" land="Springfield" showPopup="true" />
			</False>
			<True>
				<Action type="if">
					<If expression="#program;                     if(User::getVariable('BankedRuffians') &gt; 0)                     {                         return false;                     }                     else                     {                         var character = Character::find('Ruffian');                         var characterInstanceList = Land::getAllInstancesOfObject(character);                         foreach(characterInstanceList as instance)                         {                             if(!Object::getDelete(instance))                             {                                 return false;                             }                         }                     }                     return true;">
						<Then>
							<Action type="hudTip" text="UI_Homergeddon_AllTappablesCleared" time="10s" requiresActiveHUD="false" />
						</Then>
					</If>
					<Else>
						<Then>
							<Action type="pantoobject" time="0" character="Ruffian" flagsToAvoid="delete" />
						</Then>
					</Else>
				</Action>
			</True>
		</Action>
	</GoTo_Tappables>
	<SpawnFullHudTip>
		<Action type="hudTip" text="UI_Homergeddon_TownFull" time="3s" queue="true" waitForHUD="true" />
	</SpawnFullHudTip>
	<DodgeballCourt_Tapped parallel="true" ignoreHUD="true">
		<Action type="anim-play" animation="Active_Ball" />
	</DodgeballCourt_Tapped>
	<TappableTapped parallel="true" cache="true">
		<Action type="runScriptOnAll" character="Ruffian" in_radius="5" radius_delay="0.3" script="Homergeddon_Scripts:Tappable_Tapped_Single" />
		<Action type="actionSequence" script="Homergeddon_Scripts:Tappable_Tapped_Single" />
	</TappableTapped>
	<Tappable_Tapped_Single parallel="true" cache="true">
		<Action type="if">
			<If expression="bitwiseAnd([Object::ObjectFlags], 1) == 0" asObjectExpression="true">
				<Then>
					<Action type="setObjectVariable" variable="TAPPED" value="1" allowOrphan="false" asExpression="true" />
					<Action type="actionSequence" script="Homergeddon_Scripts:Tappable_Reward" />
					<Action type="setObjectFlag" flags="delete" />
					<Action type="runScript" script="Homergeddon_Scripts:Tappable_AnimateAndDie_Single" />
				</Then>
			</If>
		</Action>
	</Tappable_Tapped_Single>
	<Tappable_AnimateAndDie_Single parallel="true" cache="true">
		<Action type="sound" sound="Tappable_tap" />
		<Action type="anim-play" character="Ruffian" animation="Tap" />
		<Action type="anim-waitforend" />
		<Action type="fade" fade="outmax" />
		<Action type="deletecharacter" character="Ruffian" />
		<Action type="checkRequirements" ignoreObject="false">
			<Requirements>
				<Requirement type="active quest" quest="Homergeddon_DCS_ClearRuffians" />
			</Requirements>
			<True>
				<Action type="setVariable" intVariable="Homergeddon_DCS_Ruffians" intValue="Homergeddon_DCS_Ruffians+1" />
			</True>
		</Action>
		<Action type="if">
			<If expression="#program;             if(User::getVariable('BankedRuffians') &gt; 0)             {                 return false;             }             else             {                 var character = Character::find('Ruffian');                 var characterInstanceList = Land::getAllInstancesOfObject(character);                 foreach(characterInstanceList as instance)                 {                     if(!Object::getDelete(instance))                     {                         return false;                     }                 }             }             return true;">
				<Then>
					<Action type="hudTip" text="UI_Homergeddon_AllTappablesCleared" time="10s" requiresActiveHUD="false" />
				</Then>
			</If>
		</Action>
	</Tappable_AnimateAndDie_Single>
	<Tappable_Reward parallel="true" cache="true">
		<Action type="reward" save="true" Homergeddon_ActivePrizeTrackCurrency="__Homergeddon_GameConfig:TappablePrizeReward:Amount__" chance="__Homergeddon_Spreadsheet_Config:Tappables:DropChance_PTCurrency__" chanceType="s" suppress_sound="true" />
		<Action type="reward" save="true" Homergeddon_CraftingCurrency="__Homergeddon_GameConfig:TappableCraftReward:Amount__" chance="__Homergeddon_Spreadsheet_Config:Tappables:DropChance_Craft1__" chanceType="s" suppress_sound="true" />
		<Action type="setVariable" intVariable="Ruffians_Tapped" intValue="Ruffians_Tapped+1" />
	</Tappable_Reward>
	<HappyValentines2018Seen>
		<Action type="setVariable" boolVariable="HasSeenValentineDonutsMessage" boolValue="true" />
	</HappyValentines2018Seen>
	<Tappable_Crowd cache="true" parallel="true">
		<Action type="if">
			<If>
				<Requirements>
					<Requirement type="building" building="RuffianFort" />
					<Requirement type="formula" formula="greaterThanEQ(Homergeddon_BaseLocationIndex, 2)" />
				</Requirements>
				<Then>
					<Action type="setMovementBehavior">
						<MovementBehavior mode="RandomRelaxed" startState="AtLocation" orbitBuildingName="RuffianFort" orbitMaxDistance="10" faceOrbitBuilding="true" orbitFrontDoor="false" randomOrbitMaxOffset="5" />
					</Action>
				</Then>
			</If>
			<ElseIf>
				<Requirements>
					<Requirement type="building" building="JunkBase" />
					<Requirement type="formula" formula="greaterThanEQ(Homergeddon_BaseLocationIndex, 1)" />
				</Requirements>
				<Then>
					<Action type="setMovementBehavior">
						<MovementBehavior mode="RandomRelaxed" startState="AtLocation" orbitBuildingName="JunkBase" orbitMaxDistance="10" faceOrbitBuilding="true" orbitFrontDoor="false" randomOrbitMaxOffset="5" />
					</Action>
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirements>
					<Requirement type="building" building="MegaPlayscape" />
				</Requirements>
				<Then>
					<Action type="setMovementBehavior">
						<MovementBehavior mode="RandomRelaxed" startState="AtLocation" orbitBuildingName="MegaPlayscape" orbitMaxDistance="10" faceOrbitBuilding="true" orbitFrontDoor="false" randomOrbitMaxOffset="5" />
					</Action>
				</Then>
			</ElseIf>
			<Else>
				<Then>
					<Action type="setMovementBehavior">
						<MovementBehavior mode="RandomRelaxed" />
					</Action>
				</Then>
			</Else>
		</Action>
		<Action type="setVariable" intVariable="Homergeddon_NumBasesActive" intValue="System::evaluate('Building::MegaPlayscape::LandCount') + System::evaluate('Building::JunkBase::LandCount') + System::evaluate('Building::RuffianFort::LandCount')" />
		<Action type="setVariable" intVariable="Homergeddon_BaseLocationIndex" intValue="mod((Homergeddon_BaseLocationIndex+1), Homergeddon_NumBasesActive)" />
	</Tappable_Crowd>
	<Tappable_EndIdleWander parallel="true" runQueueState="RunInAnyState">
		<Action type="setcontroller" controller="Ruffian_Taunt" character="" block="false" focus="false" />
	</Tappable_EndIdleWander>
	<Tappable_RefreshCrowdLocations>
		<Action type="runScriptOnAll" character="Ruffian" script="Homergeddon_Scripts:Tappable_Crowd" />
	</Tappable_RefreshCrowdLocations>
	<StoreNotification_HansMechman>
		<Action type="checkRequirements">
			<Requirement type="item" item="HansMechman" checkInventoryOnly="false" not="true" />
			<True>
				<Action type="notificationLarge" title="CHA_HansMechman_name" text="CHA_HansMechman_upsell_desc" icon="ICO_STOR_Single_Homergeddon_MTXHansMechman" button="UI_OK" />
				<Action type="focusOnMenuItem" storeCurrencyType="donuts" storeCurrencyAmount="192" />
			</True>
		</Action>
	</StoreNotification_HansMechman>
	<Message_HansMechman>
		<Action type="checkRequirements">
			<Requirement type="item" item="HansMechman" checkInventoryOnly="true" />
			<True>
				<Action type="focusOnMenuItem" itemName="HansMechman" inventory="true" />
			</True>
		</Action>
	</Message_HansMechman>
	<SpawnFriendTappables>
		<Action type="if">
			<If>
				<Requirements>
					<Requirement type="friendlevel" level="15" />
				</Requirements>
				<Then>
					<Action type="createobject" name="Ruffian" count="40" save="true" panCamera="false" />
				</Then>
			</If>
			<ElseIf>
				<Requirements>
					<Requirement type="friendlevel" level="10" />
				</Requirements>
				<Then>
					<Action type="createobject" name="Ruffian" count="30" save="true" panCamera="false" />
				</Then>
			</ElseIf>
			<ElseIf>
				<Requirements>
					<Requirement type="friendlevel" level="5" />
				</Requirements>
				<Then>
					<Action type="createobject" name="Ruffian" count="20" save="true" panCamera="false" />
				</Then>
			</ElseIf>
		</Action>
	</SpawnFriendTappables>
	<TappableTapped_Friend>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="friendactioncount" amount="3" special="false" not="true" />
			</Requirements>
			<True>
				<Action type="friendActionPerformed" />
				<Action type="actionSequence" script="Homergeddon_Scripts:Tappable_Reward_Friend" />
				<Action type="runScript" script="Homergeddon_Scripts:Tappable_AnimateAndDie_Friend" />
				<Action type="checkRequirements" ignoreObject="false">
					<Requirements>
						<Requirement type="active quest" quest="Homergeddon_DCS_ClearRuffiansFriendsTown" />
					</Requirements>
					<True>
						<Action type="setVariable" intVariable="Homergeddon_DCS_Ruffians_Friends" intValue="Homergeddon_DCS_Ruffians_Friends+1" />
					</True>
				</Action>
			</True>
		</Action>
	</TappableTapped_Friend>
	<Tappable_AnimateAndDie_Friend parallel="true" cache="true">
		<Action type="sound" sound="Tappable_tap" />
		<Action type="stop" />
		<Action type="anim-play" character="Ruffian" animation="Tap" />
		<Action type="anim-waitforend" />
		<Action type="fade" fade="outmax" />
		<Action type="deletecharacter" character="Ruffian" />
		<Action type="setVariable" intVariable="Ruffians_Tapped_Friend" intValue="Ruffians_Tapped_Friend+1" />
	</Tappable_AnimateAndDie_Friend>
	<Tappable_Reward_Friend parallel="true" cache="true">
		<Action type="reward" save="true" Homergeddon_ActivePrizeTrackCurrency="selector Homergeddon_PTCurrencyPerFriendAction" chance="__Homergeddon_Spreadsheet_Config:Tappables:DropChance_PTCurrency__" chanceType="s" suppress_sound="true" />
		<Action type="reward" save="true" Homergeddon_CraftingCurrency="selector Homergeddon_CraftingCurrencyPerFriendAction" chance="__Homergeddon_Spreadsheet_Config:Tappables:DropChance_Craft1__" chanceType="s" suppress_sound="true" />
		<Action type="reward" save="true" money="selector socialMoneyReward" xp="1" FriendPoint="selector friendPointsReward" donuts="1" chance="selector socialDonutChanceReward" chanceType="d" suppress_sound="true" />
	</Tappable_Reward_Friend>
	<SocialLicensePurchased>
		<Action type="setVariable" boolVariable="Homergeddon_SocialUpgrade_Purchased" boolValue="true" />
		<Action type="notification" icon="ICO_STOR_Homergeddon_License_Popup" title="CON_Homergeddon_SocialLicense_name" text="CON_Homergeddon_SocialLicense_desc" button="UI_OK" />
	</SocialLicensePurchased>
	<FriendsHUDInfo>
		<Action type="triggerevent" name="ScriptEvent" data="Homergeddon_UpdateFriendActionHelpVariables" />
		<Action type="runScript" script="Homergeddon_Scripts:FriendsHUDInfoAux" />
	</FriendsHUDInfo>
	<FriendsHUDInfoAux>
		<Action type="checkRequirements">
			<Requirement type="reqList" location="Homergeddon_Requirements:ActOne" />
			<True>
				<Action type="checkRequirements">
					<Requirement type="variable" variable="FriendActionsCount" count="30" not="true" />
					<True>
						<Action type="notification" title="RES_Homergeddon_PT1_Plural" button="UI_OK" text="GEN_ResourceListing_Homergeddon_PT1" icon="ICO_CUR_Homergeddon_CurrencyAct1_LG">
							<Variable name="HOMERGEDDON_PT1_FOR_NEXT_FRIEND_ACTION" type="int" />
							<Variable name="HOMERGEDDON_ACTIONS_UNTIL_NEXT_MULTIPLIER" type="int" />
						</Action>
					</True>
					<False>
						<Action type="notification" title="RES_Homergeddon_PT1_Plural" button="UI_OK" text="UI_Homergeddon_OutOfFriendActions_PT1" icon="ICO_CUR_Homergeddon_CurrencyAct1_LG"></Action>
					</False>
				</Action>
			</True>
		</Action>
		<Action type="checkRequirements">
			<Requirement type="reqList" location="Homergeddon_Requirements:ActTwo" />
			<True>
				<Action type="checkRequirements">
					<Requirement type="variable" variable="FriendActionsCount" count="30" not="true" />
					<True>
						<Action type="notification" title="RES_Homergeddon_PT2_Plural" button="UI_OK" text="GEN_ResourceListing_Homergeddon_PT2" icon="ICO_CUR_Homergeddon_CurrencyAct2_LG">
							<Variable name="HOMERGEDDON_PT2_FOR_NEXT_FRIEND_ACTION" type="int" />
							<Variable name="HOMERGEDDON_ACTIONS_UNTIL_NEXT_MULTIPLIER" type="int" />
						</Action>
					</True>
					<False>
						<Action type="notification" title="RES_Homergeddon_PT2_Plural" button="UI_OK" text="UI_Homergeddon_OutOfFriendActions_PT2" icon="ICO_CUR_Homergeddon_CurrencyAct2_LG"></Action>
					</False>
				</Action>
			</True>
		</Action>
		<Action type="checkRequirements">
			<Requirement type="reqList" location="Homergeddon_Requirements:ActThree" />
			<True>
				<Action type="checkRequirements">
					<Requirement type="variable" variable="FriendActionsCount" count="30" not="true" />
					<True>
						<Action type="notification" title="RES_Homergeddon_PT3_Plural" button="UI_OK" text="GEN_ResourceListing_Homergeddon_PT3" icon="ICO_CUR_Homergeddon_CurrencyAct3_LG">
							<Variable name="HOMERGEDDON_PT3_FOR_NEXT_FRIEND_ACTION" type="int" />
							<Variable name="HOMERGEDDON_ACTIONS_UNTIL_NEXT_MULTIPLIER" type="int" />
						</Action>
					</True>
					<False>
						<Action type="notification" title="RES_Homergeddon_PT3_Plural" button="UI_OK" text="UI_Homergeddon_OutOfFriendActions_PT3" icon="ICO_CUR_Homergeddon_CurrencyAct3_LG"></Action>
					</False>
				</Action>
			</True>
		</Action>
	</FriendsHUDInfoAux>
	<DCS_Reset_Ruffians>
		<Action type="updateVariable" variable="Homergeddon_DCS_Ruffians" value="0" />
	</DCS_Reset_Ruffians>
	<FakeTouchMegaPlayscape>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="players land" />
			</Requirements>
			<True>
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="MegaPlayscape" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="runScript" script="MiscScripts:ReturnToGameState" />
					</True>
					<False>
						<Action type="gotoState" state="GameState_BuildingSelected">
							<Extras>
								<Attribute name="BuildingName" value="MegaPlayscape" />
							</Extras>
						</Action>
					</False>
				</Action>
			</True>
		</Action>
	</FakeTouchMegaPlayscape>
	<FakeTouchJunkBase>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="players land" />
			</Requirements>
			<True>
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="JunkBase" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="runScript" script="MiscScripts:ReturnToGameState" />
					</True>
					<False>
						<Action type="gotoState" state="GameState_BuildingSelected">
							<Extras>
								<Attribute name="BuildingName" value="JunkBase" />
							</Extras>
						</Action>
					</False>
				</Action>
			</True>
		</Action>
	</FakeTouchJunkBase>
	<FakeTouchRuffianFort>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="players land" />
			</Requirements>
			<True>
				<Action type="checkRequirements">
					<Requirements>
						<Requirement type="item" item="RuffianFort" checkInventoryOnly="true" />
					</Requirements>
					<True>
						<Action type="runScript" script="MiscScripts:ReturnToGameState" />
					</True>
					<False>
						<Action type="gotoState" state="GameState_BuildingSelected">
							<Extras>
								<Attribute name="BuildingName" value="RuffianFort" />
							</Extras>
						</Action>
					</False>
				</Action>
			</True>
		</Action>
	</FakeTouchRuffianFort>
	<SetJebediahStatueToNormal>
		<Action type="setBuildingSkin" building="JebediahStatue" skinName="JebediahStatue" />
	</SetJebediahStatueToNormal>
	<OnJebediahStatueTouched>
		<Action type="checkRequirements">
			<Requirements>
				<Requirement type="active job" job="DisgraceALocalLandmark" />
			</Requirements>
			<True>
				<Action type="pantoobject" character="JessicaLovejoy" fakeTouch="true" time="0" />
			</True>
			<False>
				<Action type="gotoState" state="GameState_BuildingSelected">
					<Extras>
						<Attribute name="BuildingName" value="JebediahStatue" />
					</Extras>
				</Action>
			</False>
		</Action>
	</OnJebediahStatueTouched>
	<OnMoeGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="Internal_RandomLocatorName" />
	</OnMoeGained>
	<OnGrampaGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="Internal_RandomLocatorName" />
	</OnGrampaGained>
	<OnBurnsGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="Internal_RandomLocatorName" />
	</OnBurnsGained>
	<OnPyroGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="Internal_RandomLocatorName" />
	</OnPyroGained>
	<OnHomerGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="Internal_RandomLocatorName" />
	</OnHomerGained>
	<OnKrustyGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="Internal_RandomLocatorName" />
	</OnKrustyGained>
	<OnCletusGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="Internal_RandomLocatorName" />
	</OnCletusGained>
	<OnWillyGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="Internal_RandomLocatorName" />
	</OnWillyGained>
	<OnWendellBortonGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="Internal_RandomLocatorName" />
	</OnWendellBortonGained>
	<OnErikGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="Internal_RandomLocatorName" />
	</OnErikGained>
	<OnBartGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="Internal_RandomLocatorName" />
	</OnBartGained>
	<OnMilhouseGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="Internal_RandomLocatorName" />
	</OnMilhouseGained>
	<OnMartinGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="Internal_RandomLocatorName" />
	</OnMartinGained>
	<OnNelsonGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="Internal_RandomLocatorName" />
	</OnNelsonGained>
	<OnRalphGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="Internal_RandomLocatorName" />
	</OnRalphGained>
	<OnJeremyJailbirdGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="Internal_RandomLocatorName" />
	</OnJeremyJailbirdGained>
	<OnPitaGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="Internal_RandomLocatorName" />
	</OnPitaGained>
	<OnPetaGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="Internal_RandomLocatorName" />
	</OnPetaGained>
	<OnMountainManGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="Internal_RandomLocatorName" />
	</OnMountainManGained>
	<OnIceBishopOfBeverlyHillsGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="Internal_RandomLocatorName" />
	</OnIceBishopOfBeverlyHillsGained>
	<OnCrazyCatLadyGained ignoreHUD="true">
		<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="Internal_RandomLocatorName" />
	</OnCrazyCatLadyGained>
	<RuffianPet_Tapped parallel="true">
		<Action type="anim-play" animation="Tap" />
	</RuffianPet_Tapped>
	<Notification_AllFortificationsBuilt>
		<Action type="returnToInGameState" waitForState="true" />
		<Action type="message" text="UI_Homergeddon_AllFortificationsBuilt" />
	</Notification_AllFortificationsBuilt>
	<Notification_NoDamagedFortifications>
		<Action type="returnToInGameState" waitForState="true" />
		<Action type="message" text="UI_Homergeddon_NoDamagedFortifications" />
	</Notification_NoDamagedFortifications>
	<RepairMegaPlayscape ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'MegaPlayscape';
                    var numPieces = 15;

                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':RepairFort'));
                    Hook::unload(hook,false);

                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</RepairMegaPlayscape>
	<RepairJunkBase ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'JunkBase';
                    var numPieces = 15;

                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':RepairFort'));
                    Hook::unload(hook,false);

                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</RepairJunkBase>
	<RepairRuffianFort ignoreHUD="true">
		<Action type="program">
			<Program><![CDATA[
                    #program;
                    var buildingName = 'RuffianFort';
                    var numPieces = 5;

                    var hook = 'Homergeddon_Hooks';
                    Hook::load(hook,false);
                    var compiledHook = Parser::compile(Hook::toString(hook+':RepairFort'));
                    Hook::unload(hook,false);

                    Parser::evaluate(compiledHook);
                ]]></Program>
		</Action>
	</RepairRuffianFort>
	<RuffianFort_JobInterupted ignoreHUD="true">
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('MountainMan'));                  if(!isNULL(charInstance))                  {                     return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('IceBishopOfBeverlyHills'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('CrazyCatLady'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Grampa'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Burns'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Pyro'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Homer'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Krusty'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Cletus'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Willy'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Moe'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('WendellBorton'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Erik'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('JeremyJailbird'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Pita'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Peta'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Bart'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Milhouse'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Martin'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Nelson'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                  var charInstance = Land::getFirstInstanceOfObject(Character::find('Ralph'));                  if(!isNULL(charInstance))                  {                  return Object::getVariable(charInstance, 'BuildingFortName') == 'RuffianFort';                  }                  return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
	</RuffianFort_JobInterupted>
	<JunkBase_JobInterupted ignoreHUD="true">
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('MountainMan'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('IceBishopOfBeverlyHills'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('CrazyCatLady'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Grampa'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Burns'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Pyro'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Homer'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Krusty'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Cletus'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Willy'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Moe'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('WendellBorton'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Erik'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('JeremyJailbird'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Pita'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Peta'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Bart'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Milhouse'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Martin'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Nelson'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Ralph'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'JunkBase';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
	</JunkBase_JobInterupted>
	<MegaPlayscape_JobInterupted ignoreHUD="true">
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('MountainMan'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="MountainMan" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('IceBishopOfBeverlyHills'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="IceBishopOfBeverlyHills" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('CrazyCatLady'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="CrazyCatLady" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Grampa'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Grampa" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Burns'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Burns" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Pyro'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pyro" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Homer'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Homer" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Krusty'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Krusty" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Cletus'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Cletus" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Willy'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Willy" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Moe'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Moe" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('WendellBorton'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="WendellBorton" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Erik'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Erik" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('JeremyJailbird'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="JeremyJailbird" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Pita'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Pita" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Peta'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Peta" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Bart'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Bart" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Milhouse'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Milhouse" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Martin'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Martin" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Nelson'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Nelson" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
		<Action type="if">
			<If expression="#program;                 var charInstance = Land::getFirstInstanceOfObject(Character::find('Ralph'));                 if(!isNULL(charInstance))                 {                 return Object::getVariable(charInstance, 'BuildingFortName') == 'MegaPlayscape';                 }                 return false;">
				<Then>
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="Internal_RandomLocatorName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="BuildingFortName" />
					<Action type="deleteObjectVariable" onType="character" onObject="Ralph" variable="PieceNumber" />
				</Then>
			</If>
		</Action>
	</MegaPlayscape_JobInterupted>
</ScriptPackage>