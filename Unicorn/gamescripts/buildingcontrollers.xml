<BuildingControllers>
	<Sequence name="Neutral">
		<Animation name="Neutral" loop="true" />
	</Sequence>
	<Sequence name="NeutralFastBreak">
		<Animation name="Neutral" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="NeutralNoLoop">
		<Animation name="Neutral" />
	</Sequence>
	<Sequence name="Active">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="InActiveOut">
		<Animation name="In" skipIfMissing="true" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveFastBreak">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop>
			<Animation name="Active" fastBreak="true" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveEmpty">
		<Animation name="Active_In_Empty" skipIfMissing="true" />
		<Loop>
			<Animation name="Active_Empty" />
		</Loop>
		<Animation name="Active_Out_Empty" skipIfMissing="true" />
	</Sequence>
	<Loop name="ActiveTestDeathDrop">
		<Sequence>
			<Animation name="Active1" />
			<Animation name="Active2" />
		</Sequence>
	</Loop>
	<Sequence name="ActiveNoLoop">
		<Animation name="Active_In" skipIfMissing="true" />
		<Animation name="Active" />
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveTwiceNoLoop">
		<Animation name="Active_In" skipIfMissing="true" />
		<Animation name="Active" />
		<Animation name="Active" />
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveTopNoLoop">
		<Animation name="ActiveInTop" skipIfMissing="true" />
		<Animation name="ActiveTop" />
		<Animation name="ActiveOutTop" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_TopNoLoop">
		<Animation name="Active_In_Top" skipIfMissing="true" />
		<Animation name="Active_Top" />
		<Animation name="Active_Out_Top" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveBottomNoLoop">
		<Animation name="ActiveInBottom" skipIfMissing="true" />
		<Animation name="ActiveBottom" />
		<Animation name="ActiveOutBottom" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_BaseNoLoop">
		<Animation name="Active_In_Base" skipIfMissing="true" />
		<Animation name="Active_Base" />
		<Animation name="Active_Out_Base" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_OrangeNoLoop">
		<Animation name="Active_In_Orange" skipIfMissing="true" />
		<Animation name="Active_Orange" />
		<Animation name="Active_Out_Orange" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_YellowNoLoop">
		<Animation name="Active_In_Yellow" skipIfMissing="true" />
		<Animation name="Active_Yellow" />
		<Animation name="Active_Out_Yellow" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_GreenNoLoop">
		<Animation name="Active_In_Green" skipIfMissing="true" />
		<Animation name="Active_Green" />
		<Animation name="Active_Out_Green" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_BlueNoLoop">
		<Animation name="Active_In_Blue" skipIfMissing="true" />
		<Animation name="Active_Blue" />
		<Animation name="Active_Out_Blue" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Active_PurpleNoLoop">
		<Animation name="Active_In_Purple" skipIfMissing="true" />
		<Animation name="Active_Purple" />
		<Animation name="Active_Out_Purple" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Tap_Top">
		<Animation name="Tap_Top" />
	</Sequence>
	<Sequence name="Tap_Base">
		<Animation name="Tap_Base" />
	</Sequence>
	<Sequence name="TapThreeRandom">
		<Random>
			<Animation name="Tap1" />
			<Animation name="Tap2" />
			<Animation name="Tap3" />
		</Random>
	</Sequence>
	<Sequence name="TapTwoRandom_Tap1Tap2">
		<Random chance="0.5">
			<Animation name="Tap1" />
			<Animation name="Tap2" />
		</Random>
	</Sequence>
	<Sequence name="TapTwoRandom">
		<Random chance="0.5">
			<Animation name="Tap01" />
			<Animation name="Tap02" />
		</Random>
	</Sequence>
	<Sequence name="TapTwoRandom_TapTap2">
		<Random chance="0.5">
			<Animation name="Tap" />
			<Animation name="Tap2" />
		</Random>
	</Sequence>
	<Sequence name="ActiveStation">
		<Animation name="Active_InBase" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveBase" />
		</Loop>
		<Animation name="Active_OutBase" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveTop">
		<Animation name="Active_InTop" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveTop" />
		</Loop>
		<Animation name="Active_OutTop" skipIfMissing="true" />
	</Sequence>
	<Sequence name="SingleActive">
		<Sequence>
			<Loop loops="5">
				<Animation name="Neutral" />
			</Loop>
		</Sequence>
		<Animation name="Active_In" skipIfMissing="true" />
		<Animation name="Active" />
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="QuickActive">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop loops="3">
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="NeutralLoops">
		<Loop loops="5">
			<Animation name="Neutral" />
		</Loop>
	</Sequence>
	<Loop name="OccasionalActive">
		<Random chance="0.5">
			<Controller name="NeutralLoops" />
			<Controller name="QuickActive" />
		</Random>
	</Loop>
	<Loop name="OccasionalActiveSnakeDec">
		<Random chance="0.6">
			<Controller name="NeutralLoops" />
			<Controller name="SingleActive" />
		</Random>
	</Loop>
	<Loop name="OccasionalActiveZiffCorpSignDec">
		<Random chance="0.95">
			<Controller name="NeutralLoops" />
			<Controller name="SingleActive" />
		</Random>
	</Loop>
	<Sequence name="GenericActiveNeutral_Toggle">
		<Logic>
			<If expression="Object::State==0">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GenericActive01Neutral_Toggle">
		<Logic>
			<If expression="Object::State==0">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Active_01" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GenericActiveNeutral_Tap">
		<Logic>
			<If expression="Object::State==0">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Tap" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GenericToggle_Neutral_Toggle">
		<Logic>
			<If expression="Object::State==0">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Toggle" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GenericActiveInOutNeutral_Toggle">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Animation name="Active_In" script="MiscScripts:Decoration_ActiveIn_Done" />
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Active_Out" script="MiscScripts:Decoration_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GenericInOut_Toggle">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Animation name="In" script="MiscScripts:Decoration_ActiveIn_Done" />
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Out" script="MiscScripts:Decoration_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="PodPatchActiveInOutNeutral_Toggle">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Animation name="Active_In" script="THOH2018TieIn_Scripts:PodPatch_ActiveIn_Done" />
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Active_Out" script="THOH2018TieIn_Scripts:PodPatch_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="WindowBreak">
		<Animation name="WINDOWBREAK_IN" />
		<Animation name="WINDOWBREAK_ACTIVE" loop="true" />
		<Animation name="WINDOWBREAK_OUT" />
	</Sequence>
	<Loop name="CemeteryIdle">
		<Sequence>
			<Animation name="NEUTRAL" />
			<Animation name="ZOMBIEHAND_00" />
			<Animation name="NEUTRAL" />
			<Animation name="ZOMBIEHAND_01" />
			<Animation name="ZOMBIEHAND_02" />
			<Animation name="NEUTRAL" />
			<Animation name="ZOMBIEHAND_01" />
		</Sequence>
	</Loop>
	<Sequence name="ChickenNeutral">
		<Animation name="Neutral" loop="true" randomStartFrame="true" />
	</Sequence>
	<Sequence name="Attack">
		<Animation name="Attack" loop="true" randomStartFrame="true" />
	</Sequence>
	<Sequence name="PortalGateTop">
		<Animation name="PortalGateTop" loop="true" />
	</Sequence>
	<Sequence name="PortalGateLeft">
		<Animation name="PortalGateLeft" loop="true" />
	</Sequence>
	<Sequence name="PortalGateRight">
		<Animation name="PortalGateRight" loop="true" />
	</Sequence>
	<Sequence name="PortalGateBase">
		<Animation name="PortalGateBase" loop="true" />
	</Sequence>
	<Sequence name="FireCannon">
		<Loop formula="System::evaluate('Selector::CannonCostFormula')">
			<Random>
				<Animation name="Shoot1" script="XMAS2014_Scripts_Pt2:Shake" />
				<Animation name="Shoot2" script="XMAS2014_Scripts_Pt2:Shake" />
				<Animation name="Shoot3" script="XMAS2014_Scripts_Pt2:Shake" />
			</Random>
		</Loop>
	</Sequence>
	<Sequence name="FireCannonFromFriendAction">
		<Loop formula="10">
			<Random>
				<Animation name="Shoot1" script="XMAS2014_Scripts_Pt2:ShakeFromFriendAction" />
				<Animation name="Shoot2" script="XMAS2014_Scripts_Pt2:ShakeFromFriendAction" />
				<Animation name="Shoot3" script="XMAS2014_Scripts_Pt2:ShakeFromFriendAction" />
			</Random>
		</Loop>
	</Sequence>
	<Sequence name="FireCannonIn">
		<Animation name="ActiveIn" />
	</Sequence>
	<Sequence name="FireCannonOut">
		<Animation name="ActiveOut" />
	</Sequence>
	<Sequence name="ActiveBellNoLoop">
		<Animation name="active_03" />
	</Sequence>
	<Sequence name="ActiveThree">
		<Animation name="Active_In" skipIfMissing="true" />
		<Sequence>
			<Loop loops="3">
				<Animation name="Active" />
			</Loop>
		</Sequence>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="ActiveTwo">
		<Animation name="Active_In" skipIfMissing="true" />
		<Sequence>
			<Loop loops="2">
				<Animation name="Active" />
			</Loop>
		</Sequence>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Loop name="SequentialActive2">
		<Sequence>
			<Animation name="ACTIVE_1" />
			<Animation name="ACTIVE_2" />
		</Sequence>
	</Loop>
	<Loop name="SequentialActive3">
		<Sequence>
			<Animation name="ACTIVE_1" />
			<Animation name="ACTIVE_2" />
			<Animation name="ACTIVE_3" />
		</Sequence>
	</Loop>
	<Loop name="SequentialActive03">
		<Sequence>
			<Animation name="ACTIVE_01" />
			<Animation name="ACTIVE_02" />
			<Animation name="ACTIVE_03" />
		</Sequence>
	</Loop>
	<Loop name="SequentialActive4">
		<Sequence>
			<Animation name="ACTIVE_1" />
			<Animation name="ACTIVE_2" />
			<Animation name="ACTIVE_3" />
			<Animation name="ACTIVE_4" />
		</Sequence>
	</Loop>
	<Loop name="XPColliderChargeCheck">
		<Random chanceFormula="System::evaluate('Powerup::XPBonus::CountActive')==0">
			<Controller name="NeutralLoops" />
			<Controller name="QuickActive" />
		</Random>
	</Loop>
	<Loop name="NewYearsBallDrop">
		<Random chanceFormula="NewYearsBallDropped==0">
			<Controller name="Neutral" />
			<Controller name="Active" />
		</Random>
	</Loop>
	<Sequence name="EliteYachtClub_ActiveTop">
		<Animation name="ActiveInTop" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveTop" />
		</Loop>
		<Animation name="ActiveOutTop" skipIfMissing="true" />
	</Sequence>
	<Sequence name="EliteYachtClub_ActiveBottom">
		<Animation name="ActiveInBottom" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveBottom" />
		</Loop>
		<Animation name="ActiveOutBottom" skipIfMissing="true" />
	</Sequence>
	<Sequence name="RocketLaunch_Active">
		<Logic>
			<If expression="or(System::evaluate('Building::RocketLaunchPlatform_Built::Object::Launch')==1, System::evaluate('Building::RocketLaunchPlatform_Farm::Object::Launch')==1)">
				<Animation name="Active_In" />
				<Animation name="Active" script="DSH_Scripts:RocketLaunch_Ignition" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" script="DSH_Scripts:LaunchShip_End" />
			</If>
			<ElseIf expression="System::evaluate('Job::PutOutRocketFuelFires::Active')">
				<Animation name="ACTIVE_3_In" />
				<Loop>
					<Animation name="ACTIVE_3" />
				</Loop>
				<Animation name="ACTIVE_3_Out" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RocketLaunch_Neutral">
		<Logic>
			<If expression="System::evaluate('Job::PutOutRocketFuelFires::Active')">
				<Animation name="ACTIVE_3_In" />
				<Loop>
					<Animation name="ACTIVE_3" />
				</Loop>
				<Animation name="ACTIVE_3_Out" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RocketLaunch_FarmJob">
		<Logic>
			<If expression="System::evaluate('Building::RocketLaunchPlatform_Farm::Object::LaunchedState')==1">
				<Logic>
					<If expression="System::evaluate('Building::RocketLaunchPlatform_Farm::Object::InPlayed')==0">
						<Animation name="Active_2_In" script="DSH_Scripts:RocketLaunchPlatform_JobInPlayed" />
						<Loop>
							<Animation name="ACTIVE_2" />
						</Loop>
					</If>
					<ElseIf expression="System::evaluate('Building::RocketLaunchPlatform_Farm::Object::InPlayed')==1">
						<Loop>
							<Animation name="ACTIVE_2" />
						</Loop>
					</ElseIf>
				</Logic>
			</If>
			<ElseIf expression="System::evaluate('Building::RocketLaunchPlatform_Farm::Object::LaunchedState')==2">
				<Logic>
					<If expression="System::evaluate('Building::RocketLaunchPlatform_Farm::Object::InPlayed')==0">
						<Animation name="Active_In" skipIfMissing="true" />
						<Animation name="Active" />
						<Animation name="Active_Out" skipIfMissing="true" script="DSH_Scripts:RocketLaunchFarm_Explosion" />
						<Animation name="ACTIVE_3_In" script="DSH_Scripts:RocketLaunchPlatform_JobInPlayed" />
						<Loop>
							<Animation name="ACTIVE_3" />
						</Loop>
					</If>
					<ElseIf expression="System::evaluate('Building::RocketLaunchPlatform_Farm::Object::InPlayed')==1">
						<Loop>
							<Animation name="ACTIVE_3" />
						</Loop>
					</ElseIf>
				</Logic>
			</ElseIf>
		</Logic>
	</Sequence>
	<Sequence name="Active15Loops">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop loops="15">
			<Animation name="ACTIVE" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="SubmersibleTop">
		<Logic>
			<If expression="System::evaluate('Land::RealFriend')==0">
				<Logic>
					<If expression="Submersible_Intro">
						<Animation name="ActiveInTop" script="Margeian_Scripts:Submersible_Intro_Done" />
					</If>
					<ElseIf expression="Submersible_Outro">
						<Animation name="ActiveOutTop" script="Margeian_Scripts:Submersible_Outro_Done" />
					</ElseIf>
					<Else>
						<Logic>
							<If expression="Submersible_InJob">
								<Animation name="activebase" />
							</If>
							<Else>
								<Animation name="submersibletop" />
							</Else>
						</Logic>
					</Else>
				</Logic>
			</If>
			<Else>
				<Loop>
					<Animation name="submersibletop" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SubmersibleBottom">
		<Logic>
			<If expression="System::evaluate('Land::RealFriend')==0">
				<Logic>
					<If expression="Submersible_Intro">
						<Animation name="activeinbase" />
					</If>
					<ElseIf expression="Submersible_Outro">
						<Animation name="activeoutbase" />
					</ElseIf>
					<Else>
						<Logic>
							<If expression="Submersible_InJob">
								<Animation name="activebase" />
							</If>
							<Else>
								<Animation name="submersiblebase" />
							</Else>
						</Logic>
					</Else>
				</Logic>
			</If>
			<Else>
				<Loop>
					<Animation name="submersiblebase" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Active5Loops">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop loops="5">
			<Animation name="ACTIVE" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="FrinksMechanoSpiderActive">
		<Logic>
			<If expression="or(System::evaluate('Job::WorkTheControls::Active')==1,System::evaluate('Job::FranticallyWorkTheControls::Active')==1)">
				<Animation name="Workthecontrols_In" />
				<Loop fastBreak="true">
					<Animation name="Workthecontrols" />
				</Loop>
				<Animation name="Workthecontrols_Out" />
			</If>
			<Else>
				<Loop fastBreak="true">
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ConstructionSiteActive">
		<Logic>
			<If expression="or(System::evaluate('Skin::Monument_Stage1::Building::ConstructionSite'),or(System::evaluate('Skin::Monument_Stage2::Building::ConstructionSite'), or(System::evaluate('Skin::Monument_Stage3::Building::ConstructionSite'), or(System::evaluate('Skin::Monument_Stage4::Building::ConstructionSite'), System::evaluate('Skin::Monument_Stage5::Building::ConstructionSite')))))">
				<Loop fastBreak="true">
					<Animation name="Active" />
				</Loop>
			</If>
		</Logic>
	</Sequence>
	<Sequence name="PlasticPrison_ActiveOnOff">
		<Logic>
			<If expression="Object::PlasticPrisonActive">
				<Animation name="Active" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="DonutBoatTop">
		<Animation name="Active_In_Top" skipIfMissing="true" />
		<Animation name="Active_Top" />
		<Animation name="Active_Out_Top" skipIfMissing="true" />
	</Sequence>
	<Sequence name="DonutBoatBase">
		<Animation name="Active_In_Base" skipIfMissing="true" />
		<Animation name="Active_Base" />
		<Animation name="Active_Out_Base" skipIfMissing="true" />
	</Sequence>
	<Sequence name="DrCrabsFactory_Active">
		<Animation name="Active_In" script="Superheroes2_Scripts:DrCrabsFactory_ActiveIn" />
		<Animation name="Active" script="Superheroes2_Scripts:DrCrabsFactory_Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" script="Superheroes2_Scripts:DrCrabsFactory_ActiveOut" />
	</Sequence>
	<Sequence name="DrCrabsFactory_Complete_Active">
		<Animation name="Active_In" script="Superheroes2_Scripts:DrCrabsFactory_Complete_ActiveIn" />
		<Animation name="Active" script="Superheroes2_Scripts:DrCrabsFactory_Complete_Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" script="Superheroes2_Scripts:DrCrabsFactory_Complete_ActiveOut" />
	</Sequence>
	<Sequence name="MultiVac_Active">
		<Logic>
			<If expression="SF_DarkMatters2 || !SciFi_Event">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Animation name="Neutral_Off" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="MultiVac_Neutral">
		<Logic>
			<If expression="SF_DarkMatters2">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Neutral_Off" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="3DPrinter_Craft">
		<Logic expression="System::evaluate('Building::3DPrinter::Object::AnimState')">
			<If expression="1">
				<Sequence>
					<Animation name="Active_In" />
					<Animation name="Rectangle00" />
					<Animation name="Rectangle01" />
					<Animation name="Rectangle02" />
					<Animation name="Rectangle03" />
					<Animation name="Active_Out" />
				</Sequence>
			</If>
			<ElseIf expression="2">
				<Sequence>
					<Animation name="Active_In" />
					<Animation name="Pyramid00" />
					<Animation name="Pyramid01" />
					<Animation name="Pyramid02" />
					<Animation name="Pyramid03" />
					<Animation name="Active_Out" />
				</Sequence>
			</ElseIf>
			<Else>
				<Sequence>
					<Animation name="Active_In" />
					<Animation name="Cube00" />
					<Animation name="Cube01" />
					<Animation name="Cube02" />
					<Animation name="Cube03" />
					<Animation name="Active_Out" />
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="3DPrinterController">
		<Animation name="Active_In" />
		<Logic expression="System::evaluate('Building::3DPrinter::Object::AnimState')">
			<If expression="1">
				<Loop>
					<Sequence>
						<Logic expression="     var currentTime = time() - User::getVariable('Printer_JobStarted');                             var jobTime     = 60 * 120;                             return(min(4,ceil((currentTime / jobTime) * 4)));                             ">
							<If expression="1">
								<Loop>
									<Animation name="Rectangle00" />
								</Loop>
							</If>
							<ElseIf expression="2">
								<Loop>
									<Animation name="Rectangle01" />
								</Loop>
							</ElseIf>
							<ElseIf expression="3">
								<Loop>
									<Animation name="Rectangle02" />
								</Loop>
							</ElseIf>
							<Else>
								<Loop>
									<Animation name="Rectangle03" />
								</Loop>
							</Else>
						</Logic>
					</Sequence>
				</Loop>
			</If>
			<ElseIf expression="2">
				<Loop>
					<Sequence>
						<Logic expression="     var currentTime = time() - User::getVariable('Printer_JobStarted');                             var jobTime     = 60 * 120;                             return(min(4,ceil((currentTime / jobTime) * 4)));                             ">
							<If expression="1">
								<Loop>
									<Animation name="Pyramid00" />
								</Loop>
							</If>
							<ElseIf expression="2">
								<Loop>
									<Animation name="Pyramid01" />
								</Loop>
							</ElseIf>
							<ElseIf expression="3">
								<Loop>
									<Animation name="Pyramid02" />
								</Loop>
							</ElseIf>
							<Else>
								<Loop>
									<Animation name="Pyramid03" />
								</Loop>
							</Else>
						</Logic>
					</Sequence>
				</Loop>
			</ElseIf>
			<Else>
				<Loop>
					<Sequence>
						<Logic expression="     var currentTime = time() - User::getVariable('Printer_JobStarted');                             var jobTime     = 60 * 120;                             return(min(4,ceil((currentTime / jobTime) * 4)));                             ">
							<If expression="1">
								<Loop>
									<Animation name="Cube00" />
								</Loop>
							</If>
							<ElseIf expression="2">
								<Loop>
									<Animation name="Cube01" />
								</Loop>
							</ElseIf>
							<ElseIf expression="3">
								<Loop>
									<Animation name="Cube02" />
								</Loop>
							</ElseIf>
							<Else>
								<Loop>
									<Animation name="Cube03" />
								</Loop>
							</Else>
						</Logic>
					</Sequence>
				</Loop>
			</Else>
		</Logic>
		<Animation name="Active_Out" />
	</Sequence>
	<Sequence name="CryoStasisMemorial">
		<Logic expression="System::evaluate('Building::CryoStasisMemorial::Object::GrampaActive') | (System::evaluate('Building::CryoStasisMemorial::Object::JasperActive')&lt;&lt;1)">
			<If expression="3">
				<Animation name="Active2_In" skipIfMissing="true" />
				<Animation name="Active2" />
				<Animation name="Active2_Out" skipIfMissing="true" />
			</If>
			<ElseIf expression="1">
				<Animation name="Active3_In" skipIfMissing="true" />
				<Animation name="Active3" />
				<Animation name="Active3_Out" skipIfMissing="true" />
			</ElseIf>
			<ElseIf expression="2">
				<Animation name="Active1_In" skipIfMissing="true" />
				<Animation name="Active1" />
				<Animation name="Active1_Out" skipIfMissing="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="HoloNeutralLoops">
		<Loop loops="24">
			<Animation name="Neutral_2" />
		</Loop>
	</Sequence>
	<Loop name="HoloNeutral">
		<Random chance="0.92">
			<Controller name="HoloNeutralLoops" />
			<Animation name="Neutral" randomStartFrame="true" />
		</Random>
	</Loop>
	<Sequence name="PaintedActiveLoops">
		<Loop formula="rand(7)+8">
			<Animation name="Active" />
		</Loop>
	</Sequence>
	<Sequence name="PaintedNeutralLoops">
		<Loop formula="rand(3)+1">
			<Animation name="Neutral" />
		</Loop>
	</Sequence>
	<Loop name="PaintedNeutral">
		<Random chance="0.92">
			<Controller name="PaintedActiveLoops" />
			<Controller name="PaintedNeutralLoops" />
		</Random>
	</Loop>
	<Sequence name="HalfPipe_Active">
		<Logic>
			<If expression="System::evaluate('Job::DoTricksOnTheHalfPipe::Active')">
				<Animation name="Active_2_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active_2" />
				</Loop>
				<Animation name="Active_2_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Animation name="Active_1_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active_1" />
				</Loop>
				<Animation name="Active_1_Out" skipIfMissing="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ClassicAmericanCar_Active_2">
		<Animation name="Active_2" />
	</Sequence>
	<Sequence name="SpringfieldGamesCauldron_Active">
		<Logic>
			<If expression="and(System::evaluate('Building::SpringfieldGamesCauldron::Object::HomerLightCauldron'), System::evaluate('Building::SpringfieldGamesCauldron::Object::State') == 0)">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Logic>
					<If expression="!System::evaluate('Building::SpringfieldGamesCauldron::Object::State')">
						<Animation name="Active_In" skipIfMissing="true" />
						<Loop>
							<Animation name="Active" />
						</Loop>
						<Animation name="Active_Out" skipIfMissing="true" />
					</If>
					<Else>
						<Loop>
							<Animation name="Active" />
						</Loop>
					</Else>
				</Logic>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ActiveNoInOrOut">
		<Loop>
			<Animation name="Active" />
		</Loop>
	</Sequence>
	<Sequence name="ActiveNoInOrOutNoLoop">
		<Animation name="Active" />
	</Sequence>
	<Sequence name="ActiveInOnly">
		<Animation name="Active_In" />
	</Sequence>
	<Sequence name="ActiveOutOnly">
		<Animation name="Active_Out" />
	</Sequence>
	<Sequence name="SpringfieldBowl_FarmJob">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="Cinnabun_Active">
		<Logic>
			<If expression="System::evaluate('Job::GorgeOnCinnamonBuns::Active') || System::evaluate('Job::ContinueGorging::Active')">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Active_2" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Loop name="Active_6">
		<Sequence>
			<Animation name="Active_01" />
			<Animation name="Active_02" />
			<Animation name="Active_03" />
			<Animation name="Active_04" />
			<Animation name="Active_05" />
			<Animation name="Active_06" />
		</Sequence>
	</Loop>
	<Sequence name="Active_2">
		<Loop>
			<Random chance="0.5">
				<Animation name="Active01" />
				<Animation name="Active02" />
			</Random>
		</Loop>
	</Sequence>
	<Sequence name="Active_3">
		<Loop>
			<Random chance="0.33">
				<Animation name="Active01" />
				<Animation name="Active02" />
				<Animation name="Active03" />
			</Random>
		</Loop>
	</Sequence>
	<Sequence name="FightingGiantMonster">
		<Loop>
			<Logic>
				<If expression="!System::evaluate('Game::State::GameState_CustomTouch')">
					<Random chance="0.6">
						<Animation name="Hit" onStart="THOH2016_Scripts_BattleSounds:GiantMonsterHit_PlaySound" />
						<Random chance="0.5">
							<Animation name="Attack" onStart="THOH2016_Scripts_BattleSounds:GiantMonsterAttack1_PlaySound" />
							<Animation name="Attack_2" onStart="THOH2016_Scripts_BattleSounds:GiantMonsterAttack2_PlaySound" />
						</Random>
					</Random>
				</If>
				<Else>
					<Animation name="Neutral" />
				</Else>
			</Logic>
		</Loop>
	</Sequence>
	<Loop name="ImprovisedSnare">
		<Sequence>
			<Loop loops="90">
				<Animation name="Neutral" />
			</Loop>
			<Animation name="Active" />
		</Sequence>
	</Loop>
	<Loop name="GnomeBoxAnimationController">
		<Logic>
			<If expression="System::evaluate('Character::GnomeInYourHome::LandCount')">
				<Animation name="Active" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Loop>
	<Loop name="SpringfieldHengeNeutralController">
		<Logic>
			<If expression="and(dateMday(time(0))==21, or(dateMon(time(0))==12, dateMon(time(0))==6))">
				<Animation name="Active_2" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Loop>
	<Sequence name="DigSite_Neutral">
		<Animation name="Back" loop="true" />
	</Sequence>
	<Sequence name="WildWestPromoBattleFortAttacking">
		<Animation name="Attacking_In" />
		<Loop>
			<Animation name="Attacking_Active" />
		</Loop>
		<Animation name="Attacking_Out" />
	</Sequence>
	<Sequence name="Neutral02">
		<Animation name="Neutral02" loop="true" />
	</Sequence>
	<Sequence name="SpringfieldAirport_AirportActiveController">
		<Animation name="ActiveInAirport" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveAirport" />
		</Loop>
		<Animation name="ActiveOutAirport" skipIfMissing="true" />
	</Sequence>
	<Sequence name="SpringfieldAirport_AirplaneActiveController">
		<Animation name="ActiveInAirplane" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveAirplane" />
		</Loop>
		<Animation name="ActiveOutAirplane" skipIfMissing="true" />
	</Sequence>
	<Sequence name="EiffelTower_Active">
		<Logic>
			<If expression="System::evaluate('Building::EiffelTower::Object::State')==1">
				<Animation name="Active2_In_South" skipIfMissing="true" />
				<Loop>
					<Animation name="Active2_South" />
				</Loop>
				<Animation name="Active2_Out_South" skipIfMissing="true" />
			</If>
			<Else>
				<Animation name="Active_In_South" skipIfMissing="true" />
				<Loop>
					<Animation name="Active_South" />
				</Loop>
				<Animation name="Active_Out_South" skipIfMissing="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Active_01">
		<Loop>
			<Animation name="Active_01" />
		</Loop>
	</Sequence>
	<Sequence name="Active_01_NoLoop">
		<Animation name="Active_01" />
	</Sequence>
	<Sequence name="TrainingPlane_Active">
		<Animation name="Active_2_In" skipIfMissing="true" />
		<Loop>
			<Animation name="Active_2" fastBreak="true" />
		</Loop>
		<Animation name="Active_2_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="EspionageMode_Neutral_InOut">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0 &amp;&amp; System::getGameState() != 'GameState_PlaceBuilding' &amp;&amp; System::getGameState() != 'GameState_Rearrange'">
				<Animation name="Active_In" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOn" />
				<Animation name="ActiveIn" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOn" />
			</If>
			<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="Active_Out" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOff" />
				<Animation name="ActiveOut" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOff" />
			</ElseIf>
			<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="Active" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GlobexCompoundFarmActive">
		<Logic>
			<If expression="EspionageMode!=1">
				<Animation name="Active_In" skipIfMissing="true" />
			</If>
		</Logic>
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Logic>
			<If expression="EspionageMode!=1 || (EspionageMode==1 &amp;&amp; Object::EspionageModeJustFlipped==0)">
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_Simple">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1">
				<Animation name="Active" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_Camera">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1">
				<Animation name="Active" />
				<Loop loops="25">
					<Animation name="Neutral" />
				</Loop>
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_HQ">
		<Logic>
			<If expression="(Object::SkinID==0) || (Object::SkinID==173103) || (Object::SkinID==173109)">
				<Logic>
					<If expression="Land::getVariable('EspionageMode')==1">
						<Animation name="Active" />
					</If>
					<Else>
						<Animation name="Neutral" />
					</Else>
				</Logic>
			</If>
			<Else>
				<Logic>
					<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0">
						<Animation name="Active_In" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOn" />
						<Animation name="ActiveIn" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOn" />
					</If>
					<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
						<Animation name="Active_Out" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOff" />
						<Animation name="ActiveOut" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOff" />
					</ElseIf>
					<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
						<Animation name="Active" />
					</ElseIf>
					<Else>
						<Animation name="Neutral" />
					</Else>
				</Logic>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_TownSquare_Middle">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0">
				<Animation name="Middle_Active_In" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOn_TownSquare" />
			</If>
			<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="Middle_Active_Out" skipIfMissing="true" script="SecretAgents_Scripts:EspionageModeFlippedOff_TownSquare" />
			</ElseIf>
			<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="Middle_Active" />
			</ElseIf>
			<Else>
				<Animation name="Middle" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_TownSquare_North">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0">
				<Animation name="North_Active_In" skipIfMissing="true" />
			</If>
			<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="North_Active_Out" skipIfMissing="true" />
			</ElseIf>
			<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="North_Active" />
			</ElseIf>
			<Else>
				<Animation name="North" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_TownSquare_South">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0">
				<Animation name="South_Active_In" skipIfMissing="true" />
			</If>
			<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="South_Active_Out" skipIfMissing="true" />
			</ElseIf>
			<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="South_Active" />
			</ElseIf>
			<Else>
				<Animation name="South" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_TownSquare_East">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0">
				<Animation name="East_Active_In_" skipIfMissing="true" />
			</If>
			<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="East_Active_Out" skipIfMissing="true" />
			</ElseIf>
			<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="East_Active" />
			</ElseIf>
			<Else>
				<Animation name="East" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageMode_Neutral_TownSquare_West">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==0">
				<Animation name="West_Active_In" skipIfMissing="true" />
			</If>
			<ElseIf expression="Land::getVariable('EspionageMode')==0 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="West_Active_Out" skipIfMissing="true" />
			</ElseIf>
			<ElseIf expression="Land::getVariable('EspionageMode')==1 &amp;&amp; Object::EspionageModeJustFlipped==1">
				<Animation name="West_Active" />
			</ElseIf>
			<Else>
				<Animation name="West" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TownSquare_Middle">
		<Animation name="Middle_Active_In" />
		<Animation name="Middle_Active" />
		<Animation name="Middle_Active_Out" />
	</Sequence>
	<Sequence name="TownSquare_West">
		<Animation name="West_Active_In" />
		<Animation name="West_Active" />
		<Animation name="West_Active_Out" />
	</Sequence>
	<Sequence name="TownSquare_South">
		<Animation name="South_Active_In" />
		<Animation name="South_Active" />
		<Animation name="South_Active_Out" />
	</Sequence>
	<Sequence name="TownSquare_East">
		<Animation name="East_Active_In_" />
		<Animation name="East_Active" />
		<Animation name="East_Active_Out" />
	</Sequence>
	<Sequence name="TownSquare_North">
		<Animation name="North_Active_In" />
		<Animation name="North_Active" />
		<Animation name="North_Active_Out" />
	</Sequence>
	<Sequence name="NothingToSeeHere_Neutral">
		<Logic>
			<If expression="Object::State==0">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Neutral2" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EspionageNeutralActive_Toggle">
		<Logic>
			<If expression="Land::getVariable('EspionageMode')==1">
				<Animation name="Active" />
			</If>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RockAndAHardPlace_Active">
		<Logic>
			<If expression="System::evaluate('Job::ExperienceIrony::Active')">
				<Animation name="Active_In2" skipIfMissing="true" />
				<Loop>
					<Animation name="Active2" fastBreak="true" />
				</Loop>
				<Animation name="Active_Out2" skipIfMissing="true" />
			</If>
			<Else>
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Crowd_Neutral">
		<Logic>
			<If expression="Object::CrowdState==2">
				<Animation name="Neutral02" fastBreak="true" />
			</If>
			<ElseIf expression="Object::CrowdState==1">
				<Animation name="Neutral01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RockStage_OverlayController">
		<Animation name="Active_In" script="Music_Scripts:RockStage_ActiveIn" />
		<Animation name="Active" script="Music_Scripts:RockStage_Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" script="Music_Scripts:RockStage_ActiveOut" />
	</Sequence>
	<Sequence name="PopStage_OverlayController">
		<Animation name="Active_In" script="Music_Scripts:PopStage_ActiveIn" />
		<Animation name="Active" script="Music_Scripts:PopStage_Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" script="Music_Scripts:PopStage_ActiveOut" />
	</Sequence>
	<Sequence name="HipHopStage_OverlayController">
		<Animation name="Active_In" script="Music_Scripts:HipHopStage_ActiveIn" />
		<Animation name="Active" script="Music_Scripts:HipHopStage_Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" script="Music_Scripts:HipHopStage_ActiveOut" />
	</Sequence>
	<Sequence name="RigellianSpaceship_OverlayController_Active">
		<Logic>
			<If expression="Object::Active_In==1">
				<Animation name="Active_In" script="XMAS2017_Scripts:RigellianSpaceship_ActiveIn_Done" fastBreak="true" />
				<Loop>
					<Animation name="Active" fastBreak="true" />
				</Loop>
			</If>
			<Else>
				<Loop>
					<Animation name="Active" fastBreak="true" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RigellianSpaceship_OverlayController_Neutral">
		<Logic>
			<If expression="Object::Active_Out==1">
				<Animation name="Active_Out" script="XMAS2017_Scripts:RigellianSpaceship_ActiveOut_Done" fastBreak="true" />
				<Loop>
					<Animation name="Neutral" fastBreak="true" />
				</Loop>
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" fastBreak="true" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RoyalMyPod_Toggle">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Sequence>
					<Animation name="Active_In" script="MiscScripts:Decoration_ActiveIn_Done" />
				</Sequence>
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Active02" />
				<Animation name="Active_Out" script="MiscScripts:Decoration_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::Active01==1">
				<Animation name="Active01" script="THOH2017_Scripts:RoyalMyPodAnimation_Active02_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==1">
				<Animation name="Album01" />
			</ElseIf>
			<ElseIf expression="Object::State==2">
				<Animation name="Album02" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CornField_Controller">
		<Logic>
			<If expression="greaterThanEQ(1,rand(500))">
				<Animation name="Active01" />
			</If>
			<ElseIf expression="greaterThanEQ(1,rand(500))">
				<Animation name="Active02" />
			</ElseIf>
			<Else>
				<Loop formula="rand(50)">
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="WheatField_Controller">
		<Logic>
			<If expression="greaterThanEQ(1,rand(500))">
				<Animation name="Active" />
			</If>
			<Else>
				<Loop formula="rand(50)">
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldElementary_ParalyzerExplosion">
		<Animation name="Active_Explosion" />
	</Sequence>
	<Sequence name="SpellementaryLibrary_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::OrganizeHerOwnSeries::Active'), System::evaluate('Job::ReadHerOwnSeries::Active'))">
				<Animation name="Active_In_02" skipIfMissing="true" />
				<Loop>
					<Animation name="Active_02" fastBreak="true" />
				</Loop>
				<Animation name="Active_Out_02" skipIfMissing="true" />
			</If>
			<Else>
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ColdTrain_Active">
		<Loop>
			<Animation name="Active_2" />
		</Loop>
	</Sequence>
	<Sequence name="AudienceResearchTable_Active">
		<Loop>
			<Animation name="Active_01" />
		</Loop>
	</Sequence>
	<Sequence name="PoochiesCar_Active">
		<Loop>
			<Logic>
				<If expression="System::evaluate('Character::Instance::Poochie::Object::Visible')==0">
					<Loop>
						<Random>
							<Animation name="Active_1" fastBreak="true" />
							<Animation name="Active_2" fastBreak="true" />
							<Animation name="Active_3" fastBreak="true" />
						</Random>
					</Loop>
				</If>
			</Logic>
		</Loop>
	</Sequence>
	<Sequence name="FireworksFactory_Active">
		<Animation name="Active_In" />
		<Loop>
			<Animation name="Active" fastBreak="true" />
		</Loop>
		<Animation name="Active_Out" onEnd="Poochie_Scripts:FireworksFactory_SetEndDialogueVariable" />
	</Sequence>
	<Sequence name="MegaPlayscape_OverlayController">
		<Animation name="Active_In_01" />
		<Animation name="Active_01" />
		<Loop>
			<Animation name="Active_01" />
		</Loop>
		<Animation name="Active_Out_01" fastBreak="true" script="Homergeddon_Scripts:MegaPlayscape_ActiveOut_01" />
	</Sequence>
	<Sequence name="MegaPlayscape_OverlayControllerAct2">
		<Animation name="Active_In" />
		<Animation name="Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" fastBreak="true" script="Homergeddon_Scripts:MegaPlayscape_ActiveOut" />
	</Sequence>
	<Sequence name="PoppaWheelies_Overlay">
		<Loop>
			<Random>
				<Sequence>
					<Animation name="Active_Ramrod_Idle" fastBreak="true" />
					<Animation name="Active_Ramrod_Active_1" fastBreak="true" />
				</Sequence>
				<Sequence>
					<Animation name="Active_Ramrod_Idle" fastBreak="true" />
					<Animation name="Active_Ramrod_Active_2" fastBreak="true" />
				</Sequence>
				<Sequence>
					<Animation name="Active_Ramrod_Idle" fastBreak="true" />
					<Animation name="Active_Ramrod_Active_3" fastBreak="true" />
				</Sequence>
			</Random>
		</Loop>
	</Sequence>
	<Sequence name="PoppaWheelies_Active">
		<Animation name="Active_In" skipIfMissing="true" />
		<Logic>
			<If expression="System::evaluate('Job::CleanUp::Active')">
				<Sequence>
					<Loop>
						<Random>
							<Sequence>
								<Animation name="Active_Ramrod_Idle" fastBreak="true" />
								<Animation name="Active_Ramrod_Active_1" fastBreak="true" />
							</Sequence>
							<Sequence>
								<Animation name="Active_Ramrod_Idle" fastBreak="true" />
								<Animation name="Active_Ramrod_Active_2" fastBreak="true" />
							</Sequence>
							<Sequence>
								<Animation name="Active_Ramrod_Idle" fastBreak="true" />
								<Animation name="Active_Ramrod_Active_3" fastBreak="true" />
							</Sequence>
						</Random>
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="JunkBase_OverlayController">
		<Animation name="Active_In" />
		<Animation name="Active" />
		<Loop>
			<Animation name="Active" />
		</Loop>
		<Animation name="Active_Out" fastBreak="true" script="Homergeddon_Scripts:JunkBase_ActiveOut" />
	</Sequence>
	<Sequence name="MoHoHouse_Active">
		<Logic>
			<If expression="System::evaluate('Job::EnjoyACocktail_SJ::Active')">
				<Loop>
					<Animation name="Active_01" fastBreak="true" />
				</Loop>
			</If>
			<Else>
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ReeducationCenter_Neutral">
		<Logic>
			<If expression="#program;             var buildingInstance = Land::getFirstInstanceOfObject(Building::find('RonaldReaganReeducationCenter'));             if(!isNULL(buildingInstance))             {                 var roadType = RoadMap::Grid::toString((Object::getGridType(Object::getRootObject(buildingInstance),0,0)));                 return roadType != 'ocean';             }             return false;">
				<Animation name="Moat_Neutral" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ReeducationCenter_Active">
		<Loop>
			<Logic>
				<If expression="#program;                 var buildingInstance = Land::getFirstInstanceOfObject(Building::find('RonaldReaganReeducationCenter'));                 if(!isNULL(buildingInstance))                 {                     var roadType = RoadMap::Grid::toString((Object::getGridType(Object::getRootObject(buildingInstance),0,0)));                     return roadType != 'ocean';                 }                 return false;">
					<Animation name="Moat_Active" />
				</If>
				<Else>
					<Animation name="Active" />
				</Else>
			</Logic>
		</Loop>
	</Sequence>
	<Sequence name="LogTopAnimController">
		<Animation name="LogTop" fastBreak="true" onEnd="ThemePark2018_Scripts:LogRideAnimFinished" />
	</Sequence>
	<Sequence name="LogTopRevAnimController">
		<Animation name="LogTopRev" fastBreak="true" onEnd="ThemePark2018_Scripts:LogRideAnimFinished" />
	</Sequence>
	<Sequence name="LogTopFrontAnimController">
		<Animation name="LogTopFront" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogTopFrontAnimControllerNoEnd">
		<Animation name="LogTopFront" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopFrontRevAnimController">
		<Animation name="LogTopFrontRev" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogTopRevFrontAnimController">
		<Animation name="LogTopRevFront" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogTopBackAnimControllerWithEnd">
		<Animation name="LogTopBack" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogTopRevBackAnimControllerWithEnd">
		<Animation name="LogTopRevBack" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogTopBackAnimController">
		<Animation name="LogTopBack" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopBackRevAnimController">
		<Animation name="LogTopBackRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopRevBackAnimController">
		<Animation name="LogTopRevBack" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomFrontAnimController">
		<Animation name="LogBottomFront" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomFrontRevAnimController">
		<Animation name="LogBottomFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomRevFrontAnimController">
		<Animation name="LogBottomRevFront" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomBackAnimController">
		<Animation name="LogBottomBack" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomBackRevAnimController">
		<Animation name="LogBottomBackRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomRevBackAnimController">
		<Animation name="LogBottomRevBack" fastBreak="true" />
	</Sequence>
	<Sequence name="ZoominatorLogTopAnimController">
		<Animation name="LogTop" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="ZoominatorLogTopRevAnimController">
		<Animation name="LogTopRev" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogBottomRevAnimController">
		<Animation name="LogBottomRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomAnimController">
		<Animation name="LogBottom" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarBottomRevAnimController">
		<Animation name="ScratchyCarBottomRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarBottomFrontRevAnimController">
		<Animation name="ScratchyCarBottomFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarTopFrontRevAnimController">
		<Animation name="ScratchyCarTopFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ItchyCarBottomFrontRevAnimController">
		<Animation name="ItchyCarBottomFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ItchyCarTopFrontRevAnimControllerWithEnd">
		<Animation name="ItchyCarTopFrontRev" fastBreak="true" onEnd="ThemePark2018_Scripts:Injury500AnimFinished" />
	</Sequence>
	<Sequence name="ScratchyCarFrontRevAnimController">
		<Animation name="ScratchyCarFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarBottomAnimController">
		<Animation name="ScratchyCarBottom" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarBottomBackAnimController">
		<Animation name="ScratchyCarBottomBack" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarRevAnimController">
		<Animation name="ScratchyCarRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarAnimController">
		<Animation name="ScratchyCar" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarTopBackAnimController">
		<Animation name="ScratchyCarTopBack" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarTopAnimController">
		<Animation name="ScratchyCarTop" fastBreak="true" />
	</Sequence>
	<Sequence name="ScratchyCarTopRevAnimController">
		<Animation name="ScratchyCarTopRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ItchyCarBottomRevAnimController">
		<Animation name="ItchyCarBottomRev" fastBreak="true" />
	</Sequence>
	<Sequence name="ItchyCarBottomAnimController">
		<Animation name="ItchyCarBottom" fastBreak="true" />
	</Sequence>
	<Sequence name="ItchyCarTopRevAnimController">
		<Animation name="ItchyCarTopRev" fastBreak="true" onEnd="ThemePark2018_Scripts:Injury500AnimFinished" />
	</Sequence>
	<Sequence name="ItchyCarRevAnimController">
		<Animation name="ItchyCarRev" fastBreak="true" onEnd="ThemePark2018_Scripts:Injury500AnimFinished" />
	</Sequence>
	<Sequence name="ItchyCarTopAnimController">
		<Animation name="ItchyCarTop" fastBreak="true" onEnd="ThemePark2018_Scripts:Injury500AnimFinished" />
	</Sequence>
	<Sequence name="HomerRevAnimController">
		<Animation name="HomerRev" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeRevAnimController">
		<Animation name="MargeRev" fastBreak="true" />
	</Sequence>
	<Sequence name="BartRevAnimController">
		<Animation name="BartRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaRevAnimController">
		<Animation name="LisaRev" fastBreak="true" />
	</Sequence>
	<Sequence name="BartFrontRevAnimController">
		<Animation name="BartFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaFrontRevAnimController">
		<Animation name="LisaFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeFrontRevAnimController">
		<Animation name="MargeFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerFrontRevAnimController">
		<Animation name="HomerFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="GenRevAnimController">
		<Animation name="GenRev" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen02RevAnimController">
		<Animation name="Gen02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen02FrontRevAnimController">
		<Animation name="Gen02FrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen01RevAnimController">
		<Animation name="Gen01Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen01FrontRevAnimController">
		<Animation name="Gen01FrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerRev02AnimController">
		<Animation name="HomerRev02" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeRev02AnimController">
		<Animation name="MargeRev02" fastBreak="true" />
	</Sequence>
	<Sequence name="BartRev02AnimController">
		<Animation name="BartRev02" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaRev02AnimController">
		<Animation name="LisaRev02" fastBreak="true" />
	</Sequence>
	<Sequence name="GenRev02AnimController">
		<Animation name="GenRev02" fastBreak="true" />
	</Sequence>
	<Sequence name="Bart02RevAnimController">
		<Animation name="Bart02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="Lisa02RevAnimController">
		<Animation name="Lisa02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="Marge02RevAnimController">
		<Animation name="Marge02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="Homer02RevAnimController">
		<Animation name="Homer02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerAnimController">
		<Animation name="Homer" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeAnimController">
		<Animation name="Marge" fastBreak="true" />
	</Sequence>
	<Sequence name="BartBackAnimController">
		<Animation name="BartBack" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaBackAnimController">
		<Animation name="LisaBack" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen02BackAnimController">
		<Animation name="Gen02Back" fastBreak="true" />
	</Sequence>
	<Sequence name="BartAnimController">
		<Animation name="Bart" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaAnimController">
		<Animation name="Lisa" fastBreak="true" />
	</Sequence>
	<Sequence name="GenAnimController">
		<Animation name="Gen" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen01AnimController">
		<Animation name="Gen01" fastBreak="true" />
	</Sequence>
	<Sequence name="Homer02AnimController">
		<Animation name="Homer02" fastBreak="true" />
	</Sequence>
	<Sequence name="Marge02AnimController">
		<Animation name="Marge02" fastBreak="true" />
	</Sequence>
	<Sequence name="Bart02AnimController">
		<Animation name="Bart02" fastBreak="true" />
	</Sequence>
	<Sequence name="Lisa02AnimController">
		<Animation name="Lisa02" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen02AnimController">
		<Animation name="Gen02" fastBreak="true" />
	</Sequence>
	<Sequence name="GenRev01AnimController">
		<Animation name="GenRev01" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOSTBackAnimController">
		<Animation name="LogTopOSTBack" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOST02AnimController">
		<Animation name="GenOST02" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerOSTAnimController">
		<Animation name="HomerOST" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeOSTAnimController">
		<Animation name="MargeOST" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOSTBackAnimController">
		<Animation name="LogBottomOSTBack" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOSTFrontAnimController">
		<Animation name="LogTopOSTFront" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOST01AnimController">
		<Animation name="GenOST01" fastBreak="true" />
	</Sequence>
	<Sequence name="BartOSTAnimController">
		<Animation name="BartOST" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaOSTAnimController">
		<Animation name="LisaOST" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOSTFrontAnimController">
		<Animation name="LogBottomOSTFront" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopFrontOSTFront02AnimController">
		<Animation name="LogTopFrontOSTFront02" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="GenOST01FrontAnimController">
		<Animation name="GenOST01Front" fastBreak="true" />
	</Sequence>
	<Sequence name="BartOST02AnimController">
		<Animation name="BartOST02" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaOST02AnimController">
		<Animation name="LisaOST02" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomFrontOSTFront02AnimController">
		<Animation name="LogBottomFrontOSTFront02" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopBackOSTFront02AnimController">
		<Animation name="LogTopBackOSTFront02" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOST02FrontAnimController">
		<Animation name="GenOST02Front" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerOST02AnimController">
		<Animation name="HomerOST02" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeOST02AnimController">
		<Animation name="MargeOST02" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomBackOSTFront02AnimController">
		<Animation name="LogBottomBackOSTFront02" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOSTBackRevAnimController">
		<Animation name="LogTopOSTBackRev" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOST02RevAnimController">
		<Animation name="GenOST02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerOST02RevAnimController">
		<Animation name="HomerOST02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeOST02RevAnimController">
		<Animation name="MargeOST02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOSTBackRevAnimController">
		<Animation name="LogBottomOSTBackRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOSTFrontRevAnimController">
		<Animation name="LogTopOSTFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOST01RevAnimController">
		<Animation name="GenOST01Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="BartOST02RevAnimController">
		<Animation name="BartOST02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaOST02RevAnimController">
		<Animation name="LisaOST02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOSTFrontRevAnimController">
		<Animation name="LogBottomOSTFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopFrontOSTFront02RevAnimController">
		<Animation name="LogTopFrontOSTFront02Rev" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="GenOSTFront01RevAnimController">
		<Animation name="GenOSTFront01Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="BartOSTRevAnimController">
		<Animation name="BartOSTRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaOSTRevAnimController">
		<Animation name="LisaOSTRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomFrontOSTFront02RevAnimController">
		<Animation name="LogBottomFrontOSTFront02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopBackOSTFront02RevAnimController">
		<Animation name="LogTopBackOSTFront02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="Gen3OSTFront02RevAnimController">
		<Animation name="Gen3OSTFront02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerOSTRevAnimController">
		<Animation name="HomerOSTRev" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeOSTRevAnimController">
		<Animation name="MargeOSTRev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomBackOSTFront02RevAnimController">
		<Animation name="LogBottomBackOSTFront02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOTSBackAnimController">
		<Animation name="LogTopOTSBack" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOTS02AnimController">
		<Animation name="GenOTS02" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerOTS02AnimController">
		<Animation name="HomerOTS02" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeOTS02AnimController">
		<Animation name="MargeOTS02" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOTSBackAnimController">
		<Animation name="LogBottomOTSBack" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOTSFrontAnimController">
		<Animation name="LogTopOTSFront" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOTS01AnimController">
		<Animation name="GenOTS01" fastBreak="true" />
	</Sequence>
	<Sequence name="BartOTS02AnimController">
		<Animation name="BartOTS02" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaOTS2AnimController">
		<Animation name="LisaOTS2" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOTSFrontAnimController">
		<Animation name="LogBottomOTSFront" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopOTSBackRevAnimController">
		<Animation name="LogTopOTSBackRev" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOTS02RevAnimController">
		<Animation name="GenOTS02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerOTS02RevAnimController">
		<Animation name="HomerOTS02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeOTS02RevAnimController">
		<Animation name="MargeOTS02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogTopRevFrontAnimControllerNoEnd">
		<Animation name="LogTopRevFront" fastBreak="true" />
	</Sequence>
	<Sequence name="GenOTS01RevAnimController">
		<Animation name="GenOTS01Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="BartOTS02RevAnimController">
		<Animation name="BartOTS02Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LisaOTS2RevAnimController">
		<Animation name="LisaOTS2Rev" fastBreak="true" />
	</Sequence>
	<Sequence name="LogBottomOTSFrontRevAnimController">
		<Animation name="LogBottomOTSFrontRev" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeRevFrontAnimController">
		<Animation name="MargeRevFront" fastBreak="true" />
	</Sequence>
	<Sequence name="MargeRevBackAnimController">
		<Animation name="MargeRevBack" fastBreak="true" />
	</Sequence>
	<Sequence name="BartRevFrontAnimController">
		<Animation name="BartRevFront" fastBreak="true" />
	</Sequence>
	<Sequence name="BartRevBackAnimController">
		<Animation name="BartRevBack" fastBreak="true" />
	</Sequence>
	<Sequence name="BartFrontAnimController">
		<Animation name="BartFront" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerFrontAnimController">
		<Animation name="HomerFront" fastBreak="true" />
	</Sequence>
	<Sequence name="HomerBackAnimController">
		<Animation name="HomerBack" fastBreak="true" />
	</Sequence>
	<Sequence name="ZoominatorActiveWithEnd">
		<Animation name="Active" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="ZoominatorActiveRevWithEnd">
		<Animation name="Active_Rev" fastBreak="true" onEnd="ThemePark2018_Scripts:ZoominatorAnimFinished" />
	</Sequence>
	<Sequence name="LogRideActiveWithEnd">
		<Animation name="Active" fastBreak="true" onEnd="ThemePark2018_Scripts:LogRideAnimFinished" />
	</Sequence>
	<Sequence name="LogRideActiveRevWithEnd">
		<Animation name="ActiveRev" fastBreak="true" onEnd="ThemePark2018_Scripts:LogRideAnimFinished" />
	</Sequence>
	<Sequence name="TopOverlayAnimController">
		<Animation name="TopOverlay" fastBreak="true" />
	</Sequence>
	<Sequence name="TopOverlayRevAnimController">
		<Animation name="TopOverlayRev" fastBreak="true" />
	</Sequence>
	<Sequence name="SunBlocker2_Active">
		<Loop>
			<Animation name="Active" />
		</Loop>
	</Sequence>
	<Sequence name="StackingSheep01Controller">
		<Animation name="Active_In_01" fastBreak="true" onEnd="MoesArk_Scripts:StackingSheep_AnimDone" />
		<Animation name="Active_01" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="StackingSheep02Controller">
		<Animation name="Active_In_02" fastBreak="true" onEnd="MoesArk_Scripts:StackingSheep_AnimDone" />
		<Animation name="Active_02" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="StackingSheep03Controller">
		<Animation name="Active_Out" fastBreak="true" onEnd="MoesArk_Scripts:StackingSheep_Init" />
		<Animation name="Neutral" fastBreak="true" />
	</Sequence>
	<Sequence name="DuffMcSharkTankController">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Animation name="Active_In" script="MoesArk_Scripts:DuffMcSharkTank_ActiveIn_Done" />
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Active_Out" script="MoesArk_Scripts:DuffMcSharkTank_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="Active" script="MoesArk_Scripts:DuffMcSharkTank_Active_Done" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CursedForestController">
		<Logic>
			<If expression="System::evaluate('Job::EscapeTheForest::Active')">
				<Sequence>
					<Loop>
						<Random>
							<Animation name="Active_01" fastBreak="true" />
							<Animation name="Active_02" fastBreak="true" />
							<Animation name="Active_03" fastBreak="true" />
						</Random>
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CursedShipActive_Top">
		<Loop>
			<Animation name="Active_Top" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="CursedShipActive">
		<Loop>
			<Animation name="Active_Base" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="Active_Top">
		<Loop>
			<Animation name="Active_Top" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="Active_Base">
		<Loop>
			<Animation name="Active_Base" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="Base">
		<Loop>
			<Animation name="Base" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="SpookyGorgeActive">
		<Loop>
			<Animation name="Tap" />
		</Loop>
	</Sequence>
	<Sequence name="DraculaLaLandEastController">
		<Logic>
			<If expression="System::evaluate('Building::DraculaLaLandSouth::Controller::DraculaLaLandSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="DraculaLaLandSouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="THOH2018_Scripts:DraculalaLandActiveDone" />
	</Sequence>
	<Sequence name="DraculaLaLandEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="CatSleigh_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::DriveTheCatSleigh::Active'), System::evaluate('Job::DriveTheCatSleigh_DCS::Active'), System::evaluate('Job::CompeteInTheSleighRace_CrazyCatLady::Active'), System::evaluate('Job::CompeteInTheSleighRace_MsClaws::Active'))">
				<Animation name="Active_01_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active_01" />
				</Loop>
				<Animation name="Active_01_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="PageantStageController">
		<Logic>
			<If expression="or(or(System::evaluate('Job::ActInAnEnsemble::Active'),System::evaluate('Job::ActInAnEnsemble_Milhouse::Active')),System::evaluate('Job::ActInAnEnsemble_Ralph::Active'))">
				<Animation name="Active_01_In" />
				<Loop>
					<Animation name="Active_01" fastBreak="true" />
				</Loop>
				<Animation name="Active_01_Out" />
			</If>
			<ElseIf expression="System::evaluate('Job::DanceOnStage::Active')">
				<Animation name="Active_In" />
				<Loop>
					<Animation name="Active" fastBreak="true" />
				</Loop>
				<Animation name="Active_Out" />
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::Fly::Active')">
				<Animation name="Active_03_In" />
				<Loop>
					<Animation name="Active_03" fastBreak="true" />
				</Loop>
				<Animation name="Active_03_Out" />
			</ElseIf>
			<Else>
				<Loop>
					<Animation name="Neutral_02" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GreyhoundSleigh_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::DriveTheGreyhoundSleigh::Active'), System::evaluate('Job::DriveTheGreyhoundSleigh_DCS::Active'), System::evaluate('Job::JoinTheRaceForFunToo::Active'))">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SnowMobile_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::DriveTheSnowMobile::Active'), System::evaluate('Job::GoOnAChristmasJoyRide::Active'))">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active_01" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="OriginalBrownHouse_Active">
		<Logic>
			<If expression="System::evaluate('Job::PayTribute::Active')">
				<Animation name="Active_In" onStart="NewYears2019_Scripts:AliceGlickFadeOut" />
				<Loop>
					<Animation name="Active_01" />
				</Loop>
				<Animation name="Active_Out" onStart="NewYears2019_Scripts:AliceGlickFadeIn" />
			</If>
			<ElseIf expression="or(or(System::evaluate('Job::SacrificeBartAndLisa::Active'),System::evaluate('Job::SacrificeBartAndLisa_dual_Lisa::Active')),System::evaluate('Job::SacrificeBartAndLisa_dual_Bart::Active')) == 0">
				<Animation name="Active_In" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" />
			</ElseIf>
		</Logic>
	</Sequence>
	<Sequence name="GolfNDieRetirementVillage_Active">
		<Logic>
			<If expression="System::evaluate('Job::PracticePuttingGame::Active')">
				<Loop>
					<Animation name="Active_01" />
				</Loop>
			</If>
			<Else>
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="FieldTripMemorial_Neutral">
		<Logic>
			<If expression="Object::TapState==0">
				<Animation name="Neutral" fastBreak="true" />
			</If>
			<ElseIf expression="Object::TapState==1">
				<Animation name="Active_01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Active_02" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SkyFingerMonumentController">
		<Logic>
			<If expression="Object::Tapped==1">
				<Animation name="Tap_In" onEnd="StateOfDespair_Scripts:SkyFingerMonument_Tap_In_Done" />
				<Animation name="Tap_Out" onEnd="StateOfDespair_Scripts:SkyFingerMonument_Tap_Out_Done" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TimeSnowboarderDisplay01Controller">
		<Animation name="Active_In_01" fastBreak="true" onEnd="GameOfGames_Scripts:TimeSnowboarderDisplay_AnimDone" />
		<Animation name="Active_01" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="TimeSnowboarderDisplay02Controller">
		<Animation name="Active_In_02" fastBreak="true" onEnd="GameOfGames_Scripts:TimeSnowboarderDisplay_AnimDone" />
		<Animation name="Active_02" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="TimeSnowboarderDisplay03Controller">
		<Animation name="Active_Out" fastBreak="true" onEnd="GameOfGames_Scripts:TimeSnowboarderDisplay_Init" />
		<Animation name="Neutral" fastBreak="true" />
	</Sequence>
	<Sequence name="BlockoDungeon_Active">
		<Logic>
			<If expression="System::evaluate('Job::PracticeSpells_BlockoAngelicaButton::Active')">
				<Loop>
					<Animation name="Active_01" />
				</Loop>
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="MoesExpressLemonade_Active">
		<Logic>
			<If expression="System::evaluate('Job::KeepHisLemonadeTabRunning::Active')">
				<Loop>
					<Animation name="Active_01" />
				</Loop>
			</If>
			<ElseIf expression="System::evaluate('Job::ChugLemonade::Active')">
				<Loop>
					<Animation name="Active_02" />
				</Loop>
			</ElseIf>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="FogburyPortLighthouseAndPier_Active">
		<Logic>
			<If expression="#program;             var buildingInstance = Land::getFirstInstanceOfObject(Building::find('FogburyPortLighthouseAndPier'));             if(!isNULL(buildingInstance))             {                 var roadType = RoadMap::Grid::toString((Object::getGridType(Object::getRootObject(buildingInstance),0,0)));                 return roadType != 'ocean';             }             return false;">
				<Animation name="Land_Active" />
			</If>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="FogburyPortLighthouseAndPier_Neutral">
		<Logic>
			<If expression="#program;             var buildingInstance = Land::getFirstInstanceOfObject(Building::find('FogburyPortLighthouseAndPier'));             if(!isNULL(buildingInstance))             {                 var roadType = RoadMap::Grid::toString((Object::getGridType(Object::getRootObject(buildingInstance),0,0)));                 return roadType != 'ocean';             }             return false;">
				<Animation name="Land_Neutral" />
			</If>
			<Else>
				<Animation name="Neutral" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="UndergroundPiano_Active">
		<Logic>
			<If expression="System::evaluate('Job::PlayAnEmotionalMelody::Active')">
				<Animation name="Active_In" />
				<Loop>
					<Animation name="Active_01" />
				</Loop>
				<Animation name="Active_Out" />
			</If>
			<Else>
				<Animation name="Active_In" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="DeepDarkWoods_ActiveController">
		<Logic>
			<If expression="System::evaluate('Job::ScareAwayPotentialFriends::Active')">
				<Loop>
					<Animation name="Active_01" />
				</Loop>
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CarnabyStreetEastController">
		<Logic>
			<If expression="System::evaluate('Building::CarnabyStreetSouth::Controller::CarnabyStreetSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CarnabyStreetSouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="AbesInToyland_Scripts:CarnabyStreetActiveDone" />
	</Sequence>
	<Sequence name="CarnabyStreetdEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="SimpsonsGingerbreadCouch_Active_Controller">
		<Animation name="Active_In" fastBreak="true" onEnd="AbesInToyland_Scripts:SimpsonsGingerbreadCouch_ActiveInDone" />
		<Animation name="Active" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="SimpsonsGingerbreadCouch_TapOut_Controller">
		<Animation name="Active_Out" fastBreak="true" onEnd="AbesInToyland_Scripts:SimpsonsGingerbreadCouch_ActiveOutDone" />
		<Animation name="Neutral" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="MartianVacation_Active_Controller">
		<Logic>
			<If expression="System::evaluate('Job::PoseForMartianPhoto::Active')">
				<Loop>
					<Animation name="Active_01" />
				</Loop>
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="UltranetEastController">
		<Logic>
			<If expression="System::evaluate('Building::UltranetSouth::Controller:UltranetSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="UltranetSouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="HolidaysofFuturePast_Scripts:UltranetActiveDone" />
	</Sequence>
	<Sequence name="RepairBarbershopWindowController">
		<Logic>
			<If expression="System::evaluate('Job::RepairBarbershopWindow::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active01" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="WaterslideTreeController">
		<Logic expression="System::evaluate('Building::WaterslideTree::Object::MartinBathingActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ShowerComputerController">
		<Logic>
			<If expression="System::evaluate('Job::PlayGamesInTheShower::Active')">
				<Sequence>
					<Loop loops="20">
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
					<Loop>
						<Animation name="Active01" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ArcadeCabinets_Toggle">
		<Logic>
			<If expression="Object::ArcadeCabinetsArrangement==2">
				<Animation name="Tap_02" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ArcadeCabinetsArrangement==1">
				<Animation name="Tap_01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="HouseBoatTopController">
		<Logic expression="System::evaluate('Building::Houseboat::Object::PirateNelsonSwabbing')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="HouseBoatTopActive" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="HouseBoatTop" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Tap_Loop">
		<Animation name="Tap" loop="true" />
	</Sequence>
	<Sequence name="CoolsvilleController">
		<Logic>
			<If expression="System::evaluate('Job::CleanGrubbyKidFingerprints::Active')">
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="MarineOneController">
		<Animation name="Active01In" />
		<Loop>
			<Animation name="Active01" />
		</Loop>
		<Animation name="Active01Out" />
	</Sequence>
	<Sequence name="GrandpaVanHoutensRVController">
		<Animation name="Active01" loop="true" />
	</Sequence>
	<Sequence name="SpringfieldsLittleItalyEastController">
		<Logic>
			<If expression="System::evaluate('Building::SpringfieldsLittleItalySouth::Controller::SpringfieldsLittleItalySouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldsLittleItalySouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="VanHoutens_Scripts:SpringfieldsLittleItalyActiveDone" />
	</Sequence>
	<Sequence name="SpringfieldsLittleItalyEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="GoGoRayController">
		<Logic expression="System::evaluate('Building::GoGoRay::Object::ActivateTheGoGoRayActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active_01" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TortureStandController">
		<Logic expression="System::evaluate('Building::TortureStand::Object::LisaferTortureHomer')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TortureConveyorBeltController">
		<Logic expression="System::evaluate('Building::TortureConveyorBelt::Object::DemonTechnicianDoWhatHeDoesBest')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CursedDeskController">
		<Logic expression="System::evaluate('Building::CursedDesk::Object::LisaGrabbed')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TowneCentreAtSpringfieldeGlenneEastController">
		<Logic>
			<If expression="System::evaluate('Building::TowneCentreAtSpringfieldeGlenneSouth::Controller::TowneCentreAtSpringfieldeGlenneSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TowneCentreAtSpringfieldeGlenneSouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="XMAS2020_Scripts:TowneCentreAtSpringfieldeGlenneActiveDone" />
	</Sequence>
	<Sequence name="TowneCentreAtSpringfieldeGlenneEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="JewishWalkOfFameEastController">
		<Logic>
			<If expression="System::evaluate('Building::JewishWalkOfFameSouth::Controller::JewishWalkOfFameSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="JewishWalkOfFameSouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="XMAS2020_Scripts:JewishWalkOfFameActiveDone" />
	</Sequence>
	<Sequence name="JewishWalkOfFameEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="ToyTownEastController">
		<Logic>
			<If expression="System::evaluate('Building::ToyTownSouth::Controller::ToyTownSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="ToyTownSouth_Active">
		<Animation name="Active_South_In" />
		<Loop>
			<Animation name="Active_South" />
		</Loop>
		<Animation name="Active_South_Out" onEnd="XMAS2020_Scripts:ToyTownActiveDone" />
	</Sequence>
	<Sequence name="ToyTownEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="ScammerVdogVending_Toggle">
		<Logic>
			<If expression="Object::ScammerVdogVendingArrangement==2">
				<Animation name="Tap_02" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ScammerVdogVendingArrangement==1">
				<Animation name="Tap_01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="HomersMotorcycleController">
		<Logic expression="System::evaluate('Building::HomersMotorcycle::Object::TestOutTheHogActive')">
			<If expression="1">
				<Sequence>
					<Loop loops="20">
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
					<Loop>
						<Animation name="HomerJob" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="RiseOfTheRobotsInOut_Toggle">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Animation name="In" script="MiscScripts:Decoration_ActiveIn_Done" />
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Out" script="MiscScripts:Decoration_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="NeutralBot" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TavernTroubleInOut_Toggle">
		<Logic>
			<If expression="Object::ActiveIn==1">
				<Animation name="In" script="MiscScripts:Decoration_ActiveIn_Done" />
			</If>
			<ElseIf expression="Object::ActiveOut==1">
				<Animation name="Out" script="MiscScripts:Decoration_ActiveOut_Done" />
			</ElseIf>
			<ElseIf expression="Object::State==0">
				<Animation name="Neutral" />
			</ElseIf>
			<Else>
				<Animation name="Active" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="MakeAMeatAngelController">
		<Logic expression="System::evaluate('Building::RocketPigs::Object::MakeAMeatAngelActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="MeatAngel" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="EatChiliController">
		<Logic expression="System::evaluate('Building::ChiliBlasters::Object::EatChiliActive')">
			<If expression="1">
				<Sequence>
					<Loop loops="25">
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
					<Loop>
						<Animation name="EatChili" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldBBQFestSouthController">
		<Logic>
			<If expression="System::evaluate('Building::SpringfieldBBQFestNorth::Controller::SpringfieldBBQFestNorth_Active')">
				<Animation name="Active_South" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_South" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldBBQFestEastController">
		<Logic>
			<If expression="System::evaluate('Building::SpringfieldBBQFestNorth::Controller::SpringfieldBBQFestNorth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldBBQFestWestController">
		<Logic>
			<If expression="System::evaluate('Building::SpringfieldBBQFestNorth::Controller::SpringfieldBBQFestNorth_Active')">
				<Animation name="Active_West" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_West" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldBBQFestMidController">
		<Logic>
			<If expression="System::evaluate('Building::SpringfieldBBQFestNorth::Controller::SpringfieldBBQFestNorth_Active')">
				<Animation name="Active_Mid" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_Mid" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SpringfieldBBQFestNorth_Active">
		<Animation name="Active_North" loop="true" fastBreak="true" onEnd="FoodieFight_Scripts:SpringfieldBBQFestActiveDone" />
	</Sequence>
	<Sequence name="SpringfieldBBQFestSouthNeutral">
		<Animation name="Neutral_South" fastBreak="true" />
	</Sequence>
	<Sequence name="SpringfieldBBQFestEastNeutral">
		<Animation name="Neutral_East" fastBreak="true" />
	</Sequence>
	<Sequence name="SpringfieldBBQFestWestNeutral">
		<Animation name="Neutral_West" fastBreak="true" />
	</Sequence>
	<Sequence name="SpringfieldBBQFestMidNeutral">
		<Animation name="Neutral_Mid" fastBreak="true" />
	</Sequence>
	<Sequence name="GenericTwoWay_Toggle">
		<Logic>
			<If expression="Object::State==0">
				<Animation name="Neutral" />
			</If>
			<Else>
				<Animation name="Toggle01" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Generic_Three_Way_Toggle">
		<Logic>
			<If expression="Object::ToggleState==2">
				<Animation name="Tap02" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ToggleState==1">
				<Animation name="Tap01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GenericThreeWayToggle_Tap1Tap2">
		<Logic>
			<If expression="Object::ToggleState==2">
				<Animation name="Tap2" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ToggleState==1">
				<Animation name="Tap1" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Generic_Three_Way_Toggle0102">
		<Logic>
			<If expression="Object::ToggleState==2">
				<Animation name="Toggle01" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ToggleState==1">
				<Animation name="Toggle02" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Generic_Three_Way_Toggle_0102">
		<Logic>
			<If expression="Object::ToggleState==2">
				<Animation name="Toggle_01" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ToggleState==1">
				<Animation name="Toggle_02" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="Generic_Four_Way_Toggle_0102">
		<Logic>
			<If expression="Object::ToggleState==3">
				<Animation name="Toggle_03" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ToggleState==2">
				<Animation name="Toggle_02" fastBreak="true" />
			</ElseIf>
			<ElseIf expression="Object::ToggleState==1">
				<Animation name="Toggle_01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="JogyesaTempleController">
		<Logic expression="System::evaluate('Building::JogyesaTemple::Object::DalaiLamaSunbathingActive')">
			<If expression="1">
				<Sequence>
					<Loop loops="20">
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
					<Loop>
						<Animation name="Sunbathe" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="AncientMultiplayerGameController">
		<Logic expression="System::evaluate('Building::AncientMultiplayerGame::Object::PlayTheAncientMultiplayerGameActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="PlayGame" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CookieCastleController">
		<Logic expression="System::evaluate('Building::CookieCastle::Object::EatCookieCastleActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="EatCookieCastle" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Animation name="Active_In" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="PeopleCatcherTruckController">
		<Random>
			<Animation name="Tap1" />
			<Animation name="Tap2" />
			<Animation name="Tap3" />
		</Random>
	</Sequence>
	<Sequence name="BionautShipController">
		<Logic expression="System::evaluate('Building::BionautShip::Object::MargeEscapeActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="MargeJob" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" fastBreak="true" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GeriatricParkGateSouthController">
		<Logic expression="System::evaluate('Building::GeriatricParkFrontGate::Object::GateTappedToOpen')">
			<If expression="1">
				<Animation name="GeriatricParkGateSouth_Tap" fastBreak="true" onEnd="THOHXXXII_Scripts:GPGateAnimDone" />
			</If>
			<Else>
				<Loop>
					<Animation name="GeriatricParkGateSouth" fastBreak="true" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="GeriatricParkGateEastController">
		<Logic expression="System::evaluate('Building::GeriatricParkFrontGate::Object::GateTappedToOpen')">
			<If expression="1">
				<Animation name="GeriatricParkGateEast_Tap" fastBreak="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="GeriatricParkGateEast" fastBreak="true" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="FrontierWagon_Toggle">
		<Logic>
			<If expression="Object::FrontierWagonArrangement==2">
				<Animation name="Toggle01" fastBreak="true" />
			</If>
			<ElseIf expression="Object::FrontierWagonArrangement==1">
				<Animation name="Toggle02" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="FrontierTownEastController">
		<Logic>
			<If expression="System::evaluate('Building::FrontierTownSouth::Controller::FrontierTownSouth_Active')">
				<Animation name="Active_In_East" />
				<Loop>
					<Animation name="Active_East" fastBreak="true" />
				</Loop>
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="FrontierTownSouth_Active">
		<Animation name="Active_In_South" />
		<Animation name="Active_South" loop="true" fastBreak="true" onEnd="NorthwardBound_Scripts:FrontTownActiveDone" />
		<Animation name="Active_Out_South" />
	</Sequence>
	<Sequence name="FrontierTownEast_Out">
		<Animation name="Active_Out_East" />
		<Animation name="Neutral_East" />
	</Sequence>
	<Sequence name="IansCarController">
		<Logic expression="System::evaluate('Building::IansCar::Object::IansCarActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active01" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Neutral" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="WhiteWitchBurnsSleigh_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::CompeteInTheSleighRace_Burns::Active'), System::evaluate('Job::DriveTheSleigh_Burns::Active'), System::evaluate('Job::DriveTheSleigh_BurnsWhiteWitch::Active'), System::evaluate('Job::FlyTheSleigh::Active'))">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="KrustySleigh_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::CompeteInTheSleighRace_Krusty::Active'), System::evaluate('Job::DriveTheSleigh_Krusty::Active'))">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SideshowMelSleigh_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::CompeteInTheSleighRace_SideshowMel::Active'), System::evaluate('Job::DriveTheSleigh_SideshowMel::Active'))">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TheRichTexanSleigh_Active">
		<Logic>
			<If expression="or(System::evaluate('Job::CompeteInTheSleighRace_TheRichTexan::Active'), System::evaluate('Job::DriveTheSleigh_TheRichTexan::Active'))">
				<Animation name="Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="Active" />
				</Loop>
				<Animation name="Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="HomersSnowmobileController">
		<Logic expression="System::evaluate('Building::HomersSnowmobile::Object::HomerRidingSnowmobileActive')">
			<If expression="1">
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Loop>
					<Animation name="Neutral" fastBreak="true" />
				</Loop>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TheActualNorthPoleEastController">
		<Logic>
			<If expression="System::evaluate('Building::TheActualNorthPoleSouth::Controller::TheActualNorthPoleSouth_Active')">
				<Animation name="Active_East" fastBreak="true" />
			</If>
			<Else>
				<Animation name="Neutral_East" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TheActualNorthPoleSouth_Active">
		<Animation name="Active_South" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="CircusSignSouthController">
		<Logic expression="System::evaluate('Building::CircusSign::Object::State')">
			<If expression="1">
				<Animation name="CircusSignSouth_Tap" fastBreak="true" />
			</If>
			<Else>
				<Animation name="CircusSignSouth" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="CircusSignEastController">
		<Logic expression="System::evaluate('Building::CircusSign::Object::State')">
			<If expression="1">
				<Animation name="CircusSignEast_Tap" fastBreak="true" />
			</If>
			<Else>
				<Animation name="CircusSignEast" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="DemoDerbySignSouthController">
		<Logic expression="System::evaluate('Building::SpringfieldDemoDerbySign::Object::SouthState')">
			<If expression="0">
				<Animation name="SpringfieldDemoDerbySignSouth_Neutral" fastBreak="true" />
			</If>
			<If expression="1">
				<Animation name="SpringfieldDemoDerbySignSouth_ActiveIn" fastBreak="true" onStart="HellOnWheels_Scripts:DemoDerbySignSouth_TransitionDone" />
			</If>
			<If expression="2">
				<Animation name="SpringfieldDemoDerbySignSouth_Active" fastBreak="true" />
			</If>
			<If expression="3">
				<Animation name="SpringfieldDemoDerbySignSouth_ActiveOut" fastBreak="true" onStart="HellOnWheels_Scripts:DemoDerbySignSouth_TransitionDone" />
			</If>
		</Logic>
	</Sequence>
	<Sequence name="DemoDerbySignEastController">
		<Logic expression="System::evaluate('Building::SpringfieldDemoDerbySign::Object::EastState')">
			<If expression="0">
				<Animation name="SpringfieldDemoDerbySignEast_Neutral" fastBreak="true" />
			</If>
			<If expression="1">
				<Animation name="SpringfieldDemoDerbySignEast_ActiveIn" fastBreak="true" onStart="HellOnWheels_Scripts:DemoDerbySignEast_TransitionDone" />
			</If>
			<If expression="2">
				<Animation name="SpringfieldDemoDerbySignEast_Active" fastBreak="true" />
			</If>
			<If expression="3">
				<Animation name="SpringfieldDemoDerbySignEast_ActiveOut" fastBreak="true" onStart="HellOnWheels_Scripts:DemoDerbySignEast_TransitionDone" />
			</If>
		</Logic>
	</Sequence>
	<Sequence name="WrangleEscapingPetsController">
		<Logic>
			<If expression="System::evaluate('Job::WrangleEscapingPets::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="WrangleEscapingPets" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<ElseIf expression="System::evaluate('Job::WrangleEscapingPetsTEMP::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="WrangleEscapingPets" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="MtSplashmoreActive">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop>
			<Random>
				<Animation name="Active_01" />
				<Animation name="Active_02" />
				<Animation name="Active_03" />
			</Random>
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="TarotTableActiveController">
		<Logic>
			<If expression="System::evaluate('Job::ReadTarotCardsDual::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active01" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<ElseIf expression="System::evaluate('Job::ReadFortunes::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active01" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadTarotCardsFTDual::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active02" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadTarotCardsFTDual::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active02" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadTarotCards::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active03" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadFortunesOpalSolo::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active03" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadTarotCardsTEMP::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active03" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadTarotCardsFT::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active04" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::ReadFortunesFTSolo::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="Active04" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Tap" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="McGrewOvenController">
		<Animation name="Active_In" skipIfMissing="true" />
		<Logic>
			<If expression="System::evaluate('Job::BumpIntoAnOldFriend::Active')">
				<Sequence>
					<Loop loops="3">
						<Animation name="Active" fastBreak="true" />
					</Loop>
					<Loop>
						<Random chance="0.9">
							<Animation name="JobActive1" fastBreak="true" />
							<Animation name="JobActive2" fastBreak="true" />
						</Random>
					</Loop>
				</Sequence>
			</If>
			<ElseIf expression="System::evaluate('Job::BumpIntoAnOldFriendTEMP::Active')">
				<Sequence>
					<Loop loops="3">
						<Animation name="Active" fastBreak="true" />
					</Loop>
					<Loop>
						<Random chance="0.9">
							<Animation name="JobActive1" fastBreak="true" />
							<Animation name="JobActive2" fastBreak="true" />
						</Random>
					</Loop>
				</Sequence>
			</ElseIf>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="JamDivinelyController">
		<Logic>
			<If expression="System::evaluate('Job::JamDivinely_Beethoven::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="JamDivinely" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<ElseIf expression="System::evaluate('Job::JamDivinelyTEMP::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="JamDivinely" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<ElseIf expression="System::evaluate('Job::JamDivinelyTEMP2::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="JamDivinely" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="DoSomeWhitewashingFenceController">
		<Logic>
			<If expression="System::evaluate('Job::DoSomeWhitewashing_Fence::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="DoSomeWhiteWashing" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="SMM_PlayStage">
		<Loop>
			<Animation name="ElementaryPlayStage" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="SpringfieldChristmasTreeFarmSouth_Active">
		<Animation name="South_Active_In" skipIfMissing="true" />
		<Loop>
			<Animation name="South_Active" fastBreak="true" />
		</Loop>
		<Animation name="South_Active_Out" skipIfMissing="true" onStart="THOHXXXIV_Scripts:SpringfieldChristmasTreeFarm_ActiveDone" />
	</Sequence>
	<Sequence name="SpringfieldChristmasTreeFarmEast_Controller">
		<Logic>
			<If expression="System::evaluate('Building::SpringfieldChristmasTreeFarmSouth::Controller::SpringfieldChristmasTreeFarmSouth_Active')">
				<Animation name="East_Active_In" skipIfMissing="true" />
				<Loop>
					<Animation name="East_Active" fastBreak="true" />
				</Loop>
				<Animation name="East_Active_Out" skipIfMissing="true" />
			</If>
			<Else>
				<Animation name="East_Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="HedgeBushController">
		<Loop loops="30">
			<Animation name="Neutral" />
		</Loop>
		<Loop>
			<Animation name="UseTheHedgeBush" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="HomerWhaleController">
		<Animation name="Active_In" skipIfMissing="true" />
		<Animation name="ActiveTop" />
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="HomerWhaleActive">
		<Animation name="Active_In" skipIfMissing="true" />
		<Loop>
			<Animation name="ActiveTop" fastBreak="true" />
		</Loop>
		<Animation name="Active_Out" skipIfMissing="true" />
	</Sequence>
	<Sequence name="HomerWhaleBase">
		<Loop>
			<Animation name="HomerWhaleBase" fastBreak="true" />
		</Loop>
	</Sequence>
	<Sequence name="VentHerFrustrationsController">
		<Logic>
			<If expression="System::evaluate('Job::VentHerFrustrations::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop>
						<Animation name="VentHerFrustrations" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="TimeMobileController">
		<Logic>
			<If expression="System::evaluate('Job::RepairTheTimeMobile::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop loops="30">
						<Animation name="Neutral" />
					</Loop>
					<Loop>
						<Animation name="RepairTheTimeMobile" fastBreak="true" />
					</Loop>
				</Sequence>
			</If>
			<ElseIf expression="System::evaluate('Job::RepairTheTimeMobile_TEMP::Active')">
				<Sequence>
					<Animation name="Active" fastBreak="true" />
					<Loop loops="30">
						<Animation name="Neutral" />
					</Loop>
					<Loop>
						<Animation name="RepairTheTimeMobile" fastBreak="true" />
					</Loop>
				</Sequence>
			</ElseIf>
			<Else>
				<Sequence>
					<Loop>
						<Animation name="Active" fastBreak="true" />
					</Loop>
				</Sequence>
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="PieWall01Controller">
		<Animation name="Active_In_01" fastBreak="true" onEnd="FearsOfAClown_Scripts:PieWall_AnimDone" />
		<Animation name="Active_01" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="PieWall02Controller">
		<Animation name="Active_In_02" fastBreak="true" onEnd="FearsOfAClown_Scripts:PieWall_AnimDone" />
		<Animation name="Active_02" loop="true" fastBreak="true" />
	</Sequence>
	<Sequence name="PieWall03Controller">
		<Animation name="Active_Out" fastBreak="true" onEnd="FearsOfAClown_Scripts:PieWall_Init" />
		<Animation name="Neutral" fastBreak="true" />
	</Sequence>
	<Sequence name="BlazingGuyController">
		<Random chance="0.5">
			<Sequence>
				<Animation name="Active_In_01" fastBreak="true" />
				<Loop>
					<Animation name="Active_01" fastBreak="true" />
				</Loop>
				<Animation name="Active_Out_01" fastBreak="true" />
			</Sequence>
			<Sequence>
				<Animation name="Active_In_02" fastBreak="true" />
				<Loop>
					<Animation name="Active_02" fastBreak="true" />
				</Loop>
				<Animation name="Active_Out_02" fastBreak="true" />
			</Sequence>
		</Random>
	</Sequence>
	<Sequence name="Generic_Four_Way_Tap_010203">
		<Logic>
			<If expression="Object::ToggleState==3">
				<Animation name="Tap03" fastBreak="true" />
			</If>
			<ElseIf expression="Object::ToggleState==2">
				<Animation name="Tap02" fastBreak="true" />
			</ElseIf>
			<ElseIf expression="Object::ToggleState==1">
				<Animation name="Tap01" fastBreak="true" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
	<Sequence name="StreetLightController">
		<Logic>
			<If expression="Object::State==0 &amp;&amp; Object::PlayTrans==0">
				<Animation name="Neutral" fastBreak="true" />
			</If>
			<ElseIf expression="Object::State==1 &amp;&amp; Object::PlayTrans==0">
				<Animation name="Active_01" fastBreak="true" />
			</ElseIf>
			<ElseIf expression="Object::State==2 &amp;&amp; Object::PlayTrans==0">
				<Animation name="Active_02" fastBreak="true" />
			</ElseIf>
			<ElseIf expression="Object::State==1 &amp;&amp; Object::PlayTrans==1">
				<Animation name="Active_In_01" fastBreak="true" onStart="ABartFuture_Scripts:StreetLight_AnimDone" />
			</ElseIf>
			<ElseIf expression="Object::State==2 &amp;&amp; Object::PlayTrans==1">
				<Animation name="Active_In_02" fastBreak="true" onStart="ABartFuture_Scripts:StreetLight_AnimDone" />
			</ElseIf>
			<ElseIf expression="Object::State==0 &amp;&amp; Object::PlayTrans==1">
				<Animation name="Active_Out" fastBreak="true" onStart="ABartFuture_Scripts:StreetLight_AnimDone" />
			</ElseIf>
			<Else>
				<Animation name="Neutral" fastBreak="true" />
			</Else>
		</Logic>
	</Sequence>
</BuildingControllers>